
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.10.1
 * Query Engine version: 9b628578b3b7cae625e8c927178f15a170e74a9c
 */
Prisma.prismaVersion = {
  client: "6.10.1",
  engine: "9b628578b3b7cae625e8c927178f15a170e74a9c"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ClienteScalarFieldEnum = {
  codCliente: 'codCliente',
  nombreCliente: 'nombreCliente',
  dni: 'dni',
  telefono: 'telefono',
  fechaHoraBajaCliente: 'fechaHoraBajaCliente',
  codUsuario: 'codUsuario',
  codListaFavorito: 'codListaFavorito'
};

exports.Prisma.UsuarioScalarFieldEnum = {
  codUsuario: 'codUsuario',
  nombreUsuario: 'nombreUsuario',
  contraseñaUsuario: 'contraseñaUsuario',
  emailUsuario: 'emailUsuario',
  fechaRegistroUsuario: 'fechaRegistroUsuario',
  codRolUsuario: 'codRolUsuario'
};

exports.Prisma.RolUsuarioScalarFieldEnum = {
  codRolUsuario: 'codRolUsuario',
  nombreRolUsuario: 'nombreRolUsuario',
  fechaHoraBajaRol: 'fechaHoraBajaRol',
  permisoUsuario: 'permisoUsuario',
  activo: 'activo',
  verificado: 'verificado',
  tokenVerificacion: 'tokenVerificacion'
};

exports.Prisma.DireccionScalarFieldEnum = {
  codigoDireccion: 'codigoDireccion',
  calle: 'calle',
  ciudad: 'ciudad',
  localidad: 'localidad',
  pais: 'pais',
  codigoPostal: 'codigoPostal',
  codCliente: 'codCliente'
};

exports.Prisma.PedidoScalarFieldEnum = {
  codPedido: 'codPedido',
  impuestoSobreVenta: 'impuestoSobreVenta',
  envioGratuito: 'envioGratuito',
  montoTotal: 'montoTotal',
  fechaAltaPedido: 'fechaAltaPedido',
  codCliente: 'codCliente',
  codCarritoCompra: 'codCarritoCompra',
  codEstadoPedido: 'codEstadoPedido'
};

exports.Prisma.EstadoPedidoScalarFieldEnum = {
  codEstadoPedido: 'codEstadoPedido',
  nombreEstadoPedido: 'nombreEstadoPedido',
  fechaHoraBajaEP: 'fechaHoraBajaEP'
};

exports.Prisma.CarritoComprasScalarFieldEnum = {
  codCarritoCompra: 'codCarritoCompra',
  montoCarritoCompra: 'montoCarritoCompra',
  codPedido: 'codPedido'
};

exports.Prisma.ListaFavoritoScalarFieldEnum = {
  codListaFavorito: 'codListaFavorito',
  nombreListaFavorito: 'nombreListaFavorito',
  codCliente: 'codCliente'
};

exports.Prisma.ArticuloScalarFieldEnum = {
  codArticulo: 'codArticulo',
  nombreArticulo: 'nombreArticulo',
  descripcion: 'descripcion',
  stock: 'stock',
  precio: 'precio',
  codCategoria: 'codCategoria'
};

exports.Prisma.CategoriaScalarFieldEnum = {
  codCategoria: 'codCategoria',
  nombreCategoria: 'nombreCategoria',
  descripcion: 'descripcion',
  fechaBajaCategoria: 'fechaBajaCategoria'
};

exports.Prisma.ArticuloPedidoScalarFieldEnum = {
  cantidadArtPed: 'cantidadArtPed',
  nroRenglon: 'nroRenglon',
  montoArticuloPe: 'montoArticuloPe',
  PrecioUnitario: 'PrecioUnitario',
  codPedido: 'codPedido',
  codCarritoCompra: 'codCarritoCompra',
  codArticulo: 'codArticulo'
};

exports.Prisma.EnvioPedidoScalarFieldEnum = {
  codEnvio: 'codEnvio',
  empresaEnvio: 'empresaEnvio',
  costoEnvio: 'costoEnvio',
  fechaSalida: 'fechaSalida',
  fechaEntregaEstimada: 'fechaEntregaEstimada',
  fechaEntregaBaja: 'fechaEntregaBaja',
  codEstadoEnvio: 'codEstadoEnvio',
  codigoDireccion: 'codigoDireccion'
};

exports.Prisma.EstadoEnvioScalarFieldEnum = {
  codEstadoEnvio: 'codEstadoEnvio',
  nombreEstadoEnvio: 'nombreEstadoEnvio',
  fechaHoraBajaEE: 'fechaHoraBajaEE'
};

exports.Prisma.MedioPagoScalarFieldEnum = {
  codMedioPago: 'codMedioPago',
  nombreTipoMedioPago: 'nombreTipoMedioPago',
  fechaHoraBajaMedioPago: 'fechaHoraBajaMedioPago'
};

exports.Prisma.PagoScalarFieldEnum = {
  codPago: 'codPago',
  nombreTipoMedioPago: 'nombreTipoMedioPago',
  montoPagado: 'montoPagado',
  transaccionId: 'transaccionId',
  fechaHoraPago: 'fechaHoraPago',
  codMedioPago: 'codMedioPago',
  codEstadoPago: 'codEstadoPago'
};

exports.Prisma.EstadoPagoScalarFieldEnum = {
  codEstadoPago: 'codEstadoPago',
  nombreEstadoPago: 'nombreEstadoPago',
  fechaHoraBajaEP: 'fechaHoraBajaEP'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Cliente: 'Cliente',
  Usuario: 'Usuario',
  RolUsuario: 'RolUsuario',
  Direccion: 'Direccion',
  Pedido: 'Pedido',
  EstadoPedido: 'EstadoPedido',
  CarritoCompras: 'CarritoCompras',
  ListaFavorito: 'ListaFavorito',
  Articulo: 'Articulo',
  Categoria: 'Categoria',
  ArticuloPedido: 'ArticuloPedido',
  EnvioPedido: 'EnvioPedido',
  EstadoEnvio: 'EstadoEnvio',
  MedioPago: 'MedioPago',
  Pago: 'Pago',
  EstadoPago: 'EstadoPago'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
