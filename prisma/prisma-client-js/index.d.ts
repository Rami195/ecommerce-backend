
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Cliente
 * 
 */
export type Cliente = $Result.DefaultSelection<Prisma.$ClientePayload>
/**
 * Model Usuario
 * 
 */
export type Usuario = $Result.DefaultSelection<Prisma.$UsuarioPayload>
/**
 * Model RolUsuario
 * 
 */
export type RolUsuario = $Result.DefaultSelection<Prisma.$RolUsuarioPayload>
/**
 * Model Direccion
 * 
 */
export type Direccion = $Result.DefaultSelection<Prisma.$DireccionPayload>
/**
 * Model Pedido
 * 
 */
export type Pedido = $Result.DefaultSelection<Prisma.$PedidoPayload>
/**
 * Model EstadoPedido
 * 
 */
export type EstadoPedido = $Result.DefaultSelection<Prisma.$EstadoPedidoPayload>
/**
 * Model CarritoCompras
 * 
 */
export type CarritoCompras = $Result.DefaultSelection<Prisma.$CarritoComprasPayload>
/**
 * Model ListaFavorito
 * 
 */
export type ListaFavorito = $Result.DefaultSelection<Prisma.$ListaFavoritoPayload>
/**
 * Model Articulo
 * 
 */
export type Articulo = $Result.DefaultSelection<Prisma.$ArticuloPayload>
/**
 * Model Categoria
 * 
 */
export type Categoria = $Result.DefaultSelection<Prisma.$CategoriaPayload>
/**
 * Model ArticuloPedido
 * 
 */
export type ArticuloPedido = $Result.DefaultSelection<Prisma.$ArticuloPedidoPayload>
/**
 * Model EnvioPedido
 * 
 */
export type EnvioPedido = $Result.DefaultSelection<Prisma.$EnvioPedidoPayload>
/**
 * Model EstadoEnvio
 * 
 */
export type EstadoEnvio = $Result.DefaultSelection<Prisma.$EstadoEnvioPayload>
/**
 * Model MedioPago
 * 
 */
export type MedioPago = $Result.DefaultSelection<Prisma.$MedioPagoPayload>
/**
 * Model Pago
 * 
 */
export type Pago = $Result.DefaultSelection<Prisma.$PagoPayload>
/**
 * Model EstadoPago
 * 
 */
export type EstadoPago = $Result.DefaultSelection<Prisma.$EstadoPagoPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Clientes
 * const clientes = await prisma.cliente.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Clientes
   * const clientes = await prisma.cliente.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.cliente`: Exposes CRUD operations for the **Cliente** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Clientes
    * const clientes = await prisma.cliente.findMany()
    * ```
    */
  get cliente(): Prisma.ClienteDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.usuario`: Exposes CRUD operations for the **Usuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuario.findMany()
    * ```
    */
  get usuario(): Prisma.UsuarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.rolUsuario`: Exposes CRUD operations for the **RolUsuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RolUsuarios
    * const rolUsuarios = await prisma.rolUsuario.findMany()
    * ```
    */
  get rolUsuario(): Prisma.RolUsuarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.direccion`: Exposes CRUD operations for the **Direccion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Direccions
    * const direccions = await prisma.direccion.findMany()
    * ```
    */
  get direccion(): Prisma.DireccionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.pedido`: Exposes CRUD operations for the **Pedido** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pedidos
    * const pedidos = await prisma.pedido.findMany()
    * ```
    */
  get pedido(): Prisma.PedidoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.estadoPedido`: Exposes CRUD operations for the **EstadoPedido** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EstadoPedidos
    * const estadoPedidos = await prisma.estadoPedido.findMany()
    * ```
    */
  get estadoPedido(): Prisma.EstadoPedidoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.carritoCompras`: Exposes CRUD operations for the **CarritoCompras** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CarritoCompras
    * const carritoCompras = await prisma.carritoCompras.findMany()
    * ```
    */
  get carritoCompras(): Prisma.CarritoComprasDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.listaFavorito`: Exposes CRUD operations for the **ListaFavorito** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ListaFavoritos
    * const listaFavoritos = await prisma.listaFavorito.findMany()
    * ```
    */
  get listaFavorito(): Prisma.ListaFavoritoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.articulo`: Exposes CRUD operations for the **Articulo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Articulos
    * const articulos = await prisma.articulo.findMany()
    * ```
    */
  get articulo(): Prisma.ArticuloDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.categoria`: Exposes CRUD operations for the **Categoria** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Categorias
    * const categorias = await prisma.categoria.findMany()
    * ```
    */
  get categoria(): Prisma.CategoriaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.articuloPedido`: Exposes CRUD operations for the **ArticuloPedido** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ArticuloPedidos
    * const articuloPedidos = await prisma.articuloPedido.findMany()
    * ```
    */
  get articuloPedido(): Prisma.ArticuloPedidoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.envioPedido`: Exposes CRUD operations for the **EnvioPedido** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EnvioPedidos
    * const envioPedidos = await prisma.envioPedido.findMany()
    * ```
    */
  get envioPedido(): Prisma.EnvioPedidoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.estadoEnvio`: Exposes CRUD operations for the **EstadoEnvio** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EstadoEnvios
    * const estadoEnvios = await prisma.estadoEnvio.findMany()
    * ```
    */
  get estadoEnvio(): Prisma.EstadoEnvioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.medioPago`: Exposes CRUD operations for the **MedioPago** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MedioPagos
    * const medioPagos = await prisma.medioPago.findMany()
    * ```
    */
  get medioPago(): Prisma.MedioPagoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.pago`: Exposes CRUD operations for the **Pago** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pagos
    * const pagos = await prisma.pago.findMany()
    * ```
    */
  get pago(): Prisma.PagoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.estadoPago`: Exposes CRUD operations for the **EstadoPago** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EstadoPagos
    * const estadoPagos = await prisma.estadoPago.findMany()
    * ```
    */
  get estadoPago(): Prisma.EstadoPagoDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.10.1
   * Query Engine version: 9b628578b3b7cae625e8c927178f15a170e74a9c
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Cliente: 'Cliente',
    Usuario: 'Usuario',
    RolUsuario: 'RolUsuario',
    Direccion: 'Direccion',
    Pedido: 'Pedido',
    EstadoPedido: 'EstadoPedido',
    CarritoCompras: 'CarritoCompras',
    ListaFavorito: 'ListaFavorito',
    Articulo: 'Articulo',
    Categoria: 'Categoria',
    ArticuloPedido: 'ArticuloPedido',
    EnvioPedido: 'EnvioPedido',
    EstadoEnvio: 'EstadoEnvio',
    MedioPago: 'MedioPago',
    Pago: 'Pago',
    EstadoPago: 'EstadoPago'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "cliente" | "usuario" | "rolUsuario" | "direccion" | "pedido" | "estadoPedido" | "carritoCompras" | "listaFavorito" | "articulo" | "categoria" | "articuloPedido" | "envioPedido" | "estadoEnvio" | "medioPago" | "pago" | "estadoPago"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Cliente: {
        payload: Prisma.$ClientePayload<ExtArgs>
        fields: Prisma.ClienteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ClienteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ClienteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          findFirst: {
            args: Prisma.ClienteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ClienteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          findMany: {
            args: Prisma.ClienteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>[]
          }
          create: {
            args: Prisma.ClienteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          createMany: {
            args: Prisma.ClienteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ClienteCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>[]
          }
          delete: {
            args: Prisma.ClienteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          update: {
            args: Prisma.ClienteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          deleteMany: {
            args: Prisma.ClienteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ClienteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ClienteUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>[]
          }
          upsert: {
            args: Prisma.ClienteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          aggregate: {
            args: Prisma.ClienteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCliente>
          }
          groupBy: {
            args: Prisma.ClienteGroupByArgs<ExtArgs>
            result: $Utils.Optional<ClienteGroupByOutputType>[]
          }
          count: {
            args: Prisma.ClienteCountArgs<ExtArgs>
            result: $Utils.Optional<ClienteCountAggregateOutputType> | number
          }
        }
      }
      Usuario: {
        payload: Prisma.$UsuarioPayload<ExtArgs>
        fields: Prisma.UsuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findFirst: {
            args: Prisma.UsuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findMany: {
            args: Prisma.UsuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          create: {
            args: Prisma.UsuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          createMany: {
            args: Prisma.UsuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UsuarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          delete: {
            args: Prisma.UsuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          update: {
            args: Prisma.UsuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          deleteMany: {
            args: Prisma.UsuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UsuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UsuarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          upsert: {
            args: Prisma.UsuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          aggregate: {
            args: Prisma.UsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuario>
          }
          groupBy: {
            args: Prisma.UsuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsuarioCountArgs<ExtArgs>
            result: $Utils.Optional<UsuarioCountAggregateOutputType> | number
          }
        }
      }
      RolUsuario: {
        payload: Prisma.$RolUsuarioPayload<ExtArgs>
        fields: Prisma.RolUsuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RolUsuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolUsuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RolUsuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolUsuarioPayload>
          }
          findFirst: {
            args: Prisma.RolUsuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolUsuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RolUsuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolUsuarioPayload>
          }
          findMany: {
            args: Prisma.RolUsuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolUsuarioPayload>[]
          }
          create: {
            args: Prisma.RolUsuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolUsuarioPayload>
          }
          createMany: {
            args: Prisma.RolUsuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RolUsuarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolUsuarioPayload>[]
          }
          delete: {
            args: Prisma.RolUsuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolUsuarioPayload>
          }
          update: {
            args: Prisma.RolUsuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolUsuarioPayload>
          }
          deleteMany: {
            args: Prisma.RolUsuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RolUsuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RolUsuarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolUsuarioPayload>[]
          }
          upsert: {
            args: Prisma.RolUsuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolUsuarioPayload>
          }
          aggregate: {
            args: Prisma.RolUsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRolUsuario>
          }
          groupBy: {
            args: Prisma.RolUsuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<RolUsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.RolUsuarioCountArgs<ExtArgs>
            result: $Utils.Optional<RolUsuarioCountAggregateOutputType> | number
          }
        }
      }
      Direccion: {
        payload: Prisma.$DireccionPayload<ExtArgs>
        fields: Prisma.DireccionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DireccionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DireccionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DireccionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DireccionPayload>
          }
          findFirst: {
            args: Prisma.DireccionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DireccionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DireccionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DireccionPayload>
          }
          findMany: {
            args: Prisma.DireccionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DireccionPayload>[]
          }
          create: {
            args: Prisma.DireccionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DireccionPayload>
          }
          createMany: {
            args: Prisma.DireccionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DireccionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DireccionPayload>[]
          }
          delete: {
            args: Prisma.DireccionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DireccionPayload>
          }
          update: {
            args: Prisma.DireccionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DireccionPayload>
          }
          deleteMany: {
            args: Prisma.DireccionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DireccionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DireccionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DireccionPayload>[]
          }
          upsert: {
            args: Prisma.DireccionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DireccionPayload>
          }
          aggregate: {
            args: Prisma.DireccionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDireccion>
          }
          groupBy: {
            args: Prisma.DireccionGroupByArgs<ExtArgs>
            result: $Utils.Optional<DireccionGroupByOutputType>[]
          }
          count: {
            args: Prisma.DireccionCountArgs<ExtArgs>
            result: $Utils.Optional<DireccionCountAggregateOutputType> | number
          }
        }
      }
      Pedido: {
        payload: Prisma.$PedidoPayload<ExtArgs>
        fields: Prisma.PedidoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PedidoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PedidoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>
          }
          findFirst: {
            args: Prisma.PedidoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PedidoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>
          }
          findMany: {
            args: Prisma.PedidoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>[]
          }
          create: {
            args: Prisma.PedidoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>
          }
          createMany: {
            args: Prisma.PedidoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PedidoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>[]
          }
          delete: {
            args: Prisma.PedidoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>
          }
          update: {
            args: Prisma.PedidoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>
          }
          deleteMany: {
            args: Prisma.PedidoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PedidoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PedidoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>[]
          }
          upsert: {
            args: Prisma.PedidoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>
          }
          aggregate: {
            args: Prisma.PedidoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePedido>
          }
          groupBy: {
            args: Prisma.PedidoGroupByArgs<ExtArgs>
            result: $Utils.Optional<PedidoGroupByOutputType>[]
          }
          count: {
            args: Prisma.PedidoCountArgs<ExtArgs>
            result: $Utils.Optional<PedidoCountAggregateOutputType> | number
          }
        }
      }
      EstadoPedido: {
        payload: Prisma.$EstadoPedidoPayload<ExtArgs>
        fields: Prisma.EstadoPedidoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EstadoPedidoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoPedidoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EstadoPedidoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoPedidoPayload>
          }
          findFirst: {
            args: Prisma.EstadoPedidoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoPedidoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EstadoPedidoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoPedidoPayload>
          }
          findMany: {
            args: Prisma.EstadoPedidoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoPedidoPayload>[]
          }
          create: {
            args: Prisma.EstadoPedidoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoPedidoPayload>
          }
          createMany: {
            args: Prisma.EstadoPedidoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EstadoPedidoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoPedidoPayload>[]
          }
          delete: {
            args: Prisma.EstadoPedidoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoPedidoPayload>
          }
          update: {
            args: Prisma.EstadoPedidoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoPedidoPayload>
          }
          deleteMany: {
            args: Prisma.EstadoPedidoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EstadoPedidoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EstadoPedidoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoPedidoPayload>[]
          }
          upsert: {
            args: Prisma.EstadoPedidoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoPedidoPayload>
          }
          aggregate: {
            args: Prisma.EstadoPedidoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEstadoPedido>
          }
          groupBy: {
            args: Prisma.EstadoPedidoGroupByArgs<ExtArgs>
            result: $Utils.Optional<EstadoPedidoGroupByOutputType>[]
          }
          count: {
            args: Prisma.EstadoPedidoCountArgs<ExtArgs>
            result: $Utils.Optional<EstadoPedidoCountAggregateOutputType> | number
          }
        }
      }
      CarritoCompras: {
        payload: Prisma.$CarritoComprasPayload<ExtArgs>
        fields: Prisma.CarritoComprasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CarritoComprasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarritoComprasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CarritoComprasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarritoComprasPayload>
          }
          findFirst: {
            args: Prisma.CarritoComprasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarritoComprasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CarritoComprasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarritoComprasPayload>
          }
          findMany: {
            args: Prisma.CarritoComprasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarritoComprasPayload>[]
          }
          create: {
            args: Prisma.CarritoComprasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarritoComprasPayload>
          }
          createMany: {
            args: Prisma.CarritoComprasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CarritoComprasCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarritoComprasPayload>[]
          }
          delete: {
            args: Prisma.CarritoComprasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarritoComprasPayload>
          }
          update: {
            args: Prisma.CarritoComprasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarritoComprasPayload>
          }
          deleteMany: {
            args: Prisma.CarritoComprasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CarritoComprasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CarritoComprasUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarritoComprasPayload>[]
          }
          upsert: {
            args: Prisma.CarritoComprasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarritoComprasPayload>
          }
          aggregate: {
            args: Prisma.CarritoComprasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCarritoCompras>
          }
          groupBy: {
            args: Prisma.CarritoComprasGroupByArgs<ExtArgs>
            result: $Utils.Optional<CarritoComprasGroupByOutputType>[]
          }
          count: {
            args: Prisma.CarritoComprasCountArgs<ExtArgs>
            result: $Utils.Optional<CarritoComprasCountAggregateOutputType> | number
          }
        }
      }
      ListaFavorito: {
        payload: Prisma.$ListaFavoritoPayload<ExtArgs>
        fields: Prisma.ListaFavoritoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ListaFavoritoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListaFavoritoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ListaFavoritoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListaFavoritoPayload>
          }
          findFirst: {
            args: Prisma.ListaFavoritoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListaFavoritoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ListaFavoritoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListaFavoritoPayload>
          }
          findMany: {
            args: Prisma.ListaFavoritoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListaFavoritoPayload>[]
          }
          create: {
            args: Prisma.ListaFavoritoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListaFavoritoPayload>
          }
          createMany: {
            args: Prisma.ListaFavoritoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ListaFavoritoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListaFavoritoPayload>[]
          }
          delete: {
            args: Prisma.ListaFavoritoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListaFavoritoPayload>
          }
          update: {
            args: Prisma.ListaFavoritoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListaFavoritoPayload>
          }
          deleteMany: {
            args: Prisma.ListaFavoritoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ListaFavoritoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ListaFavoritoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListaFavoritoPayload>[]
          }
          upsert: {
            args: Prisma.ListaFavoritoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListaFavoritoPayload>
          }
          aggregate: {
            args: Prisma.ListaFavoritoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateListaFavorito>
          }
          groupBy: {
            args: Prisma.ListaFavoritoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ListaFavoritoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ListaFavoritoCountArgs<ExtArgs>
            result: $Utils.Optional<ListaFavoritoCountAggregateOutputType> | number
          }
        }
      }
      Articulo: {
        payload: Prisma.$ArticuloPayload<ExtArgs>
        fields: Prisma.ArticuloFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ArticuloFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticuloPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ArticuloFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticuloPayload>
          }
          findFirst: {
            args: Prisma.ArticuloFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticuloPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ArticuloFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticuloPayload>
          }
          findMany: {
            args: Prisma.ArticuloFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticuloPayload>[]
          }
          create: {
            args: Prisma.ArticuloCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticuloPayload>
          }
          createMany: {
            args: Prisma.ArticuloCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ArticuloCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticuloPayload>[]
          }
          delete: {
            args: Prisma.ArticuloDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticuloPayload>
          }
          update: {
            args: Prisma.ArticuloUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticuloPayload>
          }
          deleteMany: {
            args: Prisma.ArticuloDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ArticuloUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ArticuloUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticuloPayload>[]
          }
          upsert: {
            args: Prisma.ArticuloUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticuloPayload>
          }
          aggregate: {
            args: Prisma.ArticuloAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateArticulo>
          }
          groupBy: {
            args: Prisma.ArticuloGroupByArgs<ExtArgs>
            result: $Utils.Optional<ArticuloGroupByOutputType>[]
          }
          count: {
            args: Prisma.ArticuloCountArgs<ExtArgs>
            result: $Utils.Optional<ArticuloCountAggregateOutputType> | number
          }
        }
      }
      Categoria: {
        payload: Prisma.$CategoriaPayload<ExtArgs>
        fields: Prisma.CategoriaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CategoriaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CategoriaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>
          }
          findFirst: {
            args: Prisma.CategoriaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CategoriaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>
          }
          findMany: {
            args: Prisma.CategoriaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>[]
          }
          create: {
            args: Prisma.CategoriaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>
          }
          createMany: {
            args: Prisma.CategoriaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CategoriaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>[]
          }
          delete: {
            args: Prisma.CategoriaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>
          }
          update: {
            args: Prisma.CategoriaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>
          }
          deleteMany: {
            args: Prisma.CategoriaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CategoriaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CategoriaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>[]
          }
          upsert: {
            args: Prisma.CategoriaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>
          }
          aggregate: {
            args: Prisma.CategoriaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCategoria>
          }
          groupBy: {
            args: Prisma.CategoriaGroupByArgs<ExtArgs>
            result: $Utils.Optional<CategoriaGroupByOutputType>[]
          }
          count: {
            args: Prisma.CategoriaCountArgs<ExtArgs>
            result: $Utils.Optional<CategoriaCountAggregateOutputType> | number
          }
        }
      }
      ArticuloPedido: {
        payload: Prisma.$ArticuloPedidoPayload<ExtArgs>
        fields: Prisma.ArticuloPedidoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ArticuloPedidoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticuloPedidoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ArticuloPedidoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticuloPedidoPayload>
          }
          findFirst: {
            args: Prisma.ArticuloPedidoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticuloPedidoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ArticuloPedidoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticuloPedidoPayload>
          }
          findMany: {
            args: Prisma.ArticuloPedidoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticuloPedidoPayload>[]
          }
          create: {
            args: Prisma.ArticuloPedidoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticuloPedidoPayload>
          }
          createMany: {
            args: Prisma.ArticuloPedidoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ArticuloPedidoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticuloPedidoPayload>[]
          }
          delete: {
            args: Prisma.ArticuloPedidoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticuloPedidoPayload>
          }
          update: {
            args: Prisma.ArticuloPedidoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticuloPedidoPayload>
          }
          deleteMany: {
            args: Prisma.ArticuloPedidoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ArticuloPedidoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ArticuloPedidoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticuloPedidoPayload>[]
          }
          upsert: {
            args: Prisma.ArticuloPedidoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticuloPedidoPayload>
          }
          aggregate: {
            args: Prisma.ArticuloPedidoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateArticuloPedido>
          }
          groupBy: {
            args: Prisma.ArticuloPedidoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ArticuloPedidoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ArticuloPedidoCountArgs<ExtArgs>
            result: $Utils.Optional<ArticuloPedidoCountAggregateOutputType> | number
          }
        }
      }
      EnvioPedido: {
        payload: Prisma.$EnvioPedidoPayload<ExtArgs>
        fields: Prisma.EnvioPedidoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EnvioPedidoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnvioPedidoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EnvioPedidoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnvioPedidoPayload>
          }
          findFirst: {
            args: Prisma.EnvioPedidoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnvioPedidoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EnvioPedidoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnvioPedidoPayload>
          }
          findMany: {
            args: Prisma.EnvioPedidoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnvioPedidoPayload>[]
          }
          create: {
            args: Prisma.EnvioPedidoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnvioPedidoPayload>
          }
          createMany: {
            args: Prisma.EnvioPedidoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EnvioPedidoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnvioPedidoPayload>[]
          }
          delete: {
            args: Prisma.EnvioPedidoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnvioPedidoPayload>
          }
          update: {
            args: Prisma.EnvioPedidoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnvioPedidoPayload>
          }
          deleteMany: {
            args: Prisma.EnvioPedidoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EnvioPedidoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EnvioPedidoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnvioPedidoPayload>[]
          }
          upsert: {
            args: Prisma.EnvioPedidoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnvioPedidoPayload>
          }
          aggregate: {
            args: Prisma.EnvioPedidoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEnvioPedido>
          }
          groupBy: {
            args: Prisma.EnvioPedidoGroupByArgs<ExtArgs>
            result: $Utils.Optional<EnvioPedidoGroupByOutputType>[]
          }
          count: {
            args: Prisma.EnvioPedidoCountArgs<ExtArgs>
            result: $Utils.Optional<EnvioPedidoCountAggregateOutputType> | number
          }
        }
      }
      EstadoEnvio: {
        payload: Prisma.$EstadoEnvioPayload<ExtArgs>
        fields: Prisma.EstadoEnvioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EstadoEnvioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoEnvioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EstadoEnvioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoEnvioPayload>
          }
          findFirst: {
            args: Prisma.EstadoEnvioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoEnvioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EstadoEnvioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoEnvioPayload>
          }
          findMany: {
            args: Prisma.EstadoEnvioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoEnvioPayload>[]
          }
          create: {
            args: Prisma.EstadoEnvioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoEnvioPayload>
          }
          createMany: {
            args: Prisma.EstadoEnvioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EstadoEnvioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoEnvioPayload>[]
          }
          delete: {
            args: Prisma.EstadoEnvioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoEnvioPayload>
          }
          update: {
            args: Prisma.EstadoEnvioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoEnvioPayload>
          }
          deleteMany: {
            args: Prisma.EstadoEnvioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EstadoEnvioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EstadoEnvioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoEnvioPayload>[]
          }
          upsert: {
            args: Prisma.EstadoEnvioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoEnvioPayload>
          }
          aggregate: {
            args: Prisma.EstadoEnvioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEstadoEnvio>
          }
          groupBy: {
            args: Prisma.EstadoEnvioGroupByArgs<ExtArgs>
            result: $Utils.Optional<EstadoEnvioGroupByOutputType>[]
          }
          count: {
            args: Prisma.EstadoEnvioCountArgs<ExtArgs>
            result: $Utils.Optional<EstadoEnvioCountAggregateOutputType> | number
          }
        }
      }
      MedioPago: {
        payload: Prisma.$MedioPagoPayload<ExtArgs>
        fields: Prisma.MedioPagoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MedioPagoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedioPagoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MedioPagoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedioPagoPayload>
          }
          findFirst: {
            args: Prisma.MedioPagoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedioPagoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MedioPagoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedioPagoPayload>
          }
          findMany: {
            args: Prisma.MedioPagoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedioPagoPayload>[]
          }
          create: {
            args: Prisma.MedioPagoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedioPagoPayload>
          }
          createMany: {
            args: Prisma.MedioPagoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MedioPagoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedioPagoPayload>[]
          }
          delete: {
            args: Prisma.MedioPagoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedioPagoPayload>
          }
          update: {
            args: Prisma.MedioPagoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedioPagoPayload>
          }
          deleteMany: {
            args: Prisma.MedioPagoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MedioPagoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MedioPagoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedioPagoPayload>[]
          }
          upsert: {
            args: Prisma.MedioPagoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedioPagoPayload>
          }
          aggregate: {
            args: Prisma.MedioPagoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMedioPago>
          }
          groupBy: {
            args: Prisma.MedioPagoGroupByArgs<ExtArgs>
            result: $Utils.Optional<MedioPagoGroupByOutputType>[]
          }
          count: {
            args: Prisma.MedioPagoCountArgs<ExtArgs>
            result: $Utils.Optional<MedioPagoCountAggregateOutputType> | number
          }
        }
      }
      Pago: {
        payload: Prisma.$PagoPayload<ExtArgs>
        fields: Prisma.PagoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PagoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PagoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload>
          }
          findFirst: {
            args: Prisma.PagoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PagoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload>
          }
          findMany: {
            args: Prisma.PagoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload>[]
          }
          create: {
            args: Prisma.PagoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload>
          }
          createMany: {
            args: Prisma.PagoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PagoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload>[]
          }
          delete: {
            args: Prisma.PagoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload>
          }
          update: {
            args: Prisma.PagoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload>
          }
          deleteMany: {
            args: Prisma.PagoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PagoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PagoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload>[]
          }
          upsert: {
            args: Prisma.PagoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload>
          }
          aggregate: {
            args: Prisma.PagoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePago>
          }
          groupBy: {
            args: Prisma.PagoGroupByArgs<ExtArgs>
            result: $Utils.Optional<PagoGroupByOutputType>[]
          }
          count: {
            args: Prisma.PagoCountArgs<ExtArgs>
            result: $Utils.Optional<PagoCountAggregateOutputType> | number
          }
        }
      }
      EstadoPago: {
        payload: Prisma.$EstadoPagoPayload<ExtArgs>
        fields: Prisma.EstadoPagoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EstadoPagoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoPagoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EstadoPagoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoPagoPayload>
          }
          findFirst: {
            args: Prisma.EstadoPagoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoPagoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EstadoPagoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoPagoPayload>
          }
          findMany: {
            args: Prisma.EstadoPagoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoPagoPayload>[]
          }
          create: {
            args: Prisma.EstadoPagoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoPagoPayload>
          }
          createMany: {
            args: Prisma.EstadoPagoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EstadoPagoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoPagoPayload>[]
          }
          delete: {
            args: Prisma.EstadoPagoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoPagoPayload>
          }
          update: {
            args: Prisma.EstadoPagoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoPagoPayload>
          }
          deleteMany: {
            args: Prisma.EstadoPagoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EstadoPagoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EstadoPagoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoPagoPayload>[]
          }
          upsert: {
            args: Prisma.EstadoPagoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadoPagoPayload>
          }
          aggregate: {
            args: Prisma.EstadoPagoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEstadoPago>
          }
          groupBy: {
            args: Prisma.EstadoPagoGroupByArgs<ExtArgs>
            result: $Utils.Optional<EstadoPagoGroupByOutputType>[]
          }
          count: {
            args: Prisma.EstadoPagoCountArgs<ExtArgs>
            result: $Utils.Optional<EstadoPagoCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    cliente?: ClienteOmit
    usuario?: UsuarioOmit
    rolUsuario?: RolUsuarioOmit
    direccion?: DireccionOmit
    pedido?: PedidoOmit
    estadoPedido?: EstadoPedidoOmit
    carritoCompras?: CarritoComprasOmit
    listaFavorito?: ListaFavoritoOmit
    articulo?: ArticuloOmit
    categoria?: CategoriaOmit
    articuloPedido?: ArticuloPedidoOmit
    envioPedido?: EnvioPedidoOmit
    estadoEnvio?: EstadoEnvioOmit
    medioPago?: MedioPagoOmit
    pago?: PagoOmit
    estadoPago?: EstadoPagoOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type ClienteCountOutputType
   */

  export type ClienteCountOutputType = {
    direccion: number
    medioPago: number
    Pedido: number
  }

  export type ClienteCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    direccion?: boolean | ClienteCountOutputTypeCountDireccionArgs
    medioPago?: boolean | ClienteCountOutputTypeCountMedioPagoArgs
    Pedido?: boolean | ClienteCountOutputTypeCountPedidoArgs
  }

  // Custom InputTypes
  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClienteCountOutputType
     */
    select?: ClienteCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeCountDireccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DireccionWhereInput
  }

  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeCountMedioPagoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MedioPagoWhereInput
  }

  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeCountPedidoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PedidoWhereInput
  }


  /**
   * Count Type RolUsuarioCountOutputType
   */

  export type RolUsuarioCountOutputType = {
    Usuarios: number
  }

  export type RolUsuarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Usuarios?: boolean | RolUsuarioCountOutputTypeCountUsuariosArgs
  }

  // Custom InputTypes
  /**
   * RolUsuarioCountOutputType without action
   */
  export type RolUsuarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolUsuarioCountOutputType
     */
    select?: RolUsuarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RolUsuarioCountOutputType without action
   */
  export type RolUsuarioCountOutputTypeCountUsuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
  }


  /**
   * Count Type DireccionCountOutputType
   */

  export type DireccionCountOutputType = {
    envioPedido: number
  }

  export type DireccionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    envioPedido?: boolean | DireccionCountOutputTypeCountEnvioPedidoArgs
  }

  // Custom InputTypes
  /**
   * DireccionCountOutputType without action
   */
  export type DireccionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DireccionCountOutputType
     */
    select?: DireccionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DireccionCountOutputType without action
   */
  export type DireccionCountOutputTypeCountEnvioPedidoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EnvioPedidoWhereInput
  }


  /**
   * Count Type PedidoCountOutputType
   */

  export type PedidoCountOutputType = {
    articuloPedido: number
  }

  export type PedidoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    articuloPedido?: boolean | PedidoCountOutputTypeCountArticuloPedidoArgs
  }

  // Custom InputTypes
  /**
   * PedidoCountOutputType without action
   */
  export type PedidoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PedidoCountOutputType
     */
    select?: PedidoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PedidoCountOutputType without action
   */
  export type PedidoCountOutputTypeCountArticuloPedidoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ArticuloPedidoWhereInput
  }


  /**
   * Count Type EstadoPedidoCountOutputType
   */

  export type EstadoPedidoCountOutputType = {
    pedidos: number
  }

  export type EstadoPedidoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pedidos?: boolean | EstadoPedidoCountOutputTypeCountPedidosArgs
  }

  // Custom InputTypes
  /**
   * EstadoPedidoCountOutputType without action
   */
  export type EstadoPedidoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoPedidoCountOutputType
     */
    select?: EstadoPedidoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EstadoPedidoCountOutputType without action
   */
  export type EstadoPedidoCountOutputTypeCountPedidosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PedidoWhereInput
  }


  /**
   * Count Type CarritoComprasCountOutputType
   */

  export type CarritoComprasCountOutputType = {
    articuloPedido: number
  }

  export type CarritoComprasCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    articuloPedido?: boolean | CarritoComprasCountOutputTypeCountArticuloPedidoArgs
  }

  // Custom InputTypes
  /**
   * CarritoComprasCountOutputType without action
   */
  export type CarritoComprasCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CarritoComprasCountOutputType
     */
    select?: CarritoComprasCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CarritoComprasCountOutputType without action
   */
  export type CarritoComprasCountOutputTypeCountArticuloPedidoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ArticuloPedidoWhereInput
  }


  /**
   * Count Type ListaFavoritoCountOutputType
   */

  export type ListaFavoritoCountOutputType = {
    articulo: number
  }

  export type ListaFavoritoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    articulo?: boolean | ListaFavoritoCountOutputTypeCountArticuloArgs
  }

  // Custom InputTypes
  /**
   * ListaFavoritoCountOutputType without action
   */
  export type ListaFavoritoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListaFavoritoCountOutputType
     */
    select?: ListaFavoritoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ListaFavoritoCountOutputType without action
   */
  export type ListaFavoritoCountOutputTypeCountArticuloArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ArticuloWhereInput
  }


  /**
   * Count Type ArticuloCountOutputType
   */

  export type ArticuloCountOutputType = {
    articuloPedido: number
    listaFav: number
    categorias: number
  }

  export type ArticuloCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    articuloPedido?: boolean | ArticuloCountOutputTypeCountArticuloPedidoArgs
    listaFav?: boolean | ArticuloCountOutputTypeCountListaFavArgs
    categorias?: boolean | ArticuloCountOutputTypeCountCategoriasArgs
  }

  // Custom InputTypes
  /**
   * ArticuloCountOutputType without action
   */
  export type ArticuloCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticuloCountOutputType
     */
    select?: ArticuloCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ArticuloCountOutputType without action
   */
  export type ArticuloCountOutputTypeCountArticuloPedidoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ArticuloPedidoWhereInput
  }

  /**
   * ArticuloCountOutputType without action
   */
  export type ArticuloCountOutputTypeCountListaFavArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ListaFavoritoWhereInput
  }

  /**
   * ArticuloCountOutputType without action
   */
  export type ArticuloCountOutputTypeCountCategoriasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoriaWhereInput
  }


  /**
   * Count Type CategoriaCountOutputType
   */

  export type CategoriaCountOutputType = {
    articulos: number
  }

  export type CategoriaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    articulos?: boolean | CategoriaCountOutputTypeCountArticulosArgs
  }

  // Custom InputTypes
  /**
   * CategoriaCountOutputType without action
   */
  export type CategoriaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaCountOutputType
     */
    select?: CategoriaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CategoriaCountOutputType without action
   */
  export type CategoriaCountOutputTypeCountArticulosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ArticuloWhereInput
  }


  /**
   * Count Type EstadoEnvioCountOutputType
   */

  export type EstadoEnvioCountOutputType = {
    envioPedido: number
  }

  export type EstadoEnvioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    envioPedido?: boolean | EstadoEnvioCountOutputTypeCountEnvioPedidoArgs
  }

  // Custom InputTypes
  /**
   * EstadoEnvioCountOutputType without action
   */
  export type EstadoEnvioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoEnvioCountOutputType
     */
    select?: EstadoEnvioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EstadoEnvioCountOutputType without action
   */
  export type EstadoEnvioCountOutputTypeCountEnvioPedidoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EnvioPedidoWhereInput
  }


  /**
   * Count Type MedioPagoCountOutputType
   */

  export type MedioPagoCountOutputType = {
    clientes: number
    Pago: number
  }

  export type MedioPagoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clientes?: boolean | MedioPagoCountOutputTypeCountClientesArgs
    Pago?: boolean | MedioPagoCountOutputTypeCountPagoArgs
  }

  // Custom InputTypes
  /**
   * MedioPagoCountOutputType without action
   */
  export type MedioPagoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedioPagoCountOutputType
     */
    select?: MedioPagoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MedioPagoCountOutputType without action
   */
  export type MedioPagoCountOutputTypeCountClientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClienteWhereInput
  }

  /**
   * MedioPagoCountOutputType without action
   */
  export type MedioPagoCountOutputTypeCountPagoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PagoWhereInput
  }


  /**
   * Count Type EstadoPagoCountOutputType
   */

  export type EstadoPagoCountOutputType = {
    pagos: number
  }

  export type EstadoPagoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pagos?: boolean | EstadoPagoCountOutputTypeCountPagosArgs
  }

  // Custom InputTypes
  /**
   * EstadoPagoCountOutputType without action
   */
  export type EstadoPagoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoPagoCountOutputType
     */
    select?: EstadoPagoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EstadoPagoCountOutputType without action
   */
  export type EstadoPagoCountOutputTypeCountPagosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PagoWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Cliente
   */

  export type AggregateCliente = {
    _count: ClienteCountAggregateOutputType | null
    _avg: ClienteAvgAggregateOutputType | null
    _sum: ClienteSumAggregateOutputType | null
    _min: ClienteMinAggregateOutputType | null
    _max: ClienteMaxAggregateOutputType | null
  }

  export type ClienteAvgAggregateOutputType = {
    codCliente: number | null
    dni: number | null
    telefono: number | null
    codUsuario: number | null
    codListaFavorito: number | null
  }

  export type ClienteSumAggregateOutputType = {
    codCliente: number | null
    dni: number | null
    telefono: number | null
    codUsuario: number | null
    codListaFavorito: number | null
  }

  export type ClienteMinAggregateOutputType = {
    codCliente: number | null
    nombreCliente: string | null
    dni: number | null
    telefono: number | null
    fechaHoraBajaCliente: Date | null
    codUsuario: number | null
    codListaFavorito: number | null
  }

  export type ClienteMaxAggregateOutputType = {
    codCliente: number | null
    nombreCliente: string | null
    dni: number | null
    telefono: number | null
    fechaHoraBajaCliente: Date | null
    codUsuario: number | null
    codListaFavorito: number | null
  }

  export type ClienteCountAggregateOutputType = {
    codCliente: number
    nombreCliente: number
    dni: number
    telefono: number
    fechaHoraBajaCliente: number
    codUsuario: number
    codListaFavorito: number
    _all: number
  }


  export type ClienteAvgAggregateInputType = {
    codCliente?: true
    dni?: true
    telefono?: true
    codUsuario?: true
    codListaFavorito?: true
  }

  export type ClienteSumAggregateInputType = {
    codCliente?: true
    dni?: true
    telefono?: true
    codUsuario?: true
    codListaFavorito?: true
  }

  export type ClienteMinAggregateInputType = {
    codCliente?: true
    nombreCliente?: true
    dni?: true
    telefono?: true
    fechaHoraBajaCliente?: true
    codUsuario?: true
    codListaFavorito?: true
  }

  export type ClienteMaxAggregateInputType = {
    codCliente?: true
    nombreCliente?: true
    dni?: true
    telefono?: true
    fechaHoraBajaCliente?: true
    codUsuario?: true
    codListaFavorito?: true
  }

  export type ClienteCountAggregateInputType = {
    codCliente?: true
    nombreCliente?: true
    dni?: true
    telefono?: true
    fechaHoraBajaCliente?: true
    codUsuario?: true
    codListaFavorito?: true
    _all?: true
  }

  export type ClienteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Cliente to aggregate.
     */
    where?: ClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Clientes
    **/
    _count?: true | ClienteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ClienteAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ClienteSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ClienteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ClienteMaxAggregateInputType
  }

  export type GetClienteAggregateType<T extends ClienteAggregateArgs> = {
        [P in keyof T & keyof AggregateCliente]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCliente[P]>
      : GetScalarType<T[P], AggregateCliente[P]>
  }




  export type ClienteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClienteWhereInput
    orderBy?: ClienteOrderByWithAggregationInput | ClienteOrderByWithAggregationInput[]
    by: ClienteScalarFieldEnum[] | ClienteScalarFieldEnum
    having?: ClienteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ClienteCountAggregateInputType | true
    _avg?: ClienteAvgAggregateInputType
    _sum?: ClienteSumAggregateInputType
    _min?: ClienteMinAggregateInputType
    _max?: ClienteMaxAggregateInputType
  }

  export type ClienteGroupByOutputType = {
    codCliente: number
    nombreCliente: string
    dni: number
    telefono: number
    fechaHoraBajaCliente: Date | null
    codUsuario: number
    codListaFavorito: number | null
    _count: ClienteCountAggregateOutputType | null
    _avg: ClienteAvgAggregateOutputType | null
    _sum: ClienteSumAggregateOutputType | null
    _min: ClienteMinAggregateOutputType | null
    _max: ClienteMaxAggregateOutputType | null
  }

  type GetClienteGroupByPayload<T extends ClienteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ClienteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ClienteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ClienteGroupByOutputType[P]>
            : GetScalarType<T[P], ClienteGroupByOutputType[P]>
        }
      >
    >


  export type ClienteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codCliente?: boolean
    nombreCliente?: boolean
    dni?: boolean
    telefono?: boolean
    fechaHoraBajaCliente?: boolean
    codUsuario?: boolean
    codListaFavorito?: boolean
    direccion?: boolean | Cliente$direccionArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    medioPago?: boolean | Cliente$medioPagoArgs<ExtArgs>
    Pedido?: boolean | Cliente$PedidoArgs<ExtArgs>
    listaFav?: boolean | Cliente$listaFavArgs<ExtArgs>
    _count?: boolean | ClienteCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cliente"]>

  export type ClienteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codCliente?: boolean
    nombreCliente?: boolean
    dni?: boolean
    telefono?: boolean
    fechaHoraBajaCliente?: boolean
    codUsuario?: boolean
    codListaFavorito?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cliente"]>

  export type ClienteSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codCliente?: boolean
    nombreCliente?: boolean
    dni?: boolean
    telefono?: boolean
    fechaHoraBajaCliente?: boolean
    codUsuario?: boolean
    codListaFavorito?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cliente"]>

  export type ClienteSelectScalar = {
    codCliente?: boolean
    nombreCliente?: boolean
    dni?: boolean
    telefono?: boolean
    fechaHoraBajaCliente?: boolean
    codUsuario?: boolean
    codListaFavorito?: boolean
  }

  export type ClienteOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"codCliente" | "nombreCliente" | "dni" | "telefono" | "fechaHoraBajaCliente" | "codUsuario" | "codListaFavorito", ExtArgs["result"]["cliente"]>
  export type ClienteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    direccion?: boolean | Cliente$direccionArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    medioPago?: boolean | Cliente$medioPagoArgs<ExtArgs>
    Pedido?: boolean | Cliente$PedidoArgs<ExtArgs>
    listaFav?: boolean | Cliente$listaFavArgs<ExtArgs>
    _count?: boolean | ClienteCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ClienteIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type ClienteIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }

  export type $ClientePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Cliente"
    objects: {
      direccion: Prisma.$DireccionPayload<ExtArgs>[]
      usuario: Prisma.$UsuarioPayload<ExtArgs>
      medioPago: Prisma.$MedioPagoPayload<ExtArgs>[]
      Pedido: Prisma.$PedidoPayload<ExtArgs>[]
      listaFav: Prisma.$ListaFavoritoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      codCliente: number
      nombreCliente: string
      dni: number
      telefono: number
      fechaHoraBajaCliente: Date | null
      codUsuario: number
      codListaFavorito: number | null
    }, ExtArgs["result"]["cliente"]>
    composites: {}
  }

  type ClienteGetPayload<S extends boolean | null | undefined | ClienteDefaultArgs> = $Result.GetResult<Prisma.$ClientePayload, S>

  type ClienteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ClienteFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ClienteCountAggregateInputType | true
    }

  export interface ClienteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Cliente'], meta: { name: 'Cliente' } }
    /**
     * Find zero or one Cliente that matches the filter.
     * @param {ClienteFindUniqueArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ClienteFindUniqueArgs>(args: SelectSubset<T, ClienteFindUniqueArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Cliente that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ClienteFindUniqueOrThrowArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ClienteFindUniqueOrThrowArgs>(args: SelectSubset<T, ClienteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cliente that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteFindFirstArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ClienteFindFirstArgs>(args?: SelectSubset<T, ClienteFindFirstArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cliente that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteFindFirstOrThrowArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ClienteFindFirstOrThrowArgs>(args?: SelectSubset<T, ClienteFindFirstOrThrowArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Clientes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Clientes
     * const clientes = await prisma.cliente.findMany()
     * 
     * // Get first 10 Clientes
     * const clientes = await prisma.cliente.findMany({ take: 10 })
     * 
     * // Only select the `codCliente`
     * const clienteWithCodClienteOnly = await prisma.cliente.findMany({ select: { codCliente: true } })
     * 
     */
    findMany<T extends ClienteFindManyArgs>(args?: SelectSubset<T, ClienteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Cliente.
     * @param {ClienteCreateArgs} args - Arguments to create a Cliente.
     * @example
     * // Create one Cliente
     * const Cliente = await prisma.cliente.create({
     *   data: {
     *     // ... data to create a Cliente
     *   }
     * })
     * 
     */
    create<T extends ClienteCreateArgs>(args: SelectSubset<T, ClienteCreateArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Clientes.
     * @param {ClienteCreateManyArgs} args - Arguments to create many Clientes.
     * @example
     * // Create many Clientes
     * const cliente = await prisma.cliente.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ClienteCreateManyArgs>(args?: SelectSubset<T, ClienteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Clientes and returns the data saved in the database.
     * @param {ClienteCreateManyAndReturnArgs} args - Arguments to create many Clientes.
     * @example
     * // Create many Clientes
     * const cliente = await prisma.cliente.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Clientes and only return the `codCliente`
     * const clienteWithCodClienteOnly = await prisma.cliente.createManyAndReturn({
     *   select: { codCliente: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ClienteCreateManyAndReturnArgs>(args?: SelectSubset<T, ClienteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Cliente.
     * @param {ClienteDeleteArgs} args - Arguments to delete one Cliente.
     * @example
     * // Delete one Cliente
     * const Cliente = await prisma.cliente.delete({
     *   where: {
     *     // ... filter to delete one Cliente
     *   }
     * })
     * 
     */
    delete<T extends ClienteDeleteArgs>(args: SelectSubset<T, ClienteDeleteArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Cliente.
     * @param {ClienteUpdateArgs} args - Arguments to update one Cliente.
     * @example
     * // Update one Cliente
     * const cliente = await prisma.cliente.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ClienteUpdateArgs>(args: SelectSubset<T, ClienteUpdateArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Clientes.
     * @param {ClienteDeleteManyArgs} args - Arguments to filter Clientes to delete.
     * @example
     * // Delete a few Clientes
     * const { count } = await prisma.cliente.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ClienteDeleteManyArgs>(args?: SelectSubset<T, ClienteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Clientes
     * const cliente = await prisma.cliente.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ClienteUpdateManyArgs>(args: SelectSubset<T, ClienteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Clientes and returns the data updated in the database.
     * @param {ClienteUpdateManyAndReturnArgs} args - Arguments to update many Clientes.
     * @example
     * // Update many Clientes
     * const cliente = await prisma.cliente.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Clientes and only return the `codCliente`
     * const clienteWithCodClienteOnly = await prisma.cliente.updateManyAndReturn({
     *   select: { codCliente: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ClienteUpdateManyAndReturnArgs>(args: SelectSubset<T, ClienteUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Cliente.
     * @param {ClienteUpsertArgs} args - Arguments to update or create a Cliente.
     * @example
     * // Update or create a Cliente
     * const cliente = await prisma.cliente.upsert({
     *   create: {
     *     // ... data to create a Cliente
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cliente we want to update
     *   }
     * })
     */
    upsert<T extends ClienteUpsertArgs>(args: SelectSubset<T, ClienteUpsertArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteCountArgs} args - Arguments to filter Clientes to count.
     * @example
     * // Count the number of Clientes
     * const count = await prisma.cliente.count({
     *   where: {
     *     // ... the filter for the Clientes we want to count
     *   }
     * })
    **/
    count<T extends ClienteCountArgs>(
      args?: Subset<T, ClienteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ClienteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cliente.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ClienteAggregateArgs>(args: Subset<T, ClienteAggregateArgs>): Prisma.PrismaPromise<GetClienteAggregateType<T>>

    /**
     * Group by Cliente.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ClienteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ClienteGroupByArgs['orderBy'] }
        : { orderBy?: ClienteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ClienteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClienteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Cliente model
   */
  readonly fields: ClienteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Cliente.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ClienteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    direccion<T extends Cliente$direccionArgs<ExtArgs> = {}>(args?: Subset<T, Cliente$direccionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DireccionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    medioPago<T extends Cliente$medioPagoArgs<ExtArgs> = {}>(args?: Subset<T, Cliente$medioPagoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MedioPagoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Pedido<T extends Cliente$PedidoArgs<ExtArgs> = {}>(args?: Subset<T, Cliente$PedidoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    listaFav<T extends Cliente$listaFavArgs<ExtArgs> = {}>(args?: Subset<T, Cliente$listaFavArgs<ExtArgs>>): Prisma__ListaFavoritoClient<$Result.GetResult<Prisma.$ListaFavoritoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Cliente model
   */
  interface ClienteFieldRefs {
    readonly codCliente: FieldRef<"Cliente", 'Int'>
    readonly nombreCliente: FieldRef<"Cliente", 'String'>
    readonly dni: FieldRef<"Cliente", 'Int'>
    readonly telefono: FieldRef<"Cliente", 'Int'>
    readonly fechaHoraBajaCliente: FieldRef<"Cliente", 'DateTime'>
    readonly codUsuario: FieldRef<"Cliente", 'Int'>
    readonly codListaFavorito: FieldRef<"Cliente", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Cliente findUnique
   */
  export type ClienteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Cliente to fetch.
     */
    where: ClienteWhereUniqueInput
  }

  /**
   * Cliente findUniqueOrThrow
   */
  export type ClienteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Cliente to fetch.
     */
    where: ClienteWhereUniqueInput
  }

  /**
   * Cliente findFirst
   */
  export type ClienteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Cliente to fetch.
     */
    where?: ClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Clientes.
     */
    cursor?: ClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Clientes.
     */
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }

  /**
   * Cliente findFirstOrThrow
   */
  export type ClienteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Cliente to fetch.
     */
    where?: ClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Clientes.
     */
    cursor?: ClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Clientes.
     */
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }

  /**
   * Cliente findMany
   */
  export type ClienteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Clientes to fetch.
     */
    where?: ClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Clientes.
     */
    cursor?: ClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }

  /**
   * Cliente create
   */
  export type ClienteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * The data needed to create a Cliente.
     */
    data: XOR<ClienteCreateInput, ClienteUncheckedCreateInput>
  }

  /**
   * Cliente createMany
   */
  export type ClienteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Clientes.
     */
    data: ClienteCreateManyInput | ClienteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Cliente createManyAndReturn
   */
  export type ClienteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * The data used to create many Clientes.
     */
    data: ClienteCreateManyInput | ClienteCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Cliente update
   */
  export type ClienteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * The data needed to update a Cliente.
     */
    data: XOR<ClienteUpdateInput, ClienteUncheckedUpdateInput>
    /**
     * Choose, which Cliente to update.
     */
    where: ClienteWhereUniqueInput
  }

  /**
   * Cliente updateMany
   */
  export type ClienteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Clientes.
     */
    data: XOR<ClienteUpdateManyMutationInput, ClienteUncheckedUpdateManyInput>
    /**
     * Filter which Clientes to update
     */
    where?: ClienteWhereInput
    /**
     * Limit how many Clientes to update.
     */
    limit?: number
  }

  /**
   * Cliente updateManyAndReturn
   */
  export type ClienteUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * The data used to update Clientes.
     */
    data: XOR<ClienteUpdateManyMutationInput, ClienteUncheckedUpdateManyInput>
    /**
     * Filter which Clientes to update
     */
    where?: ClienteWhereInput
    /**
     * Limit how many Clientes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Cliente upsert
   */
  export type ClienteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * The filter to search for the Cliente to update in case it exists.
     */
    where: ClienteWhereUniqueInput
    /**
     * In case the Cliente found by the `where` argument doesn't exist, create a new Cliente with this data.
     */
    create: XOR<ClienteCreateInput, ClienteUncheckedCreateInput>
    /**
     * In case the Cliente was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ClienteUpdateInput, ClienteUncheckedUpdateInput>
  }

  /**
   * Cliente delete
   */
  export type ClienteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter which Cliente to delete.
     */
    where: ClienteWhereUniqueInput
  }

  /**
   * Cliente deleteMany
   */
  export type ClienteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Clientes to delete
     */
    where?: ClienteWhereInput
    /**
     * Limit how many Clientes to delete.
     */
    limit?: number
  }

  /**
   * Cliente.direccion
   */
  export type Cliente$direccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direccion
     */
    select?: DireccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Direccion
     */
    omit?: DireccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionInclude<ExtArgs> | null
    where?: DireccionWhereInput
    orderBy?: DireccionOrderByWithRelationInput | DireccionOrderByWithRelationInput[]
    cursor?: DireccionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DireccionScalarFieldEnum | DireccionScalarFieldEnum[]
  }

  /**
   * Cliente.medioPago
   */
  export type Cliente$medioPagoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedioPago
     */
    select?: MedioPagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedioPago
     */
    omit?: MedioPagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedioPagoInclude<ExtArgs> | null
    where?: MedioPagoWhereInput
    orderBy?: MedioPagoOrderByWithRelationInput | MedioPagoOrderByWithRelationInput[]
    cursor?: MedioPagoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MedioPagoScalarFieldEnum | MedioPagoScalarFieldEnum[]
  }

  /**
   * Cliente.Pedido
   */
  export type Cliente$PedidoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    where?: PedidoWhereInput
    orderBy?: PedidoOrderByWithRelationInput | PedidoOrderByWithRelationInput[]
    cursor?: PedidoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PedidoScalarFieldEnum | PedidoScalarFieldEnum[]
  }

  /**
   * Cliente.listaFav
   */
  export type Cliente$listaFavArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListaFavorito
     */
    select?: ListaFavoritoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListaFavorito
     */
    omit?: ListaFavoritoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListaFavoritoInclude<ExtArgs> | null
    where?: ListaFavoritoWhereInput
  }

  /**
   * Cliente without action
   */
  export type ClienteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
  }


  /**
   * Model Usuario
   */

  export type AggregateUsuario = {
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  export type UsuarioAvgAggregateOutputType = {
    codUsuario: number | null
    codRolUsuario: number | null
  }

  export type UsuarioSumAggregateOutputType = {
    codUsuario: number | null
    codRolUsuario: number | null
  }

  export type UsuarioMinAggregateOutputType = {
    codUsuario: number | null
    nombreUsuario: string | null
    contraseñaUsuario: string | null
    emailUsuario: string | null
    fechaRegistroUsuario: Date | null
    codRolUsuario: number | null
  }

  export type UsuarioMaxAggregateOutputType = {
    codUsuario: number | null
    nombreUsuario: string | null
    contraseñaUsuario: string | null
    emailUsuario: string | null
    fechaRegistroUsuario: Date | null
    codRolUsuario: number | null
  }

  export type UsuarioCountAggregateOutputType = {
    codUsuario: number
    nombreUsuario: number
    contraseñaUsuario: number
    emailUsuario: number
    fechaRegistroUsuario: number
    codRolUsuario: number
    _all: number
  }


  export type UsuarioAvgAggregateInputType = {
    codUsuario?: true
    codRolUsuario?: true
  }

  export type UsuarioSumAggregateInputType = {
    codUsuario?: true
    codRolUsuario?: true
  }

  export type UsuarioMinAggregateInputType = {
    codUsuario?: true
    nombreUsuario?: true
    contraseñaUsuario?: true
    emailUsuario?: true
    fechaRegistroUsuario?: true
    codRolUsuario?: true
  }

  export type UsuarioMaxAggregateInputType = {
    codUsuario?: true
    nombreUsuario?: true
    contraseñaUsuario?: true
    emailUsuario?: true
    fechaRegistroUsuario?: true
    codRolUsuario?: true
  }

  export type UsuarioCountAggregateInputType = {
    codUsuario?: true
    nombreUsuario?: true
    contraseñaUsuario?: true
    emailUsuario?: true
    fechaRegistroUsuario?: true
    codRolUsuario?: true
    _all?: true
  }

  export type UsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuario to aggregate.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Usuarios
    **/
    _count?: true | UsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuarioMaxAggregateInputType
  }

  export type GetUsuarioAggregateType<T extends UsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuario[P]>
      : GetScalarType<T[P], AggregateUsuario[P]>
  }




  export type UsuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithAggregationInput | UsuarioOrderByWithAggregationInput[]
    by: UsuarioScalarFieldEnum[] | UsuarioScalarFieldEnum
    having?: UsuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuarioCountAggregateInputType | true
    _avg?: UsuarioAvgAggregateInputType
    _sum?: UsuarioSumAggregateInputType
    _min?: UsuarioMinAggregateInputType
    _max?: UsuarioMaxAggregateInputType
  }

  export type UsuarioGroupByOutputType = {
    codUsuario: number
    nombreUsuario: string
    contraseñaUsuario: string
    emailUsuario: string
    fechaRegistroUsuario: Date
    codRolUsuario: number
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  type GetUsuarioGroupByPayload<T extends UsuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
        }
      >
    >


  export type UsuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codUsuario?: boolean
    nombreUsuario?: boolean
    contraseñaUsuario?: boolean
    emailUsuario?: boolean
    fechaRegistroUsuario?: boolean
    codRolUsuario?: boolean
    rolUsuario?: boolean | RolUsuarioDefaultArgs<ExtArgs>
    cliente?: boolean | Usuario$clienteArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codUsuario?: boolean
    nombreUsuario?: boolean
    contraseñaUsuario?: boolean
    emailUsuario?: boolean
    fechaRegistroUsuario?: boolean
    codRolUsuario?: boolean
    rolUsuario?: boolean | RolUsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codUsuario?: boolean
    nombreUsuario?: boolean
    contraseñaUsuario?: boolean
    emailUsuario?: boolean
    fechaRegistroUsuario?: boolean
    codRolUsuario?: boolean
    rolUsuario?: boolean | RolUsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectScalar = {
    codUsuario?: boolean
    nombreUsuario?: boolean
    contraseñaUsuario?: boolean
    emailUsuario?: boolean
    fechaRegistroUsuario?: boolean
    codRolUsuario?: boolean
  }

  export type UsuarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"codUsuario" | "nombreUsuario" | "contraseñaUsuario" | "emailUsuario" | "fechaRegistroUsuario" | "codRolUsuario", ExtArgs["result"]["usuario"]>
  export type UsuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rolUsuario?: boolean | RolUsuarioDefaultArgs<ExtArgs>
    cliente?: boolean | Usuario$clienteArgs<ExtArgs>
  }
  export type UsuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rolUsuario?: boolean | RolUsuarioDefaultArgs<ExtArgs>
  }
  export type UsuarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rolUsuario?: boolean | RolUsuarioDefaultArgs<ExtArgs>
  }

  export type $UsuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Usuario"
    objects: {
      rolUsuario: Prisma.$RolUsuarioPayload<ExtArgs>
      cliente: Prisma.$ClientePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      codUsuario: number
      nombreUsuario: string
      contraseñaUsuario: string
      emailUsuario: string
      fechaRegistroUsuario: Date
      codRolUsuario: number
    }, ExtArgs["result"]["usuario"]>
    composites: {}
  }

  type UsuarioGetPayload<S extends boolean | null | undefined | UsuarioDefaultArgs> = $Result.GetResult<Prisma.$UsuarioPayload, S>

  type UsuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UsuarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsuarioCountAggregateInputType | true
    }

  export interface UsuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Usuario'], meta: { name: 'Usuario' } }
    /**
     * Find zero or one Usuario that matches the filter.
     * @param {UsuarioFindUniqueArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UsuarioFindUniqueArgs>(args: SelectSubset<T, UsuarioFindUniqueArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Usuario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UsuarioFindUniqueOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UsuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, UsuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UsuarioFindFirstArgs>(args?: SelectSubset<T, UsuarioFindFirstArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UsuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, UsuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuario.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuario.findMany({ take: 10 })
     * 
     * // Only select the `codUsuario`
     * const usuarioWithCodUsuarioOnly = await prisma.usuario.findMany({ select: { codUsuario: true } })
     * 
     */
    findMany<T extends UsuarioFindManyArgs>(args?: SelectSubset<T, UsuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Usuario.
     * @param {UsuarioCreateArgs} args - Arguments to create a Usuario.
     * @example
     * // Create one Usuario
     * const Usuario = await prisma.usuario.create({
     *   data: {
     *     // ... data to create a Usuario
     *   }
     * })
     * 
     */
    create<T extends UsuarioCreateArgs>(args: SelectSubset<T, UsuarioCreateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Usuarios.
     * @param {UsuarioCreateManyArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UsuarioCreateManyArgs>(args?: SelectSubset<T, UsuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Usuarios and returns the data saved in the database.
     * @param {UsuarioCreateManyAndReturnArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Usuarios and only return the `codUsuario`
     * const usuarioWithCodUsuarioOnly = await prisma.usuario.createManyAndReturn({
     *   select: { codUsuario: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UsuarioCreateManyAndReturnArgs>(args?: SelectSubset<T, UsuarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Usuario.
     * @param {UsuarioDeleteArgs} args - Arguments to delete one Usuario.
     * @example
     * // Delete one Usuario
     * const Usuario = await prisma.usuario.delete({
     *   where: {
     *     // ... filter to delete one Usuario
     *   }
     * })
     * 
     */
    delete<T extends UsuarioDeleteArgs>(args: SelectSubset<T, UsuarioDeleteArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Usuario.
     * @param {UsuarioUpdateArgs} args - Arguments to update one Usuario.
     * @example
     * // Update one Usuario
     * const usuario = await prisma.usuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UsuarioUpdateArgs>(args: SelectSubset<T, UsuarioUpdateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Usuarios.
     * @param {UsuarioDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UsuarioDeleteManyArgs>(args?: SelectSubset<T, UsuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UsuarioUpdateManyArgs>(args: SelectSubset<T, UsuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios and returns the data updated in the database.
     * @param {UsuarioUpdateManyAndReturnArgs} args - Arguments to update many Usuarios.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Usuarios and only return the `codUsuario`
     * const usuarioWithCodUsuarioOnly = await prisma.usuario.updateManyAndReturn({
     *   select: { codUsuario: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UsuarioUpdateManyAndReturnArgs>(args: SelectSubset<T, UsuarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Usuario.
     * @param {UsuarioUpsertArgs} args - Arguments to update or create a Usuario.
     * @example
     * // Update or create a Usuario
     * const usuario = await prisma.usuario.upsert({
     *   create: {
     *     // ... data to create a Usuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuario we want to update
     *   }
     * })
     */
    upsert<T extends UsuarioUpsertArgs>(args: SelectSubset<T, UsuarioUpsertArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuario.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends UsuarioCountArgs>(
      args?: Subset<T, UsuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuarioAggregateArgs>(args: Subset<T, UsuarioAggregateArgs>): Prisma.PrismaPromise<GetUsuarioAggregateType<T>>

    /**
     * Group by Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsuarioGroupByArgs['orderBy'] }
        : { orderBy?: UsuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Usuario model
   */
  readonly fields: UsuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Usuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    rolUsuario<T extends RolUsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RolUsuarioDefaultArgs<ExtArgs>>): Prisma__RolUsuarioClient<$Result.GetResult<Prisma.$RolUsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    cliente<T extends Usuario$clienteArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$clienteArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Usuario model
   */
  interface UsuarioFieldRefs {
    readonly codUsuario: FieldRef<"Usuario", 'Int'>
    readonly nombreUsuario: FieldRef<"Usuario", 'String'>
    readonly contraseñaUsuario: FieldRef<"Usuario", 'String'>
    readonly emailUsuario: FieldRef<"Usuario", 'String'>
    readonly fechaRegistroUsuario: FieldRef<"Usuario", 'DateTime'>
    readonly codRolUsuario: FieldRef<"Usuario", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Usuario findUnique
   */
  export type UsuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findUniqueOrThrow
   */
  export type UsuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findFirst
   */
  export type UsuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findFirstOrThrow
   */
  export type UsuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findMany
   */
  export type UsuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuarios to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario create
   */
  export type UsuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a Usuario.
     */
    data: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
  }

  /**
   * Usuario createMany
   */
  export type UsuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Usuario createManyAndReturn
   */
  export type UsuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Usuario update
   */
  export type UsuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a Usuario.
     */
    data: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
    /**
     * Choose, which Usuario to update.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario updateMany
   */
  export type UsuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to update.
     */
    limit?: number
  }

  /**
   * Usuario updateManyAndReturn
   */
  export type UsuarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Usuario upsert
   */
  export type UsuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the Usuario to update in case it exists.
     */
    where: UsuarioWhereUniqueInput
    /**
     * In case the Usuario found by the `where` argument doesn't exist, create a new Usuario with this data.
     */
    create: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
    /**
     * In case the Usuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
  }

  /**
   * Usuario delete
   */
  export type UsuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter which Usuario to delete.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario deleteMany
   */
  export type UsuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuarios to delete
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to delete.
     */
    limit?: number
  }

  /**
   * Usuario.cliente
   */
  export type Usuario$clienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    where?: ClienteWhereInput
  }

  /**
   * Usuario without action
   */
  export type UsuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
  }


  /**
   * Model RolUsuario
   */

  export type AggregateRolUsuario = {
    _count: RolUsuarioCountAggregateOutputType | null
    _avg: RolUsuarioAvgAggregateOutputType | null
    _sum: RolUsuarioSumAggregateOutputType | null
    _min: RolUsuarioMinAggregateOutputType | null
    _max: RolUsuarioMaxAggregateOutputType | null
  }

  export type RolUsuarioAvgAggregateOutputType = {
    codRolUsuario: number | null
  }

  export type RolUsuarioSumAggregateOutputType = {
    codRolUsuario: number | null
  }

  export type RolUsuarioMinAggregateOutputType = {
    codRolUsuario: number | null
    nombreRolUsuario: string | null
    fechaHoraBajaRol: Date | null
    activo: boolean | null
    verificado: boolean | null
    tokenVerificacion: string | null
  }

  export type RolUsuarioMaxAggregateOutputType = {
    codRolUsuario: number | null
    nombreRolUsuario: string | null
    fechaHoraBajaRol: Date | null
    activo: boolean | null
    verificado: boolean | null
    tokenVerificacion: string | null
  }

  export type RolUsuarioCountAggregateOutputType = {
    codRolUsuario: number
    nombreRolUsuario: number
    fechaHoraBajaRol: number
    permisoUsuario: number
    activo: number
    verificado: number
    tokenVerificacion: number
    _all: number
  }


  export type RolUsuarioAvgAggregateInputType = {
    codRolUsuario?: true
  }

  export type RolUsuarioSumAggregateInputType = {
    codRolUsuario?: true
  }

  export type RolUsuarioMinAggregateInputType = {
    codRolUsuario?: true
    nombreRolUsuario?: true
    fechaHoraBajaRol?: true
    activo?: true
    verificado?: true
    tokenVerificacion?: true
  }

  export type RolUsuarioMaxAggregateInputType = {
    codRolUsuario?: true
    nombreRolUsuario?: true
    fechaHoraBajaRol?: true
    activo?: true
    verificado?: true
    tokenVerificacion?: true
  }

  export type RolUsuarioCountAggregateInputType = {
    codRolUsuario?: true
    nombreRolUsuario?: true
    fechaHoraBajaRol?: true
    permisoUsuario?: true
    activo?: true
    verificado?: true
    tokenVerificacion?: true
    _all?: true
  }

  export type RolUsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RolUsuario to aggregate.
     */
    where?: RolUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RolUsuarios to fetch.
     */
    orderBy?: RolUsuarioOrderByWithRelationInput | RolUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RolUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RolUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RolUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RolUsuarios
    **/
    _count?: true | RolUsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RolUsuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RolUsuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RolUsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RolUsuarioMaxAggregateInputType
  }

  export type GetRolUsuarioAggregateType<T extends RolUsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateRolUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRolUsuario[P]>
      : GetScalarType<T[P], AggregateRolUsuario[P]>
  }




  export type RolUsuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RolUsuarioWhereInput
    orderBy?: RolUsuarioOrderByWithAggregationInput | RolUsuarioOrderByWithAggregationInput[]
    by: RolUsuarioScalarFieldEnum[] | RolUsuarioScalarFieldEnum
    having?: RolUsuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RolUsuarioCountAggregateInputType | true
    _avg?: RolUsuarioAvgAggregateInputType
    _sum?: RolUsuarioSumAggregateInputType
    _min?: RolUsuarioMinAggregateInputType
    _max?: RolUsuarioMaxAggregateInputType
  }

  export type RolUsuarioGroupByOutputType = {
    codRolUsuario: number
    nombreRolUsuario: string
    fechaHoraBajaRol: Date | null
    permisoUsuario: string[]
    activo: boolean
    verificado: boolean
    tokenVerificacion: string
    _count: RolUsuarioCountAggregateOutputType | null
    _avg: RolUsuarioAvgAggregateOutputType | null
    _sum: RolUsuarioSumAggregateOutputType | null
    _min: RolUsuarioMinAggregateOutputType | null
    _max: RolUsuarioMaxAggregateOutputType | null
  }

  type GetRolUsuarioGroupByPayload<T extends RolUsuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RolUsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RolUsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RolUsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], RolUsuarioGroupByOutputType[P]>
        }
      >
    >


  export type RolUsuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codRolUsuario?: boolean
    nombreRolUsuario?: boolean
    fechaHoraBajaRol?: boolean
    permisoUsuario?: boolean
    activo?: boolean
    verificado?: boolean
    tokenVerificacion?: boolean
    Usuarios?: boolean | RolUsuario$UsuariosArgs<ExtArgs>
    _count?: boolean | RolUsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rolUsuario"]>

  export type RolUsuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codRolUsuario?: boolean
    nombreRolUsuario?: boolean
    fechaHoraBajaRol?: boolean
    permisoUsuario?: boolean
    activo?: boolean
    verificado?: boolean
    tokenVerificacion?: boolean
  }, ExtArgs["result"]["rolUsuario"]>

  export type RolUsuarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codRolUsuario?: boolean
    nombreRolUsuario?: boolean
    fechaHoraBajaRol?: boolean
    permisoUsuario?: boolean
    activo?: boolean
    verificado?: boolean
    tokenVerificacion?: boolean
  }, ExtArgs["result"]["rolUsuario"]>

  export type RolUsuarioSelectScalar = {
    codRolUsuario?: boolean
    nombreRolUsuario?: boolean
    fechaHoraBajaRol?: boolean
    permisoUsuario?: boolean
    activo?: boolean
    verificado?: boolean
    tokenVerificacion?: boolean
  }

  export type RolUsuarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"codRolUsuario" | "nombreRolUsuario" | "fechaHoraBajaRol" | "permisoUsuario" | "activo" | "verificado" | "tokenVerificacion", ExtArgs["result"]["rolUsuario"]>
  export type RolUsuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Usuarios?: boolean | RolUsuario$UsuariosArgs<ExtArgs>
    _count?: boolean | RolUsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type RolUsuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type RolUsuarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $RolUsuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RolUsuario"
    objects: {
      Usuarios: Prisma.$UsuarioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      codRolUsuario: number
      nombreRolUsuario: string
      fechaHoraBajaRol: Date | null
      permisoUsuario: string[]
      activo: boolean
      verificado: boolean
      tokenVerificacion: string
    }, ExtArgs["result"]["rolUsuario"]>
    composites: {}
  }

  type RolUsuarioGetPayload<S extends boolean | null | undefined | RolUsuarioDefaultArgs> = $Result.GetResult<Prisma.$RolUsuarioPayload, S>

  type RolUsuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RolUsuarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RolUsuarioCountAggregateInputType | true
    }

  export interface RolUsuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RolUsuario'], meta: { name: 'RolUsuario' } }
    /**
     * Find zero or one RolUsuario that matches the filter.
     * @param {RolUsuarioFindUniqueArgs} args - Arguments to find a RolUsuario
     * @example
     * // Get one RolUsuario
     * const rolUsuario = await prisma.rolUsuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RolUsuarioFindUniqueArgs>(args: SelectSubset<T, RolUsuarioFindUniqueArgs<ExtArgs>>): Prisma__RolUsuarioClient<$Result.GetResult<Prisma.$RolUsuarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RolUsuario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RolUsuarioFindUniqueOrThrowArgs} args - Arguments to find a RolUsuario
     * @example
     * // Get one RolUsuario
     * const rolUsuario = await prisma.rolUsuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RolUsuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, RolUsuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RolUsuarioClient<$Result.GetResult<Prisma.$RolUsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RolUsuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolUsuarioFindFirstArgs} args - Arguments to find a RolUsuario
     * @example
     * // Get one RolUsuario
     * const rolUsuario = await prisma.rolUsuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RolUsuarioFindFirstArgs>(args?: SelectSubset<T, RolUsuarioFindFirstArgs<ExtArgs>>): Prisma__RolUsuarioClient<$Result.GetResult<Prisma.$RolUsuarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RolUsuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolUsuarioFindFirstOrThrowArgs} args - Arguments to find a RolUsuario
     * @example
     * // Get one RolUsuario
     * const rolUsuario = await prisma.rolUsuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RolUsuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, RolUsuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__RolUsuarioClient<$Result.GetResult<Prisma.$RolUsuarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RolUsuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolUsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RolUsuarios
     * const rolUsuarios = await prisma.rolUsuario.findMany()
     * 
     * // Get first 10 RolUsuarios
     * const rolUsuarios = await prisma.rolUsuario.findMany({ take: 10 })
     * 
     * // Only select the `codRolUsuario`
     * const rolUsuarioWithCodRolUsuarioOnly = await prisma.rolUsuario.findMany({ select: { codRolUsuario: true } })
     * 
     */
    findMany<T extends RolUsuarioFindManyArgs>(args?: SelectSubset<T, RolUsuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolUsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RolUsuario.
     * @param {RolUsuarioCreateArgs} args - Arguments to create a RolUsuario.
     * @example
     * // Create one RolUsuario
     * const RolUsuario = await prisma.rolUsuario.create({
     *   data: {
     *     // ... data to create a RolUsuario
     *   }
     * })
     * 
     */
    create<T extends RolUsuarioCreateArgs>(args: SelectSubset<T, RolUsuarioCreateArgs<ExtArgs>>): Prisma__RolUsuarioClient<$Result.GetResult<Prisma.$RolUsuarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RolUsuarios.
     * @param {RolUsuarioCreateManyArgs} args - Arguments to create many RolUsuarios.
     * @example
     * // Create many RolUsuarios
     * const rolUsuario = await prisma.rolUsuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RolUsuarioCreateManyArgs>(args?: SelectSubset<T, RolUsuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RolUsuarios and returns the data saved in the database.
     * @param {RolUsuarioCreateManyAndReturnArgs} args - Arguments to create many RolUsuarios.
     * @example
     * // Create many RolUsuarios
     * const rolUsuario = await prisma.rolUsuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RolUsuarios and only return the `codRolUsuario`
     * const rolUsuarioWithCodRolUsuarioOnly = await prisma.rolUsuario.createManyAndReturn({
     *   select: { codRolUsuario: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RolUsuarioCreateManyAndReturnArgs>(args?: SelectSubset<T, RolUsuarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolUsuarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RolUsuario.
     * @param {RolUsuarioDeleteArgs} args - Arguments to delete one RolUsuario.
     * @example
     * // Delete one RolUsuario
     * const RolUsuario = await prisma.rolUsuario.delete({
     *   where: {
     *     // ... filter to delete one RolUsuario
     *   }
     * })
     * 
     */
    delete<T extends RolUsuarioDeleteArgs>(args: SelectSubset<T, RolUsuarioDeleteArgs<ExtArgs>>): Prisma__RolUsuarioClient<$Result.GetResult<Prisma.$RolUsuarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RolUsuario.
     * @param {RolUsuarioUpdateArgs} args - Arguments to update one RolUsuario.
     * @example
     * // Update one RolUsuario
     * const rolUsuario = await prisma.rolUsuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RolUsuarioUpdateArgs>(args: SelectSubset<T, RolUsuarioUpdateArgs<ExtArgs>>): Prisma__RolUsuarioClient<$Result.GetResult<Prisma.$RolUsuarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RolUsuarios.
     * @param {RolUsuarioDeleteManyArgs} args - Arguments to filter RolUsuarios to delete.
     * @example
     * // Delete a few RolUsuarios
     * const { count } = await prisma.rolUsuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RolUsuarioDeleteManyArgs>(args?: SelectSubset<T, RolUsuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RolUsuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolUsuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RolUsuarios
     * const rolUsuario = await prisma.rolUsuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RolUsuarioUpdateManyArgs>(args: SelectSubset<T, RolUsuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RolUsuarios and returns the data updated in the database.
     * @param {RolUsuarioUpdateManyAndReturnArgs} args - Arguments to update many RolUsuarios.
     * @example
     * // Update many RolUsuarios
     * const rolUsuario = await prisma.rolUsuario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RolUsuarios and only return the `codRolUsuario`
     * const rolUsuarioWithCodRolUsuarioOnly = await prisma.rolUsuario.updateManyAndReturn({
     *   select: { codRolUsuario: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RolUsuarioUpdateManyAndReturnArgs>(args: SelectSubset<T, RolUsuarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolUsuarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RolUsuario.
     * @param {RolUsuarioUpsertArgs} args - Arguments to update or create a RolUsuario.
     * @example
     * // Update or create a RolUsuario
     * const rolUsuario = await prisma.rolUsuario.upsert({
     *   create: {
     *     // ... data to create a RolUsuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RolUsuario we want to update
     *   }
     * })
     */
    upsert<T extends RolUsuarioUpsertArgs>(args: SelectSubset<T, RolUsuarioUpsertArgs<ExtArgs>>): Prisma__RolUsuarioClient<$Result.GetResult<Prisma.$RolUsuarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RolUsuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolUsuarioCountArgs} args - Arguments to filter RolUsuarios to count.
     * @example
     * // Count the number of RolUsuarios
     * const count = await prisma.rolUsuario.count({
     *   where: {
     *     // ... the filter for the RolUsuarios we want to count
     *   }
     * })
    **/
    count<T extends RolUsuarioCountArgs>(
      args?: Subset<T, RolUsuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RolUsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RolUsuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolUsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RolUsuarioAggregateArgs>(args: Subset<T, RolUsuarioAggregateArgs>): Prisma.PrismaPromise<GetRolUsuarioAggregateType<T>>

    /**
     * Group by RolUsuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolUsuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RolUsuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RolUsuarioGroupByArgs['orderBy'] }
        : { orderBy?: RolUsuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RolUsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRolUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RolUsuario model
   */
  readonly fields: RolUsuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RolUsuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RolUsuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Usuarios<T extends RolUsuario$UsuariosArgs<ExtArgs> = {}>(args?: Subset<T, RolUsuario$UsuariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RolUsuario model
   */
  interface RolUsuarioFieldRefs {
    readonly codRolUsuario: FieldRef<"RolUsuario", 'Int'>
    readonly nombreRolUsuario: FieldRef<"RolUsuario", 'String'>
    readonly fechaHoraBajaRol: FieldRef<"RolUsuario", 'DateTime'>
    readonly permisoUsuario: FieldRef<"RolUsuario", 'String[]'>
    readonly activo: FieldRef<"RolUsuario", 'Boolean'>
    readonly verificado: FieldRef<"RolUsuario", 'Boolean'>
    readonly tokenVerificacion: FieldRef<"RolUsuario", 'String'>
  }
    

  // Custom InputTypes
  /**
   * RolUsuario findUnique
   */
  export type RolUsuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolUsuario
     */
    select?: RolUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolUsuario
     */
    omit?: RolUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which RolUsuario to fetch.
     */
    where: RolUsuarioWhereUniqueInput
  }

  /**
   * RolUsuario findUniqueOrThrow
   */
  export type RolUsuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolUsuario
     */
    select?: RolUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolUsuario
     */
    omit?: RolUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which RolUsuario to fetch.
     */
    where: RolUsuarioWhereUniqueInput
  }

  /**
   * RolUsuario findFirst
   */
  export type RolUsuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolUsuario
     */
    select?: RolUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolUsuario
     */
    omit?: RolUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which RolUsuario to fetch.
     */
    where?: RolUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RolUsuarios to fetch.
     */
    orderBy?: RolUsuarioOrderByWithRelationInput | RolUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RolUsuarios.
     */
    cursor?: RolUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RolUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RolUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RolUsuarios.
     */
    distinct?: RolUsuarioScalarFieldEnum | RolUsuarioScalarFieldEnum[]
  }

  /**
   * RolUsuario findFirstOrThrow
   */
  export type RolUsuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolUsuario
     */
    select?: RolUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolUsuario
     */
    omit?: RolUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which RolUsuario to fetch.
     */
    where?: RolUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RolUsuarios to fetch.
     */
    orderBy?: RolUsuarioOrderByWithRelationInput | RolUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RolUsuarios.
     */
    cursor?: RolUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RolUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RolUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RolUsuarios.
     */
    distinct?: RolUsuarioScalarFieldEnum | RolUsuarioScalarFieldEnum[]
  }

  /**
   * RolUsuario findMany
   */
  export type RolUsuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolUsuario
     */
    select?: RolUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolUsuario
     */
    omit?: RolUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which RolUsuarios to fetch.
     */
    where?: RolUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RolUsuarios to fetch.
     */
    orderBy?: RolUsuarioOrderByWithRelationInput | RolUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RolUsuarios.
     */
    cursor?: RolUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RolUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RolUsuarios.
     */
    skip?: number
    distinct?: RolUsuarioScalarFieldEnum | RolUsuarioScalarFieldEnum[]
  }

  /**
   * RolUsuario create
   */
  export type RolUsuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolUsuario
     */
    select?: RolUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolUsuario
     */
    omit?: RolUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolUsuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a RolUsuario.
     */
    data: XOR<RolUsuarioCreateInput, RolUsuarioUncheckedCreateInput>
  }

  /**
   * RolUsuario createMany
   */
  export type RolUsuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RolUsuarios.
     */
    data: RolUsuarioCreateManyInput | RolUsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RolUsuario createManyAndReturn
   */
  export type RolUsuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolUsuario
     */
    select?: RolUsuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RolUsuario
     */
    omit?: RolUsuarioOmit<ExtArgs> | null
    /**
     * The data used to create many RolUsuarios.
     */
    data: RolUsuarioCreateManyInput | RolUsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RolUsuario update
   */
  export type RolUsuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolUsuario
     */
    select?: RolUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolUsuario
     */
    omit?: RolUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolUsuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a RolUsuario.
     */
    data: XOR<RolUsuarioUpdateInput, RolUsuarioUncheckedUpdateInput>
    /**
     * Choose, which RolUsuario to update.
     */
    where: RolUsuarioWhereUniqueInput
  }

  /**
   * RolUsuario updateMany
   */
  export type RolUsuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RolUsuarios.
     */
    data: XOR<RolUsuarioUpdateManyMutationInput, RolUsuarioUncheckedUpdateManyInput>
    /**
     * Filter which RolUsuarios to update
     */
    where?: RolUsuarioWhereInput
    /**
     * Limit how many RolUsuarios to update.
     */
    limit?: number
  }

  /**
   * RolUsuario updateManyAndReturn
   */
  export type RolUsuarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolUsuario
     */
    select?: RolUsuarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RolUsuario
     */
    omit?: RolUsuarioOmit<ExtArgs> | null
    /**
     * The data used to update RolUsuarios.
     */
    data: XOR<RolUsuarioUpdateManyMutationInput, RolUsuarioUncheckedUpdateManyInput>
    /**
     * Filter which RolUsuarios to update
     */
    where?: RolUsuarioWhereInput
    /**
     * Limit how many RolUsuarios to update.
     */
    limit?: number
  }

  /**
   * RolUsuario upsert
   */
  export type RolUsuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolUsuario
     */
    select?: RolUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolUsuario
     */
    omit?: RolUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolUsuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the RolUsuario to update in case it exists.
     */
    where: RolUsuarioWhereUniqueInput
    /**
     * In case the RolUsuario found by the `where` argument doesn't exist, create a new RolUsuario with this data.
     */
    create: XOR<RolUsuarioCreateInput, RolUsuarioUncheckedCreateInput>
    /**
     * In case the RolUsuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RolUsuarioUpdateInput, RolUsuarioUncheckedUpdateInput>
  }

  /**
   * RolUsuario delete
   */
  export type RolUsuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolUsuario
     */
    select?: RolUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolUsuario
     */
    omit?: RolUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolUsuarioInclude<ExtArgs> | null
    /**
     * Filter which RolUsuario to delete.
     */
    where: RolUsuarioWhereUniqueInput
  }

  /**
   * RolUsuario deleteMany
   */
  export type RolUsuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RolUsuarios to delete
     */
    where?: RolUsuarioWhereInput
    /**
     * Limit how many RolUsuarios to delete.
     */
    limit?: number
  }

  /**
   * RolUsuario.Usuarios
   */
  export type RolUsuario$UsuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    cursor?: UsuarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * RolUsuario without action
   */
  export type RolUsuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolUsuario
     */
    select?: RolUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolUsuario
     */
    omit?: RolUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolUsuarioInclude<ExtArgs> | null
  }


  /**
   * Model Direccion
   */

  export type AggregateDireccion = {
    _count: DireccionCountAggregateOutputType | null
    _avg: DireccionAvgAggregateOutputType | null
    _sum: DireccionSumAggregateOutputType | null
    _min: DireccionMinAggregateOutputType | null
    _max: DireccionMaxAggregateOutputType | null
  }

  export type DireccionAvgAggregateOutputType = {
    codigoDireccion: number | null
    codigoPostal: number | null
    codCliente: number | null
  }

  export type DireccionSumAggregateOutputType = {
    codigoDireccion: number | null
    codigoPostal: number | null
    codCliente: number | null
  }

  export type DireccionMinAggregateOutputType = {
    codigoDireccion: number | null
    calle: string | null
    ciudad: string | null
    localidad: string | null
    pais: string | null
    codigoPostal: number | null
    codCliente: number | null
  }

  export type DireccionMaxAggregateOutputType = {
    codigoDireccion: number | null
    calle: string | null
    ciudad: string | null
    localidad: string | null
    pais: string | null
    codigoPostal: number | null
    codCliente: number | null
  }

  export type DireccionCountAggregateOutputType = {
    codigoDireccion: number
    calle: number
    ciudad: number
    localidad: number
    pais: number
    codigoPostal: number
    codCliente: number
    _all: number
  }


  export type DireccionAvgAggregateInputType = {
    codigoDireccion?: true
    codigoPostal?: true
    codCliente?: true
  }

  export type DireccionSumAggregateInputType = {
    codigoDireccion?: true
    codigoPostal?: true
    codCliente?: true
  }

  export type DireccionMinAggregateInputType = {
    codigoDireccion?: true
    calle?: true
    ciudad?: true
    localidad?: true
    pais?: true
    codigoPostal?: true
    codCliente?: true
  }

  export type DireccionMaxAggregateInputType = {
    codigoDireccion?: true
    calle?: true
    ciudad?: true
    localidad?: true
    pais?: true
    codigoPostal?: true
    codCliente?: true
  }

  export type DireccionCountAggregateInputType = {
    codigoDireccion?: true
    calle?: true
    ciudad?: true
    localidad?: true
    pais?: true
    codigoPostal?: true
    codCliente?: true
    _all?: true
  }

  export type DireccionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Direccion to aggregate.
     */
    where?: DireccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Direccions to fetch.
     */
    orderBy?: DireccionOrderByWithRelationInput | DireccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DireccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Direccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Direccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Direccions
    **/
    _count?: true | DireccionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DireccionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DireccionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DireccionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DireccionMaxAggregateInputType
  }

  export type GetDireccionAggregateType<T extends DireccionAggregateArgs> = {
        [P in keyof T & keyof AggregateDireccion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDireccion[P]>
      : GetScalarType<T[P], AggregateDireccion[P]>
  }




  export type DireccionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DireccionWhereInput
    orderBy?: DireccionOrderByWithAggregationInput | DireccionOrderByWithAggregationInput[]
    by: DireccionScalarFieldEnum[] | DireccionScalarFieldEnum
    having?: DireccionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DireccionCountAggregateInputType | true
    _avg?: DireccionAvgAggregateInputType
    _sum?: DireccionSumAggregateInputType
    _min?: DireccionMinAggregateInputType
    _max?: DireccionMaxAggregateInputType
  }

  export type DireccionGroupByOutputType = {
    codigoDireccion: number
    calle: string
    ciudad: string
    localidad: string
    pais: string
    codigoPostal: number
    codCliente: number
    _count: DireccionCountAggregateOutputType | null
    _avg: DireccionAvgAggregateOutputType | null
    _sum: DireccionSumAggregateOutputType | null
    _min: DireccionMinAggregateOutputType | null
    _max: DireccionMaxAggregateOutputType | null
  }

  type GetDireccionGroupByPayload<T extends DireccionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DireccionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DireccionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DireccionGroupByOutputType[P]>
            : GetScalarType<T[P], DireccionGroupByOutputType[P]>
        }
      >
    >


  export type DireccionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codigoDireccion?: boolean
    calle?: boolean
    ciudad?: boolean
    localidad?: boolean
    pais?: boolean
    codigoPostal?: boolean
    codCliente?: boolean
    clienteDir?: boolean | ClienteDefaultArgs<ExtArgs>
    envioPedido?: boolean | Direccion$envioPedidoArgs<ExtArgs>
    _count?: boolean | DireccionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["direccion"]>

  export type DireccionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codigoDireccion?: boolean
    calle?: boolean
    ciudad?: boolean
    localidad?: boolean
    pais?: boolean
    codigoPostal?: boolean
    codCliente?: boolean
    clienteDir?: boolean | ClienteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["direccion"]>

  export type DireccionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codigoDireccion?: boolean
    calle?: boolean
    ciudad?: boolean
    localidad?: boolean
    pais?: boolean
    codigoPostal?: boolean
    codCliente?: boolean
    clienteDir?: boolean | ClienteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["direccion"]>

  export type DireccionSelectScalar = {
    codigoDireccion?: boolean
    calle?: boolean
    ciudad?: boolean
    localidad?: boolean
    pais?: boolean
    codigoPostal?: boolean
    codCliente?: boolean
  }

  export type DireccionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"codigoDireccion" | "calle" | "ciudad" | "localidad" | "pais" | "codigoPostal" | "codCliente", ExtArgs["result"]["direccion"]>
  export type DireccionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clienteDir?: boolean | ClienteDefaultArgs<ExtArgs>
    envioPedido?: boolean | Direccion$envioPedidoArgs<ExtArgs>
    _count?: boolean | DireccionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type DireccionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clienteDir?: boolean | ClienteDefaultArgs<ExtArgs>
  }
  export type DireccionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clienteDir?: boolean | ClienteDefaultArgs<ExtArgs>
  }

  export type $DireccionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Direccion"
    objects: {
      clienteDir: Prisma.$ClientePayload<ExtArgs>
      envioPedido: Prisma.$EnvioPedidoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      codigoDireccion: number
      calle: string
      ciudad: string
      localidad: string
      pais: string
      codigoPostal: number
      codCliente: number
    }, ExtArgs["result"]["direccion"]>
    composites: {}
  }

  type DireccionGetPayload<S extends boolean | null | undefined | DireccionDefaultArgs> = $Result.GetResult<Prisma.$DireccionPayload, S>

  type DireccionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DireccionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DireccionCountAggregateInputType | true
    }

  export interface DireccionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Direccion'], meta: { name: 'Direccion' } }
    /**
     * Find zero or one Direccion that matches the filter.
     * @param {DireccionFindUniqueArgs} args - Arguments to find a Direccion
     * @example
     * // Get one Direccion
     * const direccion = await prisma.direccion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DireccionFindUniqueArgs>(args: SelectSubset<T, DireccionFindUniqueArgs<ExtArgs>>): Prisma__DireccionClient<$Result.GetResult<Prisma.$DireccionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Direccion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DireccionFindUniqueOrThrowArgs} args - Arguments to find a Direccion
     * @example
     * // Get one Direccion
     * const direccion = await prisma.direccion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DireccionFindUniqueOrThrowArgs>(args: SelectSubset<T, DireccionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DireccionClient<$Result.GetResult<Prisma.$DireccionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Direccion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DireccionFindFirstArgs} args - Arguments to find a Direccion
     * @example
     * // Get one Direccion
     * const direccion = await prisma.direccion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DireccionFindFirstArgs>(args?: SelectSubset<T, DireccionFindFirstArgs<ExtArgs>>): Prisma__DireccionClient<$Result.GetResult<Prisma.$DireccionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Direccion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DireccionFindFirstOrThrowArgs} args - Arguments to find a Direccion
     * @example
     * // Get one Direccion
     * const direccion = await prisma.direccion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DireccionFindFirstOrThrowArgs>(args?: SelectSubset<T, DireccionFindFirstOrThrowArgs<ExtArgs>>): Prisma__DireccionClient<$Result.GetResult<Prisma.$DireccionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Direccions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DireccionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Direccions
     * const direccions = await prisma.direccion.findMany()
     * 
     * // Get first 10 Direccions
     * const direccions = await prisma.direccion.findMany({ take: 10 })
     * 
     * // Only select the `codigoDireccion`
     * const direccionWithCodigoDireccionOnly = await prisma.direccion.findMany({ select: { codigoDireccion: true } })
     * 
     */
    findMany<T extends DireccionFindManyArgs>(args?: SelectSubset<T, DireccionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DireccionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Direccion.
     * @param {DireccionCreateArgs} args - Arguments to create a Direccion.
     * @example
     * // Create one Direccion
     * const Direccion = await prisma.direccion.create({
     *   data: {
     *     // ... data to create a Direccion
     *   }
     * })
     * 
     */
    create<T extends DireccionCreateArgs>(args: SelectSubset<T, DireccionCreateArgs<ExtArgs>>): Prisma__DireccionClient<$Result.GetResult<Prisma.$DireccionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Direccions.
     * @param {DireccionCreateManyArgs} args - Arguments to create many Direccions.
     * @example
     * // Create many Direccions
     * const direccion = await prisma.direccion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DireccionCreateManyArgs>(args?: SelectSubset<T, DireccionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Direccions and returns the data saved in the database.
     * @param {DireccionCreateManyAndReturnArgs} args - Arguments to create many Direccions.
     * @example
     * // Create many Direccions
     * const direccion = await prisma.direccion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Direccions and only return the `codigoDireccion`
     * const direccionWithCodigoDireccionOnly = await prisma.direccion.createManyAndReturn({
     *   select: { codigoDireccion: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DireccionCreateManyAndReturnArgs>(args?: SelectSubset<T, DireccionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DireccionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Direccion.
     * @param {DireccionDeleteArgs} args - Arguments to delete one Direccion.
     * @example
     * // Delete one Direccion
     * const Direccion = await prisma.direccion.delete({
     *   where: {
     *     // ... filter to delete one Direccion
     *   }
     * })
     * 
     */
    delete<T extends DireccionDeleteArgs>(args: SelectSubset<T, DireccionDeleteArgs<ExtArgs>>): Prisma__DireccionClient<$Result.GetResult<Prisma.$DireccionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Direccion.
     * @param {DireccionUpdateArgs} args - Arguments to update one Direccion.
     * @example
     * // Update one Direccion
     * const direccion = await prisma.direccion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DireccionUpdateArgs>(args: SelectSubset<T, DireccionUpdateArgs<ExtArgs>>): Prisma__DireccionClient<$Result.GetResult<Prisma.$DireccionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Direccions.
     * @param {DireccionDeleteManyArgs} args - Arguments to filter Direccions to delete.
     * @example
     * // Delete a few Direccions
     * const { count } = await prisma.direccion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DireccionDeleteManyArgs>(args?: SelectSubset<T, DireccionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Direccions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DireccionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Direccions
     * const direccion = await prisma.direccion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DireccionUpdateManyArgs>(args: SelectSubset<T, DireccionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Direccions and returns the data updated in the database.
     * @param {DireccionUpdateManyAndReturnArgs} args - Arguments to update many Direccions.
     * @example
     * // Update many Direccions
     * const direccion = await prisma.direccion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Direccions and only return the `codigoDireccion`
     * const direccionWithCodigoDireccionOnly = await prisma.direccion.updateManyAndReturn({
     *   select: { codigoDireccion: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DireccionUpdateManyAndReturnArgs>(args: SelectSubset<T, DireccionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DireccionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Direccion.
     * @param {DireccionUpsertArgs} args - Arguments to update or create a Direccion.
     * @example
     * // Update or create a Direccion
     * const direccion = await prisma.direccion.upsert({
     *   create: {
     *     // ... data to create a Direccion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Direccion we want to update
     *   }
     * })
     */
    upsert<T extends DireccionUpsertArgs>(args: SelectSubset<T, DireccionUpsertArgs<ExtArgs>>): Prisma__DireccionClient<$Result.GetResult<Prisma.$DireccionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Direccions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DireccionCountArgs} args - Arguments to filter Direccions to count.
     * @example
     * // Count the number of Direccions
     * const count = await prisma.direccion.count({
     *   where: {
     *     // ... the filter for the Direccions we want to count
     *   }
     * })
    **/
    count<T extends DireccionCountArgs>(
      args?: Subset<T, DireccionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DireccionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Direccion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DireccionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DireccionAggregateArgs>(args: Subset<T, DireccionAggregateArgs>): Prisma.PrismaPromise<GetDireccionAggregateType<T>>

    /**
     * Group by Direccion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DireccionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DireccionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DireccionGroupByArgs['orderBy'] }
        : { orderBy?: DireccionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DireccionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDireccionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Direccion model
   */
  readonly fields: DireccionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Direccion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DireccionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    clienteDir<T extends ClienteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClienteDefaultArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    envioPedido<T extends Direccion$envioPedidoArgs<ExtArgs> = {}>(args?: Subset<T, Direccion$envioPedidoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EnvioPedidoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Direccion model
   */
  interface DireccionFieldRefs {
    readonly codigoDireccion: FieldRef<"Direccion", 'Int'>
    readonly calle: FieldRef<"Direccion", 'String'>
    readonly ciudad: FieldRef<"Direccion", 'String'>
    readonly localidad: FieldRef<"Direccion", 'String'>
    readonly pais: FieldRef<"Direccion", 'String'>
    readonly codigoPostal: FieldRef<"Direccion", 'Int'>
    readonly codCliente: FieldRef<"Direccion", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Direccion findUnique
   */
  export type DireccionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direccion
     */
    select?: DireccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Direccion
     */
    omit?: DireccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionInclude<ExtArgs> | null
    /**
     * Filter, which Direccion to fetch.
     */
    where: DireccionWhereUniqueInput
  }

  /**
   * Direccion findUniqueOrThrow
   */
  export type DireccionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direccion
     */
    select?: DireccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Direccion
     */
    omit?: DireccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionInclude<ExtArgs> | null
    /**
     * Filter, which Direccion to fetch.
     */
    where: DireccionWhereUniqueInput
  }

  /**
   * Direccion findFirst
   */
  export type DireccionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direccion
     */
    select?: DireccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Direccion
     */
    omit?: DireccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionInclude<ExtArgs> | null
    /**
     * Filter, which Direccion to fetch.
     */
    where?: DireccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Direccions to fetch.
     */
    orderBy?: DireccionOrderByWithRelationInput | DireccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Direccions.
     */
    cursor?: DireccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Direccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Direccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Direccions.
     */
    distinct?: DireccionScalarFieldEnum | DireccionScalarFieldEnum[]
  }

  /**
   * Direccion findFirstOrThrow
   */
  export type DireccionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direccion
     */
    select?: DireccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Direccion
     */
    omit?: DireccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionInclude<ExtArgs> | null
    /**
     * Filter, which Direccion to fetch.
     */
    where?: DireccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Direccions to fetch.
     */
    orderBy?: DireccionOrderByWithRelationInput | DireccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Direccions.
     */
    cursor?: DireccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Direccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Direccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Direccions.
     */
    distinct?: DireccionScalarFieldEnum | DireccionScalarFieldEnum[]
  }

  /**
   * Direccion findMany
   */
  export type DireccionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direccion
     */
    select?: DireccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Direccion
     */
    omit?: DireccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionInclude<ExtArgs> | null
    /**
     * Filter, which Direccions to fetch.
     */
    where?: DireccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Direccions to fetch.
     */
    orderBy?: DireccionOrderByWithRelationInput | DireccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Direccions.
     */
    cursor?: DireccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Direccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Direccions.
     */
    skip?: number
    distinct?: DireccionScalarFieldEnum | DireccionScalarFieldEnum[]
  }

  /**
   * Direccion create
   */
  export type DireccionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direccion
     */
    select?: DireccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Direccion
     */
    omit?: DireccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionInclude<ExtArgs> | null
    /**
     * The data needed to create a Direccion.
     */
    data: XOR<DireccionCreateInput, DireccionUncheckedCreateInput>
  }

  /**
   * Direccion createMany
   */
  export type DireccionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Direccions.
     */
    data: DireccionCreateManyInput | DireccionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Direccion createManyAndReturn
   */
  export type DireccionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direccion
     */
    select?: DireccionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Direccion
     */
    omit?: DireccionOmit<ExtArgs> | null
    /**
     * The data used to create many Direccions.
     */
    data: DireccionCreateManyInput | DireccionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Direccion update
   */
  export type DireccionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direccion
     */
    select?: DireccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Direccion
     */
    omit?: DireccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionInclude<ExtArgs> | null
    /**
     * The data needed to update a Direccion.
     */
    data: XOR<DireccionUpdateInput, DireccionUncheckedUpdateInput>
    /**
     * Choose, which Direccion to update.
     */
    where: DireccionWhereUniqueInput
  }

  /**
   * Direccion updateMany
   */
  export type DireccionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Direccions.
     */
    data: XOR<DireccionUpdateManyMutationInput, DireccionUncheckedUpdateManyInput>
    /**
     * Filter which Direccions to update
     */
    where?: DireccionWhereInput
    /**
     * Limit how many Direccions to update.
     */
    limit?: number
  }

  /**
   * Direccion updateManyAndReturn
   */
  export type DireccionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direccion
     */
    select?: DireccionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Direccion
     */
    omit?: DireccionOmit<ExtArgs> | null
    /**
     * The data used to update Direccions.
     */
    data: XOR<DireccionUpdateManyMutationInput, DireccionUncheckedUpdateManyInput>
    /**
     * Filter which Direccions to update
     */
    where?: DireccionWhereInput
    /**
     * Limit how many Direccions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Direccion upsert
   */
  export type DireccionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direccion
     */
    select?: DireccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Direccion
     */
    omit?: DireccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionInclude<ExtArgs> | null
    /**
     * The filter to search for the Direccion to update in case it exists.
     */
    where: DireccionWhereUniqueInput
    /**
     * In case the Direccion found by the `where` argument doesn't exist, create a new Direccion with this data.
     */
    create: XOR<DireccionCreateInput, DireccionUncheckedCreateInput>
    /**
     * In case the Direccion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DireccionUpdateInput, DireccionUncheckedUpdateInput>
  }

  /**
   * Direccion delete
   */
  export type DireccionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direccion
     */
    select?: DireccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Direccion
     */
    omit?: DireccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionInclude<ExtArgs> | null
    /**
     * Filter which Direccion to delete.
     */
    where: DireccionWhereUniqueInput
  }

  /**
   * Direccion deleteMany
   */
  export type DireccionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Direccions to delete
     */
    where?: DireccionWhereInput
    /**
     * Limit how many Direccions to delete.
     */
    limit?: number
  }

  /**
   * Direccion.envioPedido
   */
  export type Direccion$envioPedidoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnvioPedido
     */
    select?: EnvioPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EnvioPedido
     */
    omit?: EnvioPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnvioPedidoInclude<ExtArgs> | null
    where?: EnvioPedidoWhereInput
    orderBy?: EnvioPedidoOrderByWithRelationInput | EnvioPedidoOrderByWithRelationInput[]
    cursor?: EnvioPedidoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EnvioPedidoScalarFieldEnum | EnvioPedidoScalarFieldEnum[]
  }

  /**
   * Direccion without action
   */
  export type DireccionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direccion
     */
    select?: DireccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Direccion
     */
    omit?: DireccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionInclude<ExtArgs> | null
  }


  /**
   * Model Pedido
   */

  export type AggregatePedido = {
    _count: PedidoCountAggregateOutputType | null
    _avg: PedidoAvgAggregateOutputType | null
    _sum: PedidoSumAggregateOutputType | null
    _min: PedidoMinAggregateOutputType | null
    _max: PedidoMaxAggregateOutputType | null
  }

  export type PedidoAvgAggregateOutputType = {
    codPedido: number | null
    impuestoSobreVenta: number | null
    montoTotal: number | null
    codCliente: number | null
    codCarritoCompra: number | null
    codEstadoPedido: number | null
  }

  export type PedidoSumAggregateOutputType = {
    codPedido: number | null
    impuestoSobreVenta: number | null
    montoTotal: number | null
    codCliente: number | null
    codCarritoCompra: number | null
    codEstadoPedido: number | null
  }

  export type PedidoMinAggregateOutputType = {
    codPedido: number | null
    impuestoSobreVenta: number | null
    envioGratuito: boolean | null
    montoTotal: number | null
    fechaAltaPedido: Date | null
    codCliente: number | null
    codCarritoCompra: number | null
    codEstadoPedido: number | null
  }

  export type PedidoMaxAggregateOutputType = {
    codPedido: number | null
    impuestoSobreVenta: number | null
    envioGratuito: boolean | null
    montoTotal: number | null
    fechaAltaPedido: Date | null
    codCliente: number | null
    codCarritoCompra: number | null
    codEstadoPedido: number | null
  }

  export type PedidoCountAggregateOutputType = {
    codPedido: number
    impuestoSobreVenta: number
    envioGratuito: number
    montoTotal: number
    fechaAltaPedido: number
    codCliente: number
    codCarritoCompra: number
    codEstadoPedido: number
    _all: number
  }


  export type PedidoAvgAggregateInputType = {
    codPedido?: true
    impuestoSobreVenta?: true
    montoTotal?: true
    codCliente?: true
    codCarritoCompra?: true
    codEstadoPedido?: true
  }

  export type PedidoSumAggregateInputType = {
    codPedido?: true
    impuestoSobreVenta?: true
    montoTotal?: true
    codCliente?: true
    codCarritoCompra?: true
    codEstadoPedido?: true
  }

  export type PedidoMinAggregateInputType = {
    codPedido?: true
    impuestoSobreVenta?: true
    envioGratuito?: true
    montoTotal?: true
    fechaAltaPedido?: true
    codCliente?: true
    codCarritoCompra?: true
    codEstadoPedido?: true
  }

  export type PedidoMaxAggregateInputType = {
    codPedido?: true
    impuestoSobreVenta?: true
    envioGratuito?: true
    montoTotal?: true
    fechaAltaPedido?: true
    codCliente?: true
    codCarritoCompra?: true
    codEstadoPedido?: true
  }

  export type PedidoCountAggregateInputType = {
    codPedido?: true
    impuestoSobreVenta?: true
    envioGratuito?: true
    montoTotal?: true
    fechaAltaPedido?: true
    codCliente?: true
    codCarritoCompra?: true
    codEstadoPedido?: true
    _all?: true
  }

  export type PedidoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pedido to aggregate.
     */
    where?: PedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pedidos to fetch.
     */
    orderBy?: PedidoOrderByWithRelationInput | PedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pedidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Pedidos
    **/
    _count?: true | PedidoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PedidoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PedidoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PedidoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PedidoMaxAggregateInputType
  }

  export type GetPedidoAggregateType<T extends PedidoAggregateArgs> = {
        [P in keyof T & keyof AggregatePedido]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePedido[P]>
      : GetScalarType<T[P], AggregatePedido[P]>
  }




  export type PedidoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PedidoWhereInput
    orderBy?: PedidoOrderByWithAggregationInput | PedidoOrderByWithAggregationInput[]
    by: PedidoScalarFieldEnum[] | PedidoScalarFieldEnum
    having?: PedidoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PedidoCountAggregateInputType | true
    _avg?: PedidoAvgAggregateInputType
    _sum?: PedidoSumAggregateInputType
    _min?: PedidoMinAggregateInputType
    _max?: PedidoMaxAggregateInputType
  }

  export type PedidoGroupByOutputType = {
    codPedido: number
    impuestoSobreVenta: number
    envioGratuito: boolean
    montoTotal: number
    fechaAltaPedido: Date
    codCliente: number
    codCarritoCompra: number
    codEstadoPedido: number
    _count: PedidoCountAggregateOutputType | null
    _avg: PedidoAvgAggregateOutputType | null
    _sum: PedidoSumAggregateOutputType | null
    _min: PedidoMinAggregateOutputType | null
    _max: PedidoMaxAggregateOutputType | null
  }

  type GetPedidoGroupByPayload<T extends PedidoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PedidoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PedidoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PedidoGroupByOutputType[P]>
            : GetScalarType<T[P], PedidoGroupByOutputType[P]>
        }
      >
    >


  export type PedidoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codPedido?: boolean
    impuestoSobreVenta?: boolean
    envioGratuito?: boolean
    montoTotal?: boolean
    fechaAltaPedido?: boolean
    codCliente?: boolean
    codCarritoCompra?: boolean
    codEstadoPedido?: boolean
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    carritoCompra?: boolean | CarritoComprasDefaultArgs<ExtArgs>
    estadoPedido?: boolean | EstadoPedidoDefaultArgs<ExtArgs>
    articuloPedido?: boolean | Pedido$articuloPedidoArgs<ExtArgs>
    _count?: boolean | PedidoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pedido"]>

  export type PedidoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codPedido?: boolean
    impuestoSobreVenta?: boolean
    envioGratuito?: boolean
    montoTotal?: boolean
    fechaAltaPedido?: boolean
    codCliente?: boolean
    codCarritoCompra?: boolean
    codEstadoPedido?: boolean
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    carritoCompra?: boolean | CarritoComprasDefaultArgs<ExtArgs>
    estadoPedido?: boolean | EstadoPedidoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pedido"]>

  export type PedidoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codPedido?: boolean
    impuestoSobreVenta?: boolean
    envioGratuito?: boolean
    montoTotal?: boolean
    fechaAltaPedido?: boolean
    codCliente?: boolean
    codCarritoCompra?: boolean
    codEstadoPedido?: boolean
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    carritoCompra?: boolean | CarritoComprasDefaultArgs<ExtArgs>
    estadoPedido?: boolean | EstadoPedidoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pedido"]>

  export type PedidoSelectScalar = {
    codPedido?: boolean
    impuestoSobreVenta?: boolean
    envioGratuito?: boolean
    montoTotal?: boolean
    fechaAltaPedido?: boolean
    codCliente?: boolean
    codCarritoCompra?: boolean
    codEstadoPedido?: boolean
  }

  export type PedidoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"codPedido" | "impuestoSobreVenta" | "envioGratuito" | "montoTotal" | "fechaAltaPedido" | "codCliente" | "codCarritoCompra" | "codEstadoPedido", ExtArgs["result"]["pedido"]>
  export type PedidoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    carritoCompra?: boolean | CarritoComprasDefaultArgs<ExtArgs>
    estadoPedido?: boolean | EstadoPedidoDefaultArgs<ExtArgs>
    articuloPedido?: boolean | Pedido$articuloPedidoArgs<ExtArgs>
    _count?: boolean | PedidoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PedidoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    carritoCompra?: boolean | CarritoComprasDefaultArgs<ExtArgs>
    estadoPedido?: boolean | EstadoPedidoDefaultArgs<ExtArgs>
  }
  export type PedidoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    carritoCompra?: boolean | CarritoComprasDefaultArgs<ExtArgs>
    estadoPedido?: boolean | EstadoPedidoDefaultArgs<ExtArgs>
  }

  export type $PedidoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Pedido"
    objects: {
      cliente: Prisma.$ClientePayload<ExtArgs>
      carritoCompra: Prisma.$CarritoComprasPayload<ExtArgs>
      estadoPedido: Prisma.$EstadoPedidoPayload<ExtArgs>
      articuloPedido: Prisma.$ArticuloPedidoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      codPedido: number
      impuestoSobreVenta: number
      envioGratuito: boolean
      montoTotal: number
      fechaAltaPedido: Date
      codCliente: number
      codCarritoCompra: number
      codEstadoPedido: number
    }, ExtArgs["result"]["pedido"]>
    composites: {}
  }

  type PedidoGetPayload<S extends boolean | null | undefined | PedidoDefaultArgs> = $Result.GetResult<Prisma.$PedidoPayload, S>

  type PedidoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PedidoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PedidoCountAggregateInputType | true
    }

  export interface PedidoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Pedido'], meta: { name: 'Pedido' } }
    /**
     * Find zero or one Pedido that matches the filter.
     * @param {PedidoFindUniqueArgs} args - Arguments to find a Pedido
     * @example
     * // Get one Pedido
     * const pedido = await prisma.pedido.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PedidoFindUniqueArgs>(args: SelectSubset<T, PedidoFindUniqueArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Pedido that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PedidoFindUniqueOrThrowArgs} args - Arguments to find a Pedido
     * @example
     * // Get one Pedido
     * const pedido = await prisma.pedido.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PedidoFindUniqueOrThrowArgs>(args: SelectSubset<T, PedidoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pedido that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoFindFirstArgs} args - Arguments to find a Pedido
     * @example
     * // Get one Pedido
     * const pedido = await prisma.pedido.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PedidoFindFirstArgs>(args?: SelectSubset<T, PedidoFindFirstArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pedido that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoFindFirstOrThrowArgs} args - Arguments to find a Pedido
     * @example
     * // Get one Pedido
     * const pedido = await prisma.pedido.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PedidoFindFirstOrThrowArgs>(args?: SelectSubset<T, PedidoFindFirstOrThrowArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Pedidos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pedidos
     * const pedidos = await prisma.pedido.findMany()
     * 
     * // Get first 10 Pedidos
     * const pedidos = await prisma.pedido.findMany({ take: 10 })
     * 
     * // Only select the `codPedido`
     * const pedidoWithCodPedidoOnly = await prisma.pedido.findMany({ select: { codPedido: true } })
     * 
     */
    findMany<T extends PedidoFindManyArgs>(args?: SelectSubset<T, PedidoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Pedido.
     * @param {PedidoCreateArgs} args - Arguments to create a Pedido.
     * @example
     * // Create one Pedido
     * const Pedido = await prisma.pedido.create({
     *   data: {
     *     // ... data to create a Pedido
     *   }
     * })
     * 
     */
    create<T extends PedidoCreateArgs>(args: SelectSubset<T, PedidoCreateArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Pedidos.
     * @param {PedidoCreateManyArgs} args - Arguments to create many Pedidos.
     * @example
     * // Create many Pedidos
     * const pedido = await prisma.pedido.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PedidoCreateManyArgs>(args?: SelectSubset<T, PedidoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Pedidos and returns the data saved in the database.
     * @param {PedidoCreateManyAndReturnArgs} args - Arguments to create many Pedidos.
     * @example
     * // Create many Pedidos
     * const pedido = await prisma.pedido.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Pedidos and only return the `codPedido`
     * const pedidoWithCodPedidoOnly = await prisma.pedido.createManyAndReturn({
     *   select: { codPedido: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PedidoCreateManyAndReturnArgs>(args?: SelectSubset<T, PedidoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Pedido.
     * @param {PedidoDeleteArgs} args - Arguments to delete one Pedido.
     * @example
     * // Delete one Pedido
     * const Pedido = await prisma.pedido.delete({
     *   where: {
     *     // ... filter to delete one Pedido
     *   }
     * })
     * 
     */
    delete<T extends PedidoDeleteArgs>(args: SelectSubset<T, PedidoDeleteArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Pedido.
     * @param {PedidoUpdateArgs} args - Arguments to update one Pedido.
     * @example
     * // Update one Pedido
     * const pedido = await prisma.pedido.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PedidoUpdateArgs>(args: SelectSubset<T, PedidoUpdateArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Pedidos.
     * @param {PedidoDeleteManyArgs} args - Arguments to filter Pedidos to delete.
     * @example
     * // Delete a few Pedidos
     * const { count } = await prisma.pedido.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PedidoDeleteManyArgs>(args?: SelectSubset<T, PedidoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pedidos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pedidos
     * const pedido = await prisma.pedido.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PedidoUpdateManyArgs>(args: SelectSubset<T, PedidoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pedidos and returns the data updated in the database.
     * @param {PedidoUpdateManyAndReturnArgs} args - Arguments to update many Pedidos.
     * @example
     * // Update many Pedidos
     * const pedido = await prisma.pedido.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Pedidos and only return the `codPedido`
     * const pedidoWithCodPedidoOnly = await prisma.pedido.updateManyAndReturn({
     *   select: { codPedido: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PedidoUpdateManyAndReturnArgs>(args: SelectSubset<T, PedidoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Pedido.
     * @param {PedidoUpsertArgs} args - Arguments to update or create a Pedido.
     * @example
     * // Update or create a Pedido
     * const pedido = await prisma.pedido.upsert({
     *   create: {
     *     // ... data to create a Pedido
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pedido we want to update
     *   }
     * })
     */
    upsert<T extends PedidoUpsertArgs>(args: SelectSubset<T, PedidoUpsertArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Pedidos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoCountArgs} args - Arguments to filter Pedidos to count.
     * @example
     * // Count the number of Pedidos
     * const count = await prisma.pedido.count({
     *   where: {
     *     // ... the filter for the Pedidos we want to count
     *   }
     * })
    **/
    count<T extends PedidoCountArgs>(
      args?: Subset<T, PedidoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PedidoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pedido.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PedidoAggregateArgs>(args: Subset<T, PedidoAggregateArgs>): Prisma.PrismaPromise<GetPedidoAggregateType<T>>

    /**
     * Group by Pedido.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PedidoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PedidoGroupByArgs['orderBy'] }
        : { orderBy?: PedidoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PedidoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPedidoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Pedido model
   */
  readonly fields: PedidoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Pedido.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PedidoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cliente<T extends ClienteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClienteDefaultArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    carritoCompra<T extends CarritoComprasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CarritoComprasDefaultArgs<ExtArgs>>): Prisma__CarritoComprasClient<$Result.GetResult<Prisma.$CarritoComprasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    estadoPedido<T extends EstadoPedidoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EstadoPedidoDefaultArgs<ExtArgs>>): Prisma__EstadoPedidoClient<$Result.GetResult<Prisma.$EstadoPedidoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    articuloPedido<T extends Pedido$articuloPedidoArgs<ExtArgs> = {}>(args?: Subset<T, Pedido$articuloPedidoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArticuloPedidoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Pedido model
   */
  interface PedidoFieldRefs {
    readonly codPedido: FieldRef<"Pedido", 'Int'>
    readonly impuestoSobreVenta: FieldRef<"Pedido", 'Float'>
    readonly envioGratuito: FieldRef<"Pedido", 'Boolean'>
    readonly montoTotal: FieldRef<"Pedido", 'Float'>
    readonly fechaAltaPedido: FieldRef<"Pedido", 'DateTime'>
    readonly codCliente: FieldRef<"Pedido", 'Int'>
    readonly codCarritoCompra: FieldRef<"Pedido", 'Int'>
    readonly codEstadoPedido: FieldRef<"Pedido", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Pedido findUnique
   */
  export type PedidoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * Filter, which Pedido to fetch.
     */
    where: PedidoWhereUniqueInput
  }

  /**
   * Pedido findUniqueOrThrow
   */
  export type PedidoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * Filter, which Pedido to fetch.
     */
    where: PedidoWhereUniqueInput
  }

  /**
   * Pedido findFirst
   */
  export type PedidoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * Filter, which Pedido to fetch.
     */
    where?: PedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pedidos to fetch.
     */
    orderBy?: PedidoOrderByWithRelationInput | PedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pedidos.
     */
    cursor?: PedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pedidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pedidos.
     */
    distinct?: PedidoScalarFieldEnum | PedidoScalarFieldEnum[]
  }

  /**
   * Pedido findFirstOrThrow
   */
  export type PedidoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * Filter, which Pedido to fetch.
     */
    where?: PedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pedidos to fetch.
     */
    orderBy?: PedidoOrderByWithRelationInput | PedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pedidos.
     */
    cursor?: PedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pedidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pedidos.
     */
    distinct?: PedidoScalarFieldEnum | PedidoScalarFieldEnum[]
  }

  /**
   * Pedido findMany
   */
  export type PedidoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * Filter, which Pedidos to fetch.
     */
    where?: PedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pedidos to fetch.
     */
    orderBy?: PedidoOrderByWithRelationInput | PedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Pedidos.
     */
    cursor?: PedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pedidos.
     */
    skip?: number
    distinct?: PedidoScalarFieldEnum | PedidoScalarFieldEnum[]
  }

  /**
   * Pedido create
   */
  export type PedidoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * The data needed to create a Pedido.
     */
    data: XOR<PedidoCreateInput, PedidoUncheckedCreateInput>
  }

  /**
   * Pedido createMany
   */
  export type PedidoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Pedidos.
     */
    data: PedidoCreateManyInput | PedidoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Pedido createManyAndReturn
   */
  export type PedidoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * The data used to create many Pedidos.
     */
    data: PedidoCreateManyInput | PedidoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Pedido update
   */
  export type PedidoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * The data needed to update a Pedido.
     */
    data: XOR<PedidoUpdateInput, PedidoUncheckedUpdateInput>
    /**
     * Choose, which Pedido to update.
     */
    where: PedidoWhereUniqueInput
  }

  /**
   * Pedido updateMany
   */
  export type PedidoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Pedidos.
     */
    data: XOR<PedidoUpdateManyMutationInput, PedidoUncheckedUpdateManyInput>
    /**
     * Filter which Pedidos to update
     */
    where?: PedidoWhereInput
    /**
     * Limit how many Pedidos to update.
     */
    limit?: number
  }

  /**
   * Pedido updateManyAndReturn
   */
  export type PedidoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * The data used to update Pedidos.
     */
    data: XOR<PedidoUpdateManyMutationInput, PedidoUncheckedUpdateManyInput>
    /**
     * Filter which Pedidos to update
     */
    where?: PedidoWhereInput
    /**
     * Limit how many Pedidos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Pedido upsert
   */
  export type PedidoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * The filter to search for the Pedido to update in case it exists.
     */
    where: PedidoWhereUniqueInput
    /**
     * In case the Pedido found by the `where` argument doesn't exist, create a new Pedido with this data.
     */
    create: XOR<PedidoCreateInput, PedidoUncheckedCreateInput>
    /**
     * In case the Pedido was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PedidoUpdateInput, PedidoUncheckedUpdateInput>
  }

  /**
   * Pedido delete
   */
  export type PedidoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * Filter which Pedido to delete.
     */
    where: PedidoWhereUniqueInput
  }

  /**
   * Pedido deleteMany
   */
  export type PedidoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pedidos to delete
     */
    where?: PedidoWhereInput
    /**
     * Limit how many Pedidos to delete.
     */
    limit?: number
  }

  /**
   * Pedido.articuloPedido
   */
  export type Pedido$articuloPedidoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticuloPedido
     */
    select?: ArticuloPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArticuloPedido
     */
    omit?: ArticuloPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticuloPedidoInclude<ExtArgs> | null
    where?: ArticuloPedidoWhereInput
    orderBy?: ArticuloPedidoOrderByWithRelationInput | ArticuloPedidoOrderByWithRelationInput[]
    cursor?: ArticuloPedidoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ArticuloPedidoScalarFieldEnum | ArticuloPedidoScalarFieldEnum[]
  }

  /**
   * Pedido without action
   */
  export type PedidoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
  }


  /**
   * Model EstadoPedido
   */

  export type AggregateEstadoPedido = {
    _count: EstadoPedidoCountAggregateOutputType | null
    _avg: EstadoPedidoAvgAggregateOutputType | null
    _sum: EstadoPedidoSumAggregateOutputType | null
    _min: EstadoPedidoMinAggregateOutputType | null
    _max: EstadoPedidoMaxAggregateOutputType | null
  }

  export type EstadoPedidoAvgAggregateOutputType = {
    codEstadoPedido: number | null
  }

  export type EstadoPedidoSumAggregateOutputType = {
    codEstadoPedido: number | null
  }

  export type EstadoPedidoMinAggregateOutputType = {
    codEstadoPedido: number | null
    nombreEstadoPedido: string | null
    fechaHoraBajaEP: Date | null
  }

  export type EstadoPedidoMaxAggregateOutputType = {
    codEstadoPedido: number | null
    nombreEstadoPedido: string | null
    fechaHoraBajaEP: Date | null
  }

  export type EstadoPedidoCountAggregateOutputType = {
    codEstadoPedido: number
    nombreEstadoPedido: number
    fechaHoraBajaEP: number
    _all: number
  }


  export type EstadoPedidoAvgAggregateInputType = {
    codEstadoPedido?: true
  }

  export type EstadoPedidoSumAggregateInputType = {
    codEstadoPedido?: true
  }

  export type EstadoPedidoMinAggregateInputType = {
    codEstadoPedido?: true
    nombreEstadoPedido?: true
    fechaHoraBajaEP?: true
  }

  export type EstadoPedidoMaxAggregateInputType = {
    codEstadoPedido?: true
    nombreEstadoPedido?: true
    fechaHoraBajaEP?: true
  }

  export type EstadoPedidoCountAggregateInputType = {
    codEstadoPedido?: true
    nombreEstadoPedido?: true
    fechaHoraBajaEP?: true
    _all?: true
  }

  export type EstadoPedidoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EstadoPedido to aggregate.
     */
    where?: EstadoPedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstadoPedidos to fetch.
     */
    orderBy?: EstadoPedidoOrderByWithRelationInput | EstadoPedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EstadoPedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstadoPedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstadoPedidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EstadoPedidos
    **/
    _count?: true | EstadoPedidoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EstadoPedidoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EstadoPedidoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EstadoPedidoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EstadoPedidoMaxAggregateInputType
  }

  export type GetEstadoPedidoAggregateType<T extends EstadoPedidoAggregateArgs> = {
        [P in keyof T & keyof AggregateEstadoPedido]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEstadoPedido[P]>
      : GetScalarType<T[P], AggregateEstadoPedido[P]>
  }




  export type EstadoPedidoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EstadoPedidoWhereInput
    orderBy?: EstadoPedidoOrderByWithAggregationInput | EstadoPedidoOrderByWithAggregationInput[]
    by: EstadoPedidoScalarFieldEnum[] | EstadoPedidoScalarFieldEnum
    having?: EstadoPedidoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EstadoPedidoCountAggregateInputType | true
    _avg?: EstadoPedidoAvgAggregateInputType
    _sum?: EstadoPedidoSumAggregateInputType
    _min?: EstadoPedidoMinAggregateInputType
    _max?: EstadoPedidoMaxAggregateInputType
  }

  export type EstadoPedidoGroupByOutputType = {
    codEstadoPedido: number
    nombreEstadoPedido: string
    fechaHoraBajaEP: Date | null
    _count: EstadoPedidoCountAggregateOutputType | null
    _avg: EstadoPedidoAvgAggregateOutputType | null
    _sum: EstadoPedidoSumAggregateOutputType | null
    _min: EstadoPedidoMinAggregateOutputType | null
    _max: EstadoPedidoMaxAggregateOutputType | null
  }

  type GetEstadoPedidoGroupByPayload<T extends EstadoPedidoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EstadoPedidoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EstadoPedidoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EstadoPedidoGroupByOutputType[P]>
            : GetScalarType<T[P], EstadoPedidoGroupByOutputType[P]>
        }
      >
    >


  export type EstadoPedidoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codEstadoPedido?: boolean
    nombreEstadoPedido?: boolean
    fechaHoraBajaEP?: boolean
    pedidos?: boolean | EstadoPedido$pedidosArgs<ExtArgs>
    _count?: boolean | EstadoPedidoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["estadoPedido"]>

  export type EstadoPedidoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codEstadoPedido?: boolean
    nombreEstadoPedido?: boolean
    fechaHoraBajaEP?: boolean
  }, ExtArgs["result"]["estadoPedido"]>

  export type EstadoPedidoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codEstadoPedido?: boolean
    nombreEstadoPedido?: boolean
    fechaHoraBajaEP?: boolean
  }, ExtArgs["result"]["estadoPedido"]>

  export type EstadoPedidoSelectScalar = {
    codEstadoPedido?: boolean
    nombreEstadoPedido?: boolean
    fechaHoraBajaEP?: boolean
  }

  export type EstadoPedidoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"codEstadoPedido" | "nombreEstadoPedido" | "fechaHoraBajaEP", ExtArgs["result"]["estadoPedido"]>
  export type EstadoPedidoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pedidos?: boolean | EstadoPedido$pedidosArgs<ExtArgs>
    _count?: boolean | EstadoPedidoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EstadoPedidoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type EstadoPedidoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $EstadoPedidoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EstadoPedido"
    objects: {
      pedidos: Prisma.$PedidoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      codEstadoPedido: number
      nombreEstadoPedido: string
      fechaHoraBajaEP: Date | null
    }, ExtArgs["result"]["estadoPedido"]>
    composites: {}
  }

  type EstadoPedidoGetPayload<S extends boolean | null | undefined | EstadoPedidoDefaultArgs> = $Result.GetResult<Prisma.$EstadoPedidoPayload, S>

  type EstadoPedidoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EstadoPedidoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EstadoPedidoCountAggregateInputType | true
    }

  export interface EstadoPedidoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EstadoPedido'], meta: { name: 'EstadoPedido' } }
    /**
     * Find zero or one EstadoPedido that matches the filter.
     * @param {EstadoPedidoFindUniqueArgs} args - Arguments to find a EstadoPedido
     * @example
     * // Get one EstadoPedido
     * const estadoPedido = await prisma.estadoPedido.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EstadoPedidoFindUniqueArgs>(args: SelectSubset<T, EstadoPedidoFindUniqueArgs<ExtArgs>>): Prisma__EstadoPedidoClient<$Result.GetResult<Prisma.$EstadoPedidoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one EstadoPedido that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EstadoPedidoFindUniqueOrThrowArgs} args - Arguments to find a EstadoPedido
     * @example
     * // Get one EstadoPedido
     * const estadoPedido = await prisma.estadoPedido.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EstadoPedidoFindUniqueOrThrowArgs>(args: SelectSubset<T, EstadoPedidoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EstadoPedidoClient<$Result.GetResult<Prisma.$EstadoPedidoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EstadoPedido that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadoPedidoFindFirstArgs} args - Arguments to find a EstadoPedido
     * @example
     * // Get one EstadoPedido
     * const estadoPedido = await prisma.estadoPedido.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EstadoPedidoFindFirstArgs>(args?: SelectSubset<T, EstadoPedidoFindFirstArgs<ExtArgs>>): Prisma__EstadoPedidoClient<$Result.GetResult<Prisma.$EstadoPedidoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EstadoPedido that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadoPedidoFindFirstOrThrowArgs} args - Arguments to find a EstadoPedido
     * @example
     * // Get one EstadoPedido
     * const estadoPedido = await prisma.estadoPedido.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EstadoPedidoFindFirstOrThrowArgs>(args?: SelectSubset<T, EstadoPedidoFindFirstOrThrowArgs<ExtArgs>>): Prisma__EstadoPedidoClient<$Result.GetResult<Prisma.$EstadoPedidoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more EstadoPedidos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadoPedidoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EstadoPedidos
     * const estadoPedidos = await prisma.estadoPedido.findMany()
     * 
     * // Get first 10 EstadoPedidos
     * const estadoPedidos = await prisma.estadoPedido.findMany({ take: 10 })
     * 
     * // Only select the `codEstadoPedido`
     * const estadoPedidoWithCodEstadoPedidoOnly = await prisma.estadoPedido.findMany({ select: { codEstadoPedido: true } })
     * 
     */
    findMany<T extends EstadoPedidoFindManyArgs>(args?: SelectSubset<T, EstadoPedidoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstadoPedidoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a EstadoPedido.
     * @param {EstadoPedidoCreateArgs} args - Arguments to create a EstadoPedido.
     * @example
     * // Create one EstadoPedido
     * const EstadoPedido = await prisma.estadoPedido.create({
     *   data: {
     *     // ... data to create a EstadoPedido
     *   }
     * })
     * 
     */
    create<T extends EstadoPedidoCreateArgs>(args: SelectSubset<T, EstadoPedidoCreateArgs<ExtArgs>>): Prisma__EstadoPedidoClient<$Result.GetResult<Prisma.$EstadoPedidoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many EstadoPedidos.
     * @param {EstadoPedidoCreateManyArgs} args - Arguments to create many EstadoPedidos.
     * @example
     * // Create many EstadoPedidos
     * const estadoPedido = await prisma.estadoPedido.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EstadoPedidoCreateManyArgs>(args?: SelectSubset<T, EstadoPedidoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many EstadoPedidos and returns the data saved in the database.
     * @param {EstadoPedidoCreateManyAndReturnArgs} args - Arguments to create many EstadoPedidos.
     * @example
     * // Create many EstadoPedidos
     * const estadoPedido = await prisma.estadoPedido.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many EstadoPedidos and only return the `codEstadoPedido`
     * const estadoPedidoWithCodEstadoPedidoOnly = await prisma.estadoPedido.createManyAndReturn({
     *   select: { codEstadoPedido: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EstadoPedidoCreateManyAndReturnArgs>(args?: SelectSubset<T, EstadoPedidoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstadoPedidoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a EstadoPedido.
     * @param {EstadoPedidoDeleteArgs} args - Arguments to delete one EstadoPedido.
     * @example
     * // Delete one EstadoPedido
     * const EstadoPedido = await prisma.estadoPedido.delete({
     *   where: {
     *     // ... filter to delete one EstadoPedido
     *   }
     * })
     * 
     */
    delete<T extends EstadoPedidoDeleteArgs>(args: SelectSubset<T, EstadoPedidoDeleteArgs<ExtArgs>>): Prisma__EstadoPedidoClient<$Result.GetResult<Prisma.$EstadoPedidoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one EstadoPedido.
     * @param {EstadoPedidoUpdateArgs} args - Arguments to update one EstadoPedido.
     * @example
     * // Update one EstadoPedido
     * const estadoPedido = await prisma.estadoPedido.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EstadoPedidoUpdateArgs>(args: SelectSubset<T, EstadoPedidoUpdateArgs<ExtArgs>>): Prisma__EstadoPedidoClient<$Result.GetResult<Prisma.$EstadoPedidoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more EstadoPedidos.
     * @param {EstadoPedidoDeleteManyArgs} args - Arguments to filter EstadoPedidos to delete.
     * @example
     * // Delete a few EstadoPedidos
     * const { count } = await prisma.estadoPedido.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EstadoPedidoDeleteManyArgs>(args?: SelectSubset<T, EstadoPedidoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EstadoPedidos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadoPedidoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EstadoPedidos
     * const estadoPedido = await prisma.estadoPedido.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EstadoPedidoUpdateManyArgs>(args: SelectSubset<T, EstadoPedidoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EstadoPedidos and returns the data updated in the database.
     * @param {EstadoPedidoUpdateManyAndReturnArgs} args - Arguments to update many EstadoPedidos.
     * @example
     * // Update many EstadoPedidos
     * const estadoPedido = await prisma.estadoPedido.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more EstadoPedidos and only return the `codEstadoPedido`
     * const estadoPedidoWithCodEstadoPedidoOnly = await prisma.estadoPedido.updateManyAndReturn({
     *   select: { codEstadoPedido: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EstadoPedidoUpdateManyAndReturnArgs>(args: SelectSubset<T, EstadoPedidoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstadoPedidoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one EstadoPedido.
     * @param {EstadoPedidoUpsertArgs} args - Arguments to update or create a EstadoPedido.
     * @example
     * // Update or create a EstadoPedido
     * const estadoPedido = await prisma.estadoPedido.upsert({
     *   create: {
     *     // ... data to create a EstadoPedido
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EstadoPedido we want to update
     *   }
     * })
     */
    upsert<T extends EstadoPedidoUpsertArgs>(args: SelectSubset<T, EstadoPedidoUpsertArgs<ExtArgs>>): Prisma__EstadoPedidoClient<$Result.GetResult<Prisma.$EstadoPedidoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of EstadoPedidos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadoPedidoCountArgs} args - Arguments to filter EstadoPedidos to count.
     * @example
     * // Count the number of EstadoPedidos
     * const count = await prisma.estadoPedido.count({
     *   where: {
     *     // ... the filter for the EstadoPedidos we want to count
     *   }
     * })
    **/
    count<T extends EstadoPedidoCountArgs>(
      args?: Subset<T, EstadoPedidoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EstadoPedidoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EstadoPedido.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadoPedidoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EstadoPedidoAggregateArgs>(args: Subset<T, EstadoPedidoAggregateArgs>): Prisma.PrismaPromise<GetEstadoPedidoAggregateType<T>>

    /**
     * Group by EstadoPedido.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadoPedidoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EstadoPedidoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EstadoPedidoGroupByArgs['orderBy'] }
        : { orderBy?: EstadoPedidoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EstadoPedidoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEstadoPedidoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EstadoPedido model
   */
  readonly fields: EstadoPedidoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EstadoPedido.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EstadoPedidoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    pedidos<T extends EstadoPedido$pedidosArgs<ExtArgs> = {}>(args?: Subset<T, EstadoPedido$pedidosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EstadoPedido model
   */
  interface EstadoPedidoFieldRefs {
    readonly codEstadoPedido: FieldRef<"EstadoPedido", 'Int'>
    readonly nombreEstadoPedido: FieldRef<"EstadoPedido", 'String'>
    readonly fechaHoraBajaEP: FieldRef<"EstadoPedido", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * EstadoPedido findUnique
   */
  export type EstadoPedidoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoPedido
     */
    select?: EstadoPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoPedido
     */
    omit?: EstadoPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoPedidoInclude<ExtArgs> | null
    /**
     * Filter, which EstadoPedido to fetch.
     */
    where: EstadoPedidoWhereUniqueInput
  }

  /**
   * EstadoPedido findUniqueOrThrow
   */
  export type EstadoPedidoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoPedido
     */
    select?: EstadoPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoPedido
     */
    omit?: EstadoPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoPedidoInclude<ExtArgs> | null
    /**
     * Filter, which EstadoPedido to fetch.
     */
    where: EstadoPedidoWhereUniqueInput
  }

  /**
   * EstadoPedido findFirst
   */
  export type EstadoPedidoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoPedido
     */
    select?: EstadoPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoPedido
     */
    omit?: EstadoPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoPedidoInclude<ExtArgs> | null
    /**
     * Filter, which EstadoPedido to fetch.
     */
    where?: EstadoPedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstadoPedidos to fetch.
     */
    orderBy?: EstadoPedidoOrderByWithRelationInput | EstadoPedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EstadoPedidos.
     */
    cursor?: EstadoPedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstadoPedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstadoPedidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EstadoPedidos.
     */
    distinct?: EstadoPedidoScalarFieldEnum | EstadoPedidoScalarFieldEnum[]
  }

  /**
   * EstadoPedido findFirstOrThrow
   */
  export type EstadoPedidoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoPedido
     */
    select?: EstadoPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoPedido
     */
    omit?: EstadoPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoPedidoInclude<ExtArgs> | null
    /**
     * Filter, which EstadoPedido to fetch.
     */
    where?: EstadoPedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstadoPedidos to fetch.
     */
    orderBy?: EstadoPedidoOrderByWithRelationInput | EstadoPedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EstadoPedidos.
     */
    cursor?: EstadoPedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstadoPedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstadoPedidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EstadoPedidos.
     */
    distinct?: EstadoPedidoScalarFieldEnum | EstadoPedidoScalarFieldEnum[]
  }

  /**
   * EstadoPedido findMany
   */
  export type EstadoPedidoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoPedido
     */
    select?: EstadoPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoPedido
     */
    omit?: EstadoPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoPedidoInclude<ExtArgs> | null
    /**
     * Filter, which EstadoPedidos to fetch.
     */
    where?: EstadoPedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstadoPedidos to fetch.
     */
    orderBy?: EstadoPedidoOrderByWithRelationInput | EstadoPedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EstadoPedidos.
     */
    cursor?: EstadoPedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstadoPedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstadoPedidos.
     */
    skip?: number
    distinct?: EstadoPedidoScalarFieldEnum | EstadoPedidoScalarFieldEnum[]
  }

  /**
   * EstadoPedido create
   */
  export type EstadoPedidoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoPedido
     */
    select?: EstadoPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoPedido
     */
    omit?: EstadoPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoPedidoInclude<ExtArgs> | null
    /**
     * The data needed to create a EstadoPedido.
     */
    data: XOR<EstadoPedidoCreateInput, EstadoPedidoUncheckedCreateInput>
  }

  /**
   * EstadoPedido createMany
   */
  export type EstadoPedidoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EstadoPedidos.
     */
    data: EstadoPedidoCreateManyInput | EstadoPedidoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EstadoPedido createManyAndReturn
   */
  export type EstadoPedidoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoPedido
     */
    select?: EstadoPedidoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoPedido
     */
    omit?: EstadoPedidoOmit<ExtArgs> | null
    /**
     * The data used to create many EstadoPedidos.
     */
    data: EstadoPedidoCreateManyInput | EstadoPedidoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EstadoPedido update
   */
  export type EstadoPedidoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoPedido
     */
    select?: EstadoPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoPedido
     */
    omit?: EstadoPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoPedidoInclude<ExtArgs> | null
    /**
     * The data needed to update a EstadoPedido.
     */
    data: XOR<EstadoPedidoUpdateInput, EstadoPedidoUncheckedUpdateInput>
    /**
     * Choose, which EstadoPedido to update.
     */
    where: EstadoPedidoWhereUniqueInput
  }

  /**
   * EstadoPedido updateMany
   */
  export type EstadoPedidoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EstadoPedidos.
     */
    data: XOR<EstadoPedidoUpdateManyMutationInput, EstadoPedidoUncheckedUpdateManyInput>
    /**
     * Filter which EstadoPedidos to update
     */
    where?: EstadoPedidoWhereInput
    /**
     * Limit how many EstadoPedidos to update.
     */
    limit?: number
  }

  /**
   * EstadoPedido updateManyAndReturn
   */
  export type EstadoPedidoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoPedido
     */
    select?: EstadoPedidoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoPedido
     */
    omit?: EstadoPedidoOmit<ExtArgs> | null
    /**
     * The data used to update EstadoPedidos.
     */
    data: XOR<EstadoPedidoUpdateManyMutationInput, EstadoPedidoUncheckedUpdateManyInput>
    /**
     * Filter which EstadoPedidos to update
     */
    where?: EstadoPedidoWhereInput
    /**
     * Limit how many EstadoPedidos to update.
     */
    limit?: number
  }

  /**
   * EstadoPedido upsert
   */
  export type EstadoPedidoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoPedido
     */
    select?: EstadoPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoPedido
     */
    omit?: EstadoPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoPedidoInclude<ExtArgs> | null
    /**
     * The filter to search for the EstadoPedido to update in case it exists.
     */
    where: EstadoPedidoWhereUniqueInput
    /**
     * In case the EstadoPedido found by the `where` argument doesn't exist, create a new EstadoPedido with this data.
     */
    create: XOR<EstadoPedidoCreateInput, EstadoPedidoUncheckedCreateInput>
    /**
     * In case the EstadoPedido was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EstadoPedidoUpdateInput, EstadoPedidoUncheckedUpdateInput>
  }

  /**
   * EstadoPedido delete
   */
  export type EstadoPedidoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoPedido
     */
    select?: EstadoPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoPedido
     */
    omit?: EstadoPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoPedidoInclude<ExtArgs> | null
    /**
     * Filter which EstadoPedido to delete.
     */
    where: EstadoPedidoWhereUniqueInput
  }

  /**
   * EstadoPedido deleteMany
   */
  export type EstadoPedidoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EstadoPedidos to delete
     */
    where?: EstadoPedidoWhereInput
    /**
     * Limit how many EstadoPedidos to delete.
     */
    limit?: number
  }

  /**
   * EstadoPedido.pedidos
   */
  export type EstadoPedido$pedidosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    where?: PedidoWhereInput
    orderBy?: PedidoOrderByWithRelationInput | PedidoOrderByWithRelationInput[]
    cursor?: PedidoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PedidoScalarFieldEnum | PedidoScalarFieldEnum[]
  }

  /**
   * EstadoPedido without action
   */
  export type EstadoPedidoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoPedido
     */
    select?: EstadoPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoPedido
     */
    omit?: EstadoPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoPedidoInclude<ExtArgs> | null
  }


  /**
   * Model CarritoCompras
   */

  export type AggregateCarritoCompras = {
    _count: CarritoComprasCountAggregateOutputType | null
    _avg: CarritoComprasAvgAggregateOutputType | null
    _sum: CarritoComprasSumAggregateOutputType | null
    _min: CarritoComprasMinAggregateOutputType | null
    _max: CarritoComprasMaxAggregateOutputType | null
  }

  export type CarritoComprasAvgAggregateOutputType = {
    codCarritoCompra: number | null
    montoCarritoCompra: number | null
    codPedido: number | null
  }

  export type CarritoComprasSumAggregateOutputType = {
    codCarritoCompra: number | null
    montoCarritoCompra: number | null
    codPedido: number | null
  }

  export type CarritoComprasMinAggregateOutputType = {
    codCarritoCompra: number | null
    montoCarritoCompra: number | null
    codPedido: number | null
  }

  export type CarritoComprasMaxAggregateOutputType = {
    codCarritoCompra: number | null
    montoCarritoCompra: number | null
    codPedido: number | null
  }

  export type CarritoComprasCountAggregateOutputType = {
    codCarritoCompra: number
    montoCarritoCompra: number
    codPedido: number
    _all: number
  }


  export type CarritoComprasAvgAggregateInputType = {
    codCarritoCompra?: true
    montoCarritoCompra?: true
    codPedido?: true
  }

  export type CarritoComprasSumAggregateInputType = {
    codCarritoCompra?: true
    montoCarritoCompra?: true
    codPedido?: true
  }

  export type CarritoComprasMinAggregateInputType = {
    codCarritoCompra?: true
    montoCarritoCompra?: true
    codPedido?: true
  }

  export type CarritoComprasMaxAggregateInputType = {
    codCarritoCompra?: true
    montoCarritoCompra?: true
    codPedido?: true
  }

  export type CarritoComprasCountAggregateInputType = {
    codCarritoCompra?: true
    montoCarritoCompra?: true
    codPedido?: true
    _all?: true
  }

  export type CarritoComprasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CarritoCompras to aggregate.
     */
    where?: CarritoComprasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CarritoCompras to fetch.
     */
    orderBy?: CarritoComprasOrderByWithRelationInput | CarritoComprasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CarritoComprasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CarritoCompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CarritoCompras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CarritoCompras
    **/
    _count?: true | CarritoComprasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CarritoComprasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CarritoComprasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CarritoComprasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CarritoComprasMaxAggregateInputType
  }

  export type GetCarritoComprasAggregateType<T extends CarritoComprasAggregateArgs> = {
        [P in keyof T & keyof AggregateCarritoCompras]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCarritoCompras[P]>
      : GetScalarType<T[P], AggregateCarritoCompras[P]>
  }




  export type CarritoComprasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CarritoComprasWhereInput
    orderBy?: CarritoComprasOrderByWithAggregationInput | CarritoComprasOrderByWithAggregationInput[]
    by: CarritoComprasScalarFieldEnum[] | CarritoComprasScalarFieldEnum
    having?: CarritoComprasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CarritoComprasCountAggregateInputType | true
    _avg?: CarritoComprasAvgAggregateInputType
    _sum?: CarritoComprasSumAggregateInputType
    _min?: CarritoComprasMinAggregateInputType
    _max?: CarritoComprasMaxAggregateInputType
  }

  export type CarritoComprasGroupByOutputType = {
    codCarritoCompra: number
    montoCarritoCompra: number
    codPedido: number
    _count: CarritoComprasCountAggregateOutputType | null
    _avg: CarritoComprasAvgAggregateOutputType | null
    _sum: CarritoComprasSumAggregateOutputType | null
    _min: CarritoComprasMinAggregateOutputType | null
    _max: CarritoComprasMaxAggregateOutputType | null
  }

  type GetCarritoComprasGroupByPayload<T extends CarritoComprasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CarritoComprasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CarritoComprasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CarritoComprasGroupByOutputType[P]>
            : GetScalarType<T[P], CarritoComprasGroupByOutputType[P]>
        }
      >
    >


  export type CarritoComprasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codCarritoCompra?: boolean
    montoCarritoCompra?: boolean
    codPedido?: boolean
    pedido?: boolean | CarritoCompras$pedidoArgs<ExtArgs>
    articuloPedido?: boolean | CarritoCompras$articuloPedidoArgs<ExtArgs>
    _count?: boolean | CarritoComprasCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["carritoCompras"]>

  export type CarritoComprasSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codCarritoCompra?: boolean
    montoCarritoCompra?: boolean
    codPedido?: boolean
  }, ExtArgs["result"]["carritoCompras"]>

  export type CarritoComprasSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codCarritoCompra?: boolean
    montoCarritoCompra?: boolean
    codPedido?: boolean
  }, ExtArgs["result"]["carritoCompras"]>

  export type CarritoComprasSelectScalar = {
    codCarritoCompra?: boolean
    montoCarritoCompra?: boolean
    codPedido?: boolean
  }

  export type CarritoComprasOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"codCarritoCompra" | "montoCarritoCompra" | "codPedido", ExtArgs["result"]["carritoCompras"]>
  export type CarritoComprasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pedido?: boolean | CarritoCompras$pedidoArgs<ExtArgs>
    articuloPedido?: boolean | CarritoCompras$articuloPedidoArgs<ExtArgs>
    _count?: boolean | CarritoComprasCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CarritoComprasIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type CarritoComprasIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $CarritoComprasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CarritoCompras"
    objects: {
      pedido: Prisma.$PedidoPayload<ExtArgs> | null
      articuloPedido: Prisma.$ArticuloPedidoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      codCarritoCompra: number
      montoCarritoCompra: number
      codPedido: number
    }, ExtArgs["result"]["carritoCompras"]>
    composites: {}
  }

  type CarritoComprasGetPayload<S extends boolean | null | undefined | CarritoComprasDefaultArgs> = $Result.GetResult<Prisma.$CarritoComprasPayload, S>

  type CarritoComprasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CarritoComprasFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CarritoComprasCountAggregateInputType | true
    }

  export interface CarritoComprasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CarritoCompras'], meta: { name: 'CarritoCompras' } }
    /**
     * Find zero or one CarritoCompras that matches the filter.
     * @param {CarritoComprasFindUniqueArgs} args - Arguments to find a CarritoCompras
     * @example
     * // Get one CarritoCompras
     * const carritoCompras = await prisma.carritoCompras.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CarritoComprasFindUniqueArgs>(args: SelectSubset<T, CarritoComprasFindUniqueArgs<ExtArgs>>): Prisma__CarritoComprasClient<$Result.GetResult<Prisma.$CarritoComprasPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CarritoCompras that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CarritoComprasFindUniqueOrThrowArgs} args - Arguments to find a CarritoCompras
     * @example
     * // Get one CarritoCompras
     * const carritoCompras = await prisma.carritoCompras.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CarritoComprasFindUniqueOrThrowArgs>(args: SelectSubset<T, CarritoComprasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CarritoComprasClient<$Result.GetResult<Prisma.$CarritoComprasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CarritoCompras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CarritoComprasFindFirstArgs} args - Arguments to find a CarritoCompras
     * @example
     * // Get one CarritoCompras
     * const carritoCompras = await prisma.carritoCompras.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CarritoComprasFindFirstArgs>(args?: SelectSubset<T, CarritoComprasFindFirstArgs<ExtArgs>>): Prisma__CarritoComprasClient<$Result.GetResult<Prisma.$CarritoComprasPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CarritoCompras that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CarritoComprasFindFirstOrThrowArgs} args - Arguments to find a CarritoCompras
     * @example
     * // Get one CarritoCompras
     * const carritoCompras = await prisma.carritoCompras.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CarritoComprasFindFirstOrThrowArgs>(args?: SelectSubset<T, CarritoComprasFindFirstOrThrowArgs<ExtArgs>>): Prisma__CarritoComprasClient<$Result.GetResult<Prisma.$CarritoComprasPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CarritoCompras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CarritoComprasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CarritoCompras
     * const carritoCompras = await prisma.carritoCompras.findMany()
     * 
     * // Get first 10 CarritoCompras
     * const carritoCompras = await prisma.carritoCompras.findMany({ take: 10 })
     * 
     * // Only select the `codCarritoCompra`
     * const carritoComprasWithCodCarritoCompraOnly = await prisma.carritoCompras.findMany({ select: { codCarritoCompra: true } })
     * 
     */
    findMany<T extends CarritoComprasFindManyArgs>(args?: SelectSubset<T, CarritoComprasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CarritoComprasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CarritoCompras.
     * @param {CarritoComprasCreateArgs} args - Arguments to create a CarritoCompras.
     * @example
     * // Create one CarritoCompras
     * const CarritoCompras = await prisma.carritoCompras.create({
     *   data: {
     *     // ... data to create a CarritoCompras
     *   }
     * })
     * 
     */
    create<T extends CarritoComprasCreateArgs>(args: SelectSubset<T, CarritoComprasCreateArgs<ExtArgs>>): Prisma__CarritoComprasClient<$Result.GetResult<Prisma.$CarritoComprasPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CarritoCompras.
     * @param {CarritoComprasCreateManyArgs} args - Arguments to create many CarritoCompras.
     * @example
     * // Create many CarritoCompras
     * const carritoCompras = await prisma.carritoCompras.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CarritoComprasCreateManyArgs>(args?: SelectSubset<T, CarritoComprasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CarritoCompras and returns the data saved in the database.
     * @param {CarritoComprasCreateManyAndReturnArgs} args - Arguments to create many CarritoCompras.
     * @example
     * // Create many CarritoCompras
     * const carritoCompras = await prisma.carritoCompras.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CarritoCompras and only return the `codCarritoCompra`
     * const carritoComprasWithCodCarritoCompraOnly = await prisma.carritoCompras.createManyAndReturn({
     *   select: { codCarritoCompra: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CarritoComprasCreateManyAndReturnArgs>(args?: SelectSubset<T, CarritoComprasCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CarritoComprasPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CarritoCompras.
     * @param {CarritoComprasDeleteArgs} args - Arguments to delete one CarritoCompras.
     * @example
     * // Delete one CarritoCompras
     * const CarritoCompras = await prisma.carritoCompras.delete({
     *   where: {
     *     // ... filter to delete one CarritoCompras
     *   }
     * })
     * 
     */
    delete<T extends CarritoComprasDeleteArgs>(args: SelectSubset<T, CarritoComprasDeleteArgs<ExtArgs>>): Prisma__CarritoComprasClient<$Result.GetResult<Prisma.$CarritoComprasPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CarritoCompras.
     * @param {CarritoComprasUpdateArgs} args - Arguments to update one CarritoCompras.
     * @example
     * // Update one CarritoCompras
     * const carritoCompras = await prisma.carritoCompras.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CarritoComprasUpdateArgs>(args: SelectSubset<T, CarritoComprasUpdateArgs<ExtArgs>>): Prisma__CarritoComprasClient<$Result.GetResult<Prisma.$CarritoComprasPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CarritoCompras.
     * @param {CarritoComprasDeleteManyArgs} args - Arguments to filter CarritoCompras to delete.
     * @example
     * // Delete a few CarritoCompras
     * const { count } = await prisma.carritoCompras.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CarritoComprasDeleteManyArgs>(args?: SelectSubset<T, CarritoComprasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CarritoCompras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CarritoComprasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CarritoCompras
     * const carritoCompras = await prisma.carritoCompras.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CarritoComprasUpdateManyArgs>(args: SelectSubset<T, CarritoComprasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CarritoCompras and returns the data updated in the database.
     * @param {CarritoComprasUpdateManyAndReturnArgs} args - Arguments to update many CarritoCompras.
     * @example
     * // Update many CarritoCompras
     * const carritoCompras = await prisma.carritoCompras.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CarritoCompras and only return the `codCarritoCompra`
     * const carritoComprasWithCodCarritoCompraOnly = await prisma.carritoCompras.updateManyAndReturn({
     *   select: { codCarritoCompra: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CarritoComprasUpdateManyAndReturnArgs>(args: SelectSubset<T, CarritoComprasUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CarritoComprasPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CarritoCompras.
     * @param {CarritoComprasUpsertArgs} args - Arguments to update or create a CarritoCompras.
     * @example
     * // Update or create a CarritoCompras
     * const carritoCompras = await prisma.carritoCompras.upsert({
     *   create: {
     *     // ... data to create a CarritoCompras
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CarritoCompras we want to update
     *   }
     * })
     */
    upsert<T extends CarritoComprasUpsertArgs>(args: SelectSubset<T, CarritoComprasUpsertArgs<ExtArgs>>): Prisma__CarritoComprasClient<$Result.GetResult<Prisma.$CarritoComprasPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CarritoCompras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CarritoComprasCountArgs} args - Arguments to filter CarritoCompras to count.
     * @example
     * // Count the number of CarritoCompras
     * const count = await prisma.carritoCompras.count({
     *   where: {
     *     // ... the filter for the CarritoCompras we want to count
     *   }
     * })
    **/
    count<T extends CarritoComprasCountArgs>(
      args?: Subset<T, CarritoComprasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CarritoComprasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CarritoCompras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CarritoComprasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CarritoComprasAggregateArgs>(args: Subset<T, CarritoComprasAggregateArgs>): Prisma.PrismaPromise<GetCarritoComprasAggregateType<T>>

    /**
     * Group by CarritoCompras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CarritoComprasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CarritoComprasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CarritoComprasGroupByArgs['orderBy'] }
        : { orderBy?: CarritoComprasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CarritoComprasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCarritoComprasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CarritoCompras model
   */
  readonly fields: CarritoComprasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CarritoCompras.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CarritoComprasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    pedido<T extends CarritoCompras$pedidoArgs<ExtArgs> = {}>(args?: Subset<T, CarritoCompras$pedidoArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    articuloPedido<T extends CarritoCompras$articuloPedidoArgs<ExtArgs> = {}>(args?: Subset<T, CarritoCompras$articuloPedidoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArticuloPedidoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CarritoCompras model
   */
  interface CarritoComprasFieldRefs {
    readonly codCarritoCompra: FieldRef<"CarritoCompras", 'Int'>
    readonly montoCarritoCompra: FieldRef<"CarritoCompras", 'Float'>
    readonly codPedido: FieldRef<"CarritoCompras", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * CarritoCompras findUnique
   */
  export type CarritoComprasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CarritoCompras
     */
    select?: CarritoComprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CarritoCompras
     */
    omit?: CarritoComprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarritoComprasInclude<ExtArgs> | null
    /**
     * Filter, which CarritoCompras to fetch.
     */
    where: CarritoComprasWhereUniqueInput
  }

  /**
   * CarritoCompras findUniqueOrThrow
   */
  export type CarritoComprasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CarritoCompras
     */
    select?: CarritoComprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CarritoCompras
     */
    omit?: CarritoComprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarritoComprasInclude<ExtArgs> | null
    /**
     * Filter, which CarritoCompras to fetch.
     */
    where: CarritoComprasWhereUniqueInput
  }

  /**
   * CarritoCompras findFirst
   */
  export type CarritoComprasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CarritoCompras
     */
    select?: CarritoComprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CarritoCompras
     */
    omit?: CarritoComprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarritoComprasInclude<ExtArgs> | null
    /**
     * Filter, which CarritoCompras to fetch.
     */
    where?: CarritoComprasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CarritoCompras to fetch.
     */
    orderBy?: CarritoComprasOrderByWithRelationInput | CarritoComprasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CarritoCompras.
     */
    cursor?: CarritoComprasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CarritoCompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CarritoCompras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CarritoCompras.
     */
    distinct?: CarritoComprasScalarFieldEnum | CarritoComprasScalarFieldEnum[]
  }

  /**
   * CarritoCompras findFirstOrThrow
   */
  export type CarritoComprasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CarritoCompras
     */
    select?: CarritoComprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CarritoCompras
     */
    omit?: CarritoComprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarritoComprasInclude<ExtArgs> | null
    /**
     * Filter, which CarritoCompras to fetch.
     */
    where?: CarritoComprasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CarritoCompras to fetch.
     */
    orderBy?: CarritoComprasOrderByWithRelationInput | CarritoComprasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CarritoCompras.
     */
    cursor?: CarritoComprasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CarritoCompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CarritoCompras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CarritoCompras.
     */
    distinct?: CarritoComprasScalarFieldEnum | CarritoComprasScalarFieldEnum[]
  }

  /**
   * CarritoCompras findMany
   */
  export type CarritoComprasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CarritoCompras
     */
    select?: CarritoComprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CarritoCompras
     */
    omit?: CarritoComprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarritoComprasInclude<ExtArgs> | null
    /**
     * Filter, which CarritoCompras to fetch.
     */
    where?: CarritoComprasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CarritoCompras to fetch.
     */
    orderBy?: CarritoComprasOrderByWithRelationInput | CarritoComprasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CarritoCompras.
     */
    cursor?: CarritoComprasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CarritoCompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CarritoCompras.
     */
    skip?: number
    distinct?: CarritoComprasScalarFieldEnum | CarritoComprasScalarFieldEnum[]
  }

  /**
   * CarritoCompras create
   */
  export type CarritoComprasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CarritoCompras
     */
    select?: CarritoComprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CarritoCompras
     */
    omit?: CarritoComprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarritoComprasInclude<ExtArgs> | null
    /**
     * The data needed to create a CarritoCompras.
     */
    data: XOR<CarritoComprasCreateInput, CarritoComprasUncheckedCreateInput>
  }

  /**
   * CarritoCompras createMany
   */
  export type CarritoComprasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CarritoCompras.
     */
    data: CarritoComprasCreateManyInput | CarritoComprasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CarritoCompras createManyAndReturn
   */
  export type CarritoComprasCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CarritoCompras
     */
    select?: CarritoComprasSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CarritoCompras
     */
    omit?: CarritoComprasOmit<ExtArgs> | null
    /**
     * The data used to create many CarritoCompras.
     */
    data: CarritoComprasCreateManyInput | CarritoComprasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CarritoCompras update
   */
  export type CarritoComprasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CarritoCompras
     */
    select?: CarritoComprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CarritoCompras
     */
    omit?: CarritoComprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarritoComprasInclude<ExtArgs> | null
    /**
     * The data needed to update a CarritoCompras.
     */
    data: XOR<CarritoComprasUpdateInput, CarritoComprasUncheckedUpdateInput>
    /**
     * Choose, which CarritoCompras to update.
     */
    where: CarritoComprasWhereUniqueInput
  }

  /**
   * CarritoCompras updateMany
   */
  export type CarritoComprasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CarritoCompras.
     */
    data: XOR<CarritoComprasUpdateManyMutationInput, CarritoComprasUncheckedUpdateManyInput>
    /**
     * Filter which CarritoCompras to update
     */
    where?: CarritoComprasWhereInput
    /**
     * Limit how many CarritoCompras to update.
     */
    limit?: number
  }

  /**
   * CarritoCompras updateManyAndReturn
   */
  export type CarritoComprasUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CarritoCompras
     */
    select?: CarritoComprasSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CarritoCompras
     */
    omit?: CarritoComprasOmit<ExtArgs> | null
    /**
     * The data used to update CarritoCompras.
     */
    data: XOR<CarritoComprasUpdateManyMutationInput, CarritoComprasUncheckedUpdateManyInput>
    /**
     * Filter which CarritoCompras to update
     */
    where?: CarritoComprasWhereInput
    /**
     * Limit how many CarritoCompras to update.
     */
    limit?: number
  }

  /**
   * CarritoCompras upsert
   */
  export type CarritoComprasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CarritoCompras
     */
    select?: CarritoComprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CarritoCompras
     */
    omit?: CarritoComprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarritoComprasInclude<ExtArgs> | null
    /**
     * The filter to search for the CarritoCompras to update in case it exists.
     */
    where: CarritoComprasWhereUniqueInput
    /**
     * In case the CarritoCompras found by the `where` argument doesn't exist, create a new CarritoCompras with this data.
     */
    create: XOR<CarritoComprasCreateInput, CarritoComprasUncheckedCreateInput>
    /**
     * In case the CarritoCompras was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CarritoComprasUpdateInput, CarritoComprasUncheckedUpdateInput>
  }

  /**
   * CarritoCompras delete
   */
  export type CarritoComprasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CarritoCompras
     */
    select?: CarritoComprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CarritoCompras
     */
    omit?: CarritoComprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarritoComprasInclude<ExtArgs> | null
    /**
     * Filter which CarritoCompras to delete.
     */
    where: CarritoComprasWhereUniqueInput
  }

  /**
   * CarritoCompras deleteMany
   */
  export type CarritoComprasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CarritoCompras to delete
     */
    where?: CarritoComprasWhereInput
    /**
     * Limit how many CarritoCompras to delete.
     */
    limit?: number
  }

  /**
   * CarritoCompras.pedido
   */
  export type CarritoCompras$pedidoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    where?: PedidoWhereInput
  }

  /**
   * CarritoCompras.articuloPedido
   */
  export type CarritoCompras$articuloPedidoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticuloPedido
     */
    select?: ArticuloPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArticuloPedido
     */
    omit?: ArticuloPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticuloPedidoInclude<ExtArgs> | null
    where?: ArticuloPedidoWhereInput
    orderBy?: ArticuloPedidoOrderByWithRelationInput | ArticuloPedidoOrderByWithRelationInput[]
    cursor?: ArticuloPedidoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ArticuloPedidoScalarFieldEnum | ArticuloPedidoScalarFieldEnum[]
  }

  /**
   * CarritoCompras without action
   */
  export type CarritoComprasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CarritoCompras
     */
    select?: CarritoComprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CarritoCompras
     */
    omit?: CarritoComprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarritoComprasInclude<ExtArgs> | null
  }


  /**
   * Model ListaFavorito
   */

  export type AggregateListaFavorito = {
    _count: ListaFavoritoCountAggregateOutputType | null
    _avg: ListaFavoritoAvgAggregateOutputType | null
    _sum: ListaFavoritoSumAggregateOutputType | null
    _min: ListaFavoritoMinAggregateOutputType | null
    _max: ListaFavoritoMaxAggregateOutputType | null
  }

  export type ListaFavoritoAvgAggregateOutputType = {
    codListaFavorito: number | null
    codCliente: number | null
  }

  export type ListaFavoritoSumAggregateOutputType = {
    codListaFavorito: number | null
    codCliente: number | null
  }

  export type ListaFavoritoMinAggregateOutputType = {
    codListaFavorito: number | null
    nombreListaFavorito: string | null
    codCliente: number | null
  }

  export type ListaFavoritoMaxAggregateOutputType = {
    codListaFavorito: number | null
    nombreListaFavorito: string | null
    codCliente: number | null
  }

  export type ListaFavoritoCountAggregateOutputType = {
    codListaFavorito: number
    nombreListaFavorito: number
    codCliente: number
    _all: number
  }


  export type ListaFavoritoAvgAggregateInputType = {
    codListaFavorito?: true
    codCliente?: true
  }

  export type ListaFavoritoSumAggregateInputType = {
    codListaFavorito?: true
    codCliente?: true
  }

  export type ListaFavoritoMinAggregateInputType = {
    codListaFavorito?: true
    nombreListaFavorito?: true
    codCliente?: true
  }

  export type ListaFavoritoMaxAggregateInputType = {
    codListaFavorito?: true
    nombreListaFavorito?: true
    codCliente?: true
  }

  export type ListaFavoritoCountAggregateInputType = {
    codListaFavorito?: true
    nombreListaFavorito?: true
    codCliente?: true
    _all?: true
  }

  export type ListaFavoritoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ListaFavorito to aggregate.
     */
    where?: ListaFavoritoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListaFavoritos to fetch.
     */
    orderBy?: ListaFavoritoOrderByWithRelationInput | ListaFavoritoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ListaFavoritoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListaFavoritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListaFavoritos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ListaFavoritos
    **/
    _count?: true | ListaFavoritoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ListaFavoritoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ListaFavoritoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ListaFavoritoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ListaFavoritoMaxAggregateInputType
  }

  export type GetListaFavoritoAggregateType<T extends ListaFavoritoAggregateArgs> = {
        [P in keyof T & keyof AggregateListaFavorito]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateListaFavorito[P]>
      : GetScalarType<T[P], AggregateListaFavorito[P]>
  }




  export type ListaFavoritoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ListaFavoritoWhereInput
    orderBy?: ListaFavoritoOrderByWithAggregationInput | ListaFavoritoOrderByWithAggregationInput[]
    by: ListaFavoritoScalarFieldEnum[] | ListaFavoritoScalarFieldEnum
    having?: ListaFavoritoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ListaFavoritoCountAggregateInputType | true
    _avg?: ListaFavoritoAvgAggregateInputType
    _sum?: ListaFavoritoSumAggregateInputType
    _min?: ListaFavoritoMinAggregateInputType
    _max?: ListaFavoritoMaxAggregateInputType
  }

  export type ListaFavoritoGroupByOutputType = {
    codListaFavorito: number
    nombreListaFavorito: string
    codCliente: number
    _count: ListaFavoritoCountAggregateOutputType | null
    _avg: ListaFavoritoAvgAggregateOutputType | null
    _sum: ListaFavoritoSumAggregateOutputType | null
    _min: ListaFavoritoMinAggregateOutputType | null
    _max: ListaFavoritoMaxAggregateOutputType | null
  }

  type GetListaFavoritoGroupByPayload<T extends ListaFavoritoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ListaFavoritoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ListaFavoritoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ListaFavoritoGroupByOutputType[P]>
            : GetScalarType<T[P], ListaFavoritoGroupByOutputType[P]>
        }
      >
    >


  export type ListaFavoritoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codListaFavorito?: boolean
    nombreListaFavorito?: boolean
    codCliente?: boolean
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    articulo?: boolean | ListaFavorito$articuloArgs<ExtArgs>
    _count?: boolean | ListaFavoritoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["listaFavorito"]>

  export type ListaFavoritoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codListaFavorito?: boolean
    nombreListaFavorito?: boolean
    codCliente?: boolean
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["listaFavorito"]>

  export type ListaFavoritoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codListaFavorito?: boolean
    nombreListaFavorito?: boolean
    codCliente?: boolean
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["listaFavorito"]>

  export type ListaFavoritoSelectScalar = {
    codListaFavorito?: boolean
    nombreListaFavorito?: boolean
    codCliente?: boolean
  }

  export type ListaFavoritoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"codListaFavorito" | "nombreListaFavorito" | "codCliente", ExtArgs["result"]["listaFavorito"]>
  export type ListaFavoritoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    articulo?: boolean | ListaFavorito$articuloArgs<ExtArgs>
    _count?: boolean | ListaFavoritoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ListaFavoritoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
  }
  export type ListaFavoritoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
  }

  export type $ListaFavoritoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ListaFavorito"
    objects: {
      cliente: Prisma.$ClientePayload<ExtArgs>
      articulo: Prisma.$ArticuloPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      codListaFavorito: number
      nombreListaFavorito: string
      codCliente: number
    }, ExtArgs["result"]["listaFavorito"]>
    composites: {}
  }

  type ListaFavoritoGetPayload<S extends boolean | null | undefined | ListaFavoritoDefaultArgs> = $Result.GetResult<Prisma.$ListaFavoritoPayload, S>

  type ListaFavoritoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ListaFavoritoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ListaFavoritoCountAggregateInputType | true
    }

  export interface ListaFavoritoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ListaFavorito'], meta: { name: 'ListaFavorito' } }
    /**
     * Find zero or one ListaFavorito that matches the filter.
     * @param {ListaFavoritoFindUniqueArgs} args - Arguments to find a ListaFavorito
     * @example
     * // Get one ListaFavorito
     * const listaFavorito = await prisma.listaFavorito.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ListaFavoritoFindUniqueArgs>(args: SelectSubset<T, ListaFavoritoFindUniqueArgs<ExtArgs>>): Prisma__ListaFavoritoClient<$Result.GetResult<Prisma.$ListaFavoritoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ListaFavorito that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ListaFavoritoFindUniqueOrThrowArgs} args - Arguments to find a ListaFavorito
     * @example
     * // Get one ListaFavorito
     * const listaFavorito = await prisma.listaFavorito.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ListaFavoritoFindUniqueOrThrowArgs>(args: SelectSubset<T, ListaFavoritoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ListaFavoritoClient<$Result.GetResult<Prisma.$ListaFavoritoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ListaFavorito that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListaFavoritoFindFirstArgs} args - Arguments to find a ListaFavorito
     * @example
     * // Get one ListaFavorito
     * const listaFavorito = await prisma.listaFavorito.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ListaFavoritoFindFirstArgs>(args?: SelectSubset<T, ListaFavoritoFindFirstArgs<ExtArgs>>): Prisma__ListaFavoritoClient<$Result.GetResult<Prisma.$ListaFavoritoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ListaFavorito that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListaFavoritoFindFirstOrThrowArgs} args - Arguments to find a ListaFavorito
     * @example
     * // Get one ListaFavorito
     * const listaFavorito = await prisma.listaFavorito.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ListaFavoritoFindFirstOrThrowArgs>(args?: SelectSubset<T, ListaFavoritoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ListaFavoritoClient<$Result.GetResult<Prisma.$ListaFavoritoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ListaFavoritos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListaFavoritoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ListaFavoritos
     * const listaFavoritos = await prisma.listaFavorito.findMany()
     * 
     * // Get first 10 ListaFavoritos
     * const listaFavoritos = await prisma.listaFavorito.findMany({ take: 10 })
     * 
     * // Only select the `codListaFavorito`
     * const listaFavoritoWithCodListaFavoritoOnly = await prisma.listaFavorito.findMany({ select: { codListaFavorito: true } })
     * 
     */
    findMany<T extends ListaFavoritoFindManyArgs>(args?: SelectSubset<T, ListaFavoritoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListaFavoritoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ListaFavorito.
     * @param {ListaFavoritoCreateArgs} args - Arguments to create a ListaFavorito.
     * @example
     * // Create one ListaFavorito
     * const ListaFavorito = await prisma.listaFavorito.create({
     *   data: {
     *     // ... data to create a ListaFavorito
     *   }
     * })
     * 
     */
    create<T extends ListaFavoritoCreateArgs>(args: SelectSubset<T, ListaFavoritoCreateArgs<ExtArgs>>): Prisma__ListaFavoritoClient<$Result.GetResult<Prisma.$ListaFavoritoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ListaFavoritos.
     * @param {ListaFavoritoCreateManyArgs} args - Arguments to create many ListaFavoritos.
     * @example
     * // Create many ListaFavoritos
     * const listaFavorito = await prisma.listaFavorito.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ListaFavoritoCreateManyArgs>(args?: SelectSubset<T, ListaFavoritoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ListaFavoritos and returns the data saved in the database.
     * @param {ListaFavoritoCreateManyAndReturnArgs} args - Arguments to create many ListaFavoritos.
     * @example
     * // Create many ListaFavoritos
     * const listaFavorito = await prisma.listaFavorito.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ListaFavoritos and only return the `codListaFavorito`
     * const listaFavoritoWithCodListaFavoritoOnly = await prisma.listaFavorito.createManyAndReturn({
     *   select: { codListaFavorito: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ListaFavoritoCreateManyAndReturnArgs>(args?: SelectSubset<T, ListaFavoritoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListaFavoritoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ListaFavorito.
     * @param {ListaFavoritoDeleteArgs} args - Arguments to delete one ListaFavorito.
     * @example
     * // Delete one ListaFavorito
     * const ListaFavorito = await prisma.listaFavorito.delete({
     *   where: {
     *     // ... filter to delete one ListaFavorito
     *   }
     * })
     * 
     */
    delete<T extends ListaFavoritoDeleteArgs>(args: SelectSubset<T, ListaFavoritoDeleteArgs<ExtArgs>>): Prisma__ListaFavoritoClient<$Result.GetResult<Prisma.$ListaFavoritoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ListaFavorito.
     * @param {ListaFavoritoUpdateArgs} args - Arguments to update one ListaFavorito.
     * @example
     * // Update one ListaFavorito
     * const listaFavorito = await prisma.listaFavorito.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ListaFavoritoUpdateArgs>(args: SelectSubset<T, ListaFavoritoUpdateArgs<ExtArgs>>): Prisma__ListaFavoritoClient<$Result.GetResult<Prisma.$ListaFavoritoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ListaFavoritos.
     * @param {ListaFavoritoDeleteManyArgs} args - Arguments to filter ListaFavoritos to delete.
     * @example
     * // Delete a few ListaFavoritos
     * const { count } = await prisma.listaFavorito.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ListaFavoritoDeleteManyArgs>(args?: SelectSubset<T, ListaFavoritoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ListaFavoritos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListaFavoritoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ListaFavoritos
     * const listaFavorito = await prisma.listaFavorito.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ListaFavoritoUpdateManyArgs>(args: SelectSubset<T, ListaFavoritoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ListaFavoritos and returns the data updated in the database.
     * @param {ListaFavoritoUpdateManyAndReturnArgs} args - Arguments to update many ListaFavoritos.
     * @example
     * // Update many ListaFavoritos
     * const listaFavorito = await prisma.listaFavorito.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ListaFavoritos and only return the `codListaFavorito`
     * const listaFavoritoWithCodListaFavoritoOnly = await prisma.listaFavorito.updateManyAndReturn({
     *   select: { codListaFavorito: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ListaFavoritoUpdateManyAndReturnArgs>(args: SelectSubset<T, ListaFavoritoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListaFavoritoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ListaFavorito.
     * @param {ListaFavoritoUpsertArgs} args - Arguments to update or create a ListaFavorito.
     * @example
     * // Update or create a ListaFavorito
     * const listaFavorito = await prisma.listaFavorito.upsert({
     *   create: {
     *     // ... data to create a ListaFavorito
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ListaFavorito we want to update
     *   }
     * })
     */
    upsert<T extends ListaFavoritoUpsertArgs>(args: SelectSubset<T, ListaFavoritoUpsertArgs<ExtArgs>>): Prisma__ListaFavoritoClient<$Result.GetResult<Prisma.$ListaFavoritoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ListaFavoritos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListaFavoritoCountArgs} args - Arguments to filter ListaFavoritos to count.
     * @example
     * // Count the number of ListaFavoritos
     * const count = await prisma.listaFavorito.count({
     *   where: {
     *     // ... the filter for the ListaFavoritos we want to count
     *   }
     * })
    **/
    count<T extends ListaFavoritoCountArgs>(
      args?: Subset<T, ListaFavoritoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ListaFavoritoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ListaFavorito.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListaFavoritoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ListaFavoritoAggregateArgs>(args: Subset<T, ListaFavoritoAggregateArgs>): Prisma.PrismaPromise<GetListaFavoritoAggregateType<T>>

    /**
     * Group by ListaFavorito.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListaFavoritoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ListaFavoritoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ListaFavoritoGroupByArgs['orderBy'] }
        : { orderBy?: ListaFavoritoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ListaFavoritoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetListaFavoritoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ListaFavorito model
   */
  readonly fields: ListaFavoritoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ListaFavorito.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ListaFavoritoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cliente<T extends ClienteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClienteDefaultArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    articulo<T extends ListaFavorito$articuloArgs<ExtArgs> = {}>(args?: Subset<T, ListaFavorito$articuloArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArticuloPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ListaFavorito model
   */
  interface ListaFavoritoFieldRefs {
    readonly codListaFavorito: FieldRef<"ListaFavorito", 'Int'>
    readonly nombreListaFavorito: FieldRef<"ListaFavorito", 'String'>
    readonly codCliente: FieldRef<"ListaFavorito", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * ListaFavorito findUnique
   */
  export type ListaFavoritoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListaFavorito
     */
    select?: ListaFavoritoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListaFavorito
     */
    omit?: ListaFavoritoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListaFavoritoInclude<ExtArgs> | null
    /**
     * Filter, which ListaFavorito to fetch.
     */
    where: ListaFavoritoWhereUniqueInput
  }

  /**
   * ListaFavorito findUniqueOrThrow
   */
  export type ListaFavoritoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListaFavorito
     */
    select?: ListaFavoritoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListaFavorito
     */
    omit?: ListaFavoritoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListaFavoritoInclude<ExtArgs> | null
    /**
     * Filter, which ListaFavorito to fetch.
     */
    where: ListaFavoritoWhereUniqueInput
  }

  /**
   * ListaFavorito findFirst
   */
  export type ListaFavoritoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListaFavorito
     */
    select?: ListaFavoritoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListaFavorito
     */
    omit?: ListaFavoritoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListaFavoritoInclude<ExtArgs> | null
    /**
     * Filter, which ListaFavorito to fetch.
     */
    where?: ListaFavoritoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListaFavoritos to fetch.
     */
    orderBy?: ListaFavoritoOrderByWithRelationInput | ListaFavoritoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ListaFavoritos.
     */
    cursor?: ListaFavoritoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListaFavoritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListaFavoritos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ListaFavoritos.
     */
    distinct?: ListaFavoritoScalarFieldEnum | ListaFavoritoScalarFieldEnum[]
  }

  /**
   * ListaFavorito findFirstOrThrow
   */
  export type ListaFavoritoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListaFavorito
     */
    select?: ListaFavoritoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListaFavorito
     */
    omit?: ListaFavoritoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListaFavoritoInclude<ExtArgs> | null
    /**
     * Filter, which ListaFavorito to fetch.
     */
    where?: ListaFavoritoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListaFavoritos to fetch.
     */
    orderBy?: ListaFavoritoOrderByWithRelationInput | ListaFavoritoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ListaFavoritos.
     */
    cursor?: ListaFavoritoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListaFavoritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListaFavoritos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ListaFavoritos.
     */
    distinct?: ListaFavoritoScalarFieldEnum | ListaFavoritoScalarFieldEnum[]
  }

  /**
   * ListaFavorito findMany
   */
  export type ListaFavoritoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListaFavorito
     */
    select?: ListaFavoritoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListaFavorito
     */
    omit?: ListaFavoritoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListaFavoritoInclude<ExtArgs> | null
    /**
     * Filter, which ListaFavoritos to fetch.
     */
    where?: ListaFavoritoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListaFavoritos to fetch.
     */
    orderBy?: ListaFavoritoOrderByWithRelationInput | ListaFavoritoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ListaFavoritos.
     */
    cursor?: ListaFavoritoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListaFavoritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListaFavoritos.
     */
    skip?: number
    distinct?: ListaFavoritoScalarFieldEnum | ListaFavoritoScalarFieldEnum[]
  }

  /**
   * ListaFavorito create
   */
  export type ListaFavoritoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListaFavorito
     */
    select?: ListaFavoritoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListaFavorito
     */
    omit?: ListaFavoritoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListaFavoritoInclude<ExtArgs> | null
    /**
     * The data needed to create a ListaFavorito.
     */
    data: XOR<ListaFavoritoCreateInput, ListaFavoritoUncheckedCreateInput>
  }

  /**
   * ListaFavorito createMany
   */
  export type ListaFavoritoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ListaFavoritos.
     */
    data: ListaFavoritoCreateManyInput | ListaFavoritoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ListaFavorito createManyAndReturn
   */
  export type ListaFavoritoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListaFavorito
     */
    select?: ListaFavoritoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ListaFavorito
     */
    omit?: ListaFavoritoOmit<ExtArgs> | null
    /**
     * The data used to create many ListaFavoritos.
     */
    data: ListaFavoritoCreateManyInput | ListaFavoritoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListaFavoritoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ListaFavorito update
   */
  export type ListaFavoritoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListaFavorito
     */
    select?: ListaFavoritoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListaFavorito
     */
    omit?: ListaFavoritoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListaFavoritoInclude<ExtArgs> | null
    /**
     * The data needed to update a ListaFavorito.
     */
    data: XOR<ListaFavoritoUpdateInput, ListaFavoritoUncheckedUpdateInput>
    /**
     * Choose, which ListaFavorito to update.
     */
    where: ListaFavoritoWhereUniqueInput
  }

  /**
   * ListaFavorito updateMany
   */
  export type ListaFavoritoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ListaFavoritos.
     */
    data: XOR<ListaFavoritoUpdateManyMutationInput, ListaFavoritoUncheckedUpdateManyInput>
    /**
     * Filter which ListaFavoritos to update
     */
    where?: ListaFavoritoWhereInput
    /**
     * Limit how many ListaFavoritos to update.
     */
    limit?: number
  }

  /**
   * ListaFavorito updateManyAndReturn
   */
  export type ListaFavoritoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListaFavorito
     */
    select?: ListaFavoritoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ListaFavorito
     */
    omit?: ListaFavoritoOmit<ExtArgs> | null
    /**
     * The data used to update ListaFavoritos.
     */
    data: XOR<ListaFavoritoUpdateManyMutationInput, ListaFavoritoUncheckedUpdateManyInput>
    /**
     * Filter which ListaFavoritos to update
     */
    where?: ListaFavoritoWhereInput
    /**
     * Limit how many ListaFavoritos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListaFavoritoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ListaFavorito upsert
   */
  export type ListaFavoritoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListaFavorito
     */
    select?: ListaFavoritoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListaFavorito
     */
    omit?: ListaFavoritoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListaFavoritoInclude<ExtArgs> | null
    /**
     * The filter to search for the ListaFavorito to update in case it exists.
     */
    where: ListaFavoritoWhereUniqueInput
    /**
     * In case the ListaFavorito found by the `where` argument doesn't exist, create a new ListaFavorito with this data.
     */
    create: XOR<ListaFavoritoCreateInput, ListaFavoritoUncheckedCreateInput>
    /**
     * In case the ListaFavorito was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ListaFavoritoUpdateInput, ListaFavoritoUncheckedUpdateInput>
  }

  /**
   * ListaFavorito delete
   */
  export type ListaFavoritoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListaFavorito
     */
    select?: ListaFavoritoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListaFavorito
     */
    omit?: ListaFavoritoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListaFavoritoInclude<ExtArgs> | null
    /**
     * Filter which ListaFavorito to delete.
     */
    where: ListaFavoritoWhereUniqueInput
  }

  /**
   * ListaFavorito deleteMany
   */
  export type ListaFavoritoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ListaFavoritos to delete
     */
    where?: ListaFavoritoWhereInput
    /**
     * Limit how many ListaFavoritos to delete.
     */
    limit?: number
  }

  /**
   * ListaFavorito.articulo
   */
  export type ListaFavorito$articuloArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Articulo
     */
    select?: ArticuloSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Articulo
     */
    omit?: ArticuloOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticuloInclude<ExtArgs> | null
    where?: ArticuloWhereInput
    orderBy?: ArticuloOrderByWithRelationInput | ArticuloOrderByWithRelationInput[]
    cursor?: ArticuloWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ArticuloScalarFieldEnum | ArticuloScalarFieldEnum[]
  }

  /**
   * ListaFavorito without action
   */
  export type ListaFavoritoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListaFavorito
     */
    select?: ListaFavoritoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListaFavorito
     */
    omit?: ListaFavoritoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListaFavoritoInclude<ExtArgs> | null
  }


  /**
   * Model Articulo
   */

  export type AggregateArticulo = {
    _count: ArticuloCountAggregateOutputType | null
    _avg: ArticuloAvgAggregateOutputType | null
    _sum: ArticuloSumAggregateOutputType | null
    _min: ArticuloMinAggregateOutputType | null
    _max: ArticuloMaxAggregateOutputType | null
  }

  export type ArticuloAvgAggregateOutputType = {
    codArticulo: number | null
    stock: number | null
    precio: number | null
    codCategoria: number | null
  }

  export type ArticuloSumAggregateOutputType = {
    codArticulo: number | null
    stock: number | null
    precio: number | null
    codCategoria: number | null
  }

  export type ArticuloMinAggregateOutputType = {
    codArticulo: number | null
    nombreArticulo: string | null
    descripcion: string | null
    stock: number | null
    precio: number | null
    codCategoria: number | null
  }

  export type ArticuloMaxAggregateOutputType = {
    codArticulo: number | null
    nombreArticulo: string | null
    descripcion: string | null
    stock: number | null
    precio: number | null
    codCategoria: number | null
  }

  export type ArticuloCountAggregateOutputType = {
    codArticulo: number
    nombreArticulo: number
    descripcion: number
    stock: number
    precio: number
    codCategoria: number
    _all: number
  }


  export type ArticuloAvgAggregateInputType = {
    codArticulo?: true
    stock?: true
    precio?: true
    codCategoria?: true
  }

  export type ArticuloSumAggregateInputType = {
    codArticulo?: true
    stock?: true
    precio?: true
    codCategoria?: true
  }

  export type ArticuloMinAggregateInputType = {
    codArticulo?: true
    nombreArticulo?: true
    descripcion?: true
    stock?: true
    precio?: true
    codCategoria?: true
  }

  export type ArticuloMaxAggregateInputType = {
    codArticulo?: true
    nombreArticulo?: true
    descripcion?: true
    stock?: true
    precio?: true
    codCategoria?: true
  }

  export type ArticuloCountAggregateInputType = {
    codArticulo?: true
    nombreArticulo?: true
    descripcion?: true
    stock?: true
    precio?: true
    codCategoria?: true
    _all?: true
  }

  export type ArticuloAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Articulo to aggregate.
     */
    where?: ArticuloWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Articulos to fetch.
     */
    orderBy?: ArticuloOrderByWithRelationInput | ArticuloOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ArticuloWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Articulos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Articulos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Articulos
    **/
    _count?: true | ArticuloCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ArticuloAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ArticuloSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ArticuloMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ArticuloMaxAggregateInputType
  }

  export type GetArticuloAggregateType<T extends ArticuloAggregateArgs> = {
        [P in keyof T & keyof AggregateArticulo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateArticulo[P]>
      : GetScalarType<T[P], AggregateArticulo[P]>
  }




  export type ArticuloGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ArticuloWhereInput
    orderBy?: ArticuloOrderByWithAggregationInput | ArticuloOrderByWithAggregationInput[]
    by: ArticuloScalarFieldEnum[] | ArticuloScalarFieldEnum
    having?: ArticuloScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ArticuloCountAggregateInputType | true
    _avg?: ArticuloAvgAggregateInputType
    _sum?: ArticuloSumAggregateInputType
    _min?: ArticuloMinAggregateInputType
    _max?: ArticuloMaxAggregateInputType
  }

  export type ArticuloGroupByOutputType = {
    codArticulo: number
    nombreArticulo: string
    descripcion: string
    stock: number
    precio: number
    codCategoria: number
    _count: ArticuloCountAggregateOutputType | null
    _avg: ArticuloAvgAggregateOutputType | null
    _sum: ArticuloSumAggregateOutputType | null
    _min: ArticuloMinAggregateOutputType | null
    _max: ArticuloMaxAggregateOutputType | null
  }

  type GetArticuloGroupByPayload<T extends ArticuloGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ArticuloGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ArticuloGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ArticuloGroupByOutputType[P]>
            : GetScalarType<T[P], ArticuloGroupByOutputType[P]>
        }
      >
    >


  export type ArticuloSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codArticulo?: boolean
    nombreArticulo?: boolean
    descripcion?: boolean
    stock?: boolean
    precio?: boolean
    codCategoria?: boolean
    articuloPedido?: boolean | Articulo$articuloPedidoArgs<ExtArgs>
    listaFav?: boolean | Articulo$listaFavArgs<ExtArgs>
    categorias?: boolean | Articulo$categoriasArgs<ExtArgs>
    _count?: boolean | ArticuloCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["articulo"]>

  export type ArticuloSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codArticulo?: boolean
    nombreArticulo?: boolean
    descripcion?: boolean
    stock?: boolean
    precio?: boolean
    codCategoria?: boolean
  }, ExtArgs["result"]["articulo"]>

  export type ArticuloSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codArticulo?: boolean
    nombreArticulo?: boolean
    descripcion?: boolean
    stock?: boolean
    precio?: boolean
    codCategoria?: boolean
  }, ExtArgs["result"]["articulo"]>

  export type ArticuloSelectScalar = {
    codArticulo?: boolean
    nombreArticulo?: boolean
    descripcion?: boolean
    stock?: boolean
    precio?: boolean
    codCategoria?: boolean
  }

  export type ArticuloOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"codArticulo" | "nombreArticulo" | "descripcion" | "stock" | "precio" | "codCategoria", ExtArgs["result"]["articulo"]>
  export type ArticuloInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    articuloPedido?: boolean | Articulo$articuloPedidoArgs<ExtArgs>
    listaFav?: boolean | Articulo$listaFavArgs<ExtArgs>
    categorias?: boolean | Articulo$categoriasArgs<ExtArgs>
    _count?: boolean | ArticuloCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ArticuloIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type ArticuloIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $ArticuloPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Articulo"
    objects: {
      articuloPedido: Prisma.$ArticuloPedidoPayload<ExtArgs>[]
      listaFav: Prisma.$ListaFavoritoPayload<ExtArgs>[]
      categorias: Prisma.$CategoriaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      codArticulo: number
      nombreArticulo: string
      descripcion: string
      stock: number
      precio: number
      codCategoria: number
    }, ExtArgs["result"]["articulo"]>
    composites: {}
  }

  type ArticuloGetPayload<S extends boolean | null | undefined | ArticuloDefaultArgs> = $Result.GetResult<Prisma.$ArticuloPayload, S>

  type ArticuloCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ArticuloFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ArticuloCountAggregateInputType | true
    }

  export interface ArticuloDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Articulo'], meta: { name: 'Articulo' } }
    /**
     * Find zero or one Articulo that matches the filter.
     * @param {ArticuloFindUniqueArgs} args - Arguments to find a Articulo
     * @example
     * // Get one Articulo
     * const articulo = await prisma.articulo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ArticuloFindUniqueArgs>(args: SelectSubset<T, ArticuloFindUniqueArgs<ExtArgs>>): Prisma__ArticuloClient<$Result.GetResult<Prisma.$ArticuloPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Articulo that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ArticuloFindUniqueOrThrowArgs} args - Arguments to find a Articulo
     * @example
     * // Get one Articulo
     * const articulo = await prisma.articulo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ArticuloFindUniqueOrThrowArgs>(args: SelectSubset<T, ArticuloFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ArticuloClient<$Result.GetResult<Prisma.$ArticuloPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Articulo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArticuloFindFirstArgs} args - Arguments to find a Articulo
     * @example
     * // Get one Articulo
     * const articulo = await prisma.articulo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ArticuloFindFirstArgs>(args?: SelectSubset<T, ArticuloFindFirstArgs<ExtArgs>>): Prisma__ArticuloClient<$Result.GetResult<Prisma.$ArticuloPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Articulo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArticuloFindFirstOrThrowArgs} args - Arguments to find a Articulo
     * @example
     * // Get one Articulo
     * const articulo = await prisma.articulo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ArticuloFindFirstOrThrowArgs>(args?: SelectSubset<T, ArticuloFindFirstOrThrowArgs<ExtArgs>>): Prisma__ArticuloClient<$Result.GetResult<Prisma.$ArticuloPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Articulos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArticuloFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Articulos
     * const articulos = await prisma.articulo.findMany()
     * 
     * // Get first 10 Articulos
     * const articulos = await prisma.articulo.findMany({ take: 10 })
     * 
     * // Only select the `codArticulo`
     * const articuloWithCodArticuloOnly = await prisma.articulo.findMany({ select: { codArticulo: true } })
     * 
     */
    findMany<T extends ArticuloFindManyArgs>(args?: SelectSubset<T, ArticuloFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArticuloPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Articulo.
     * @param {ArticuloCreateArgs} args - Arguments to create a Articulo.
     * @example
     * // Create one Articulo
     * const Articulo = await prisma.articulo.create({
     *   data: {
     *     // ... data to create a Articulo
     *   }
     * })
     * 
     */
    create<T extends ArticuloCreateArgs>(args: SelectSubset<T, ArticuloCreateArgs<ExtArgs>>): Prisma__ArticuloClient<$Result.GetResult<Prisma.$ArticuloPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Articulos.
     * @param {ArticuloCreateManyArgs} args - Arguments to create many Articulos.
     * @example
     * // Create many Articulos
     * const articulo = await prisma.articulo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ArticuloCreateManyArgs>(args?: SelectSubset<T, ArticuloCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Articulos and returns the data saved in the database.
     * @param {ArticuloCreateManyAndReturnArgs} args - Arguments to create many Articulos.
     * @example
     * // Create many Articulos
     * const articulo = await prisma.articulo.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Articulos and only return the `codArticulo`
     * const articuloWithCodArticuloOnly = await prisma.articulo.createManyAndReturn({
     *   select: { codArticulo: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ArticuloCreateManyAndReturnArgs>(args?: SelectSubset<T, ArticuloCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArticuloPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Articulo.
     * @param {ArticuloDeleteArgs} args - Arguments to delete one Articulo.
     * @example
     * // Delete one Articulo
     * const Articulo = await prisma.articulo.delete({
     *   where: {
     *     // ... filter to delete one Articulo
     *   }
     * })
     * 
     */
    delete<T extends ArticuloDeleteArgs>(args: SelectSubset<T, ArticuloDeleteArgs<ExtArgs>>): Prisma__ArticuloClient<$Result.GetResult<Prisma.$ArticuloPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Articulo.
     * @param {ArticuloUpdateArgs} args - Arguments to update one Articulo.
     * @example
     * // Update one Articulo
     * const articulo = await prisma.articulo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ArticuloUpdateArgs>(args: SelectSubset<T, ArticuloUpdateArgs<ExtArgs>>): Prisma__ArticuloClient<$Result.GetResult<Prisma.$ArticuloPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Articulos.
     * @param {ArticuloDeleteManyArgs} args - Arguments to filter Articulos to delete.
     * @example
     * // Delete a few Articulos
     * const { count } = await prisma.articulo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ArticuloDeleteManyArgs>(args?: SelectSubset<T, ArticuloDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Articulos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArticuloUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Articulos
     * const articulo = await prisma.articulo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ArticuloUpdateManyArgs>(args: SelectSubset<T, ArticuloUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Articulos and returns the data updated in the database.
     * @param {ArticuloUpdateManyAndReturnArgs} args - Arguments to update many Articulos.
     * @example
     * // Update many Articulos
     * const articulo = await prisma.articulo.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Articulos and only return the `codArticulo`
     * const articuloWithCodArticuloOnly = await prisma.articulo.updateManyAndReturn({
     *   select: { codArticulo: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ArticuloUpdateManyAndReturnArgs>(args: SelectSubset<T, ArticuloUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArticuloPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Articulo.
     * @param {ArticuloUpsertArgs} args - Arguments to update or create a Articulo.
     * @example
     * // Update or create a Articulo
     * const articulo = await prisma.articulo.upsert({
     *   create: {
     *     // ... data to create a Articulo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Articulo we want to update
     *   }
     * })
     */
    upsert<T extends ArticuloUpsertArgs>(args: SelectSubset<T, ArticuloUpsertArgs<ExtArgs>>): Prisma__ArticuloClient<$Result.GetResult<Prisma.$ArticuloPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Articulos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArticuloCountArgs} args - Arguments to filter Articulos to count.
     * @example
     * // Count the number of Articulos
     * const count = await prisma.articulo.count({
     *   where: {
     *     // ... the filter for the Articulos we want to count
     *   }
     * })
    **/
    count<T extends ArticuloCountArgs>(
      args?: Subset<T, ArticuloCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ArticuloCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Articulo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArticuloAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ArticuloAggregateArgs>(args: Subset<T, ArticuloAggregateArgs>): Prisma.PrismaPromise<GetArticuloAggregateType<T>>

    /**
     * Group by Articulo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArticuloGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ArticuloGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ArticuloGroupByArgs['orderBy'] }
        : { orderBy?: ArticuloGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ArticuloGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetArticuloGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Articulo model
   */
  readonly fields: ArticuloFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Articulo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ArticuloClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    articuloPedido<T extends Articulo$articuloPedidoArgs<ExtArgs> = {}>(args?: Subset<T, Articulo$articuloPedidoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArticuloPedidoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    listaFav<T extends Articulo$listaFavArgs<ExtArgs> = {}>(args?: Subset<T, Articulo$listaFavArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListaFavoritoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    categorias<T extends Articulo$categoriasArgs<ExtArgs> = {}>(args?: Subset<T, Articulo$categoriasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Articulo model
   */
  interface ArticuloFieldRefs {
    readonly codArticulo: FieldRef<"Articulo", 'Int'>
    readonly nombreArticulo: FieldRef<"Articulo", 'String'>
    readonly descripcion: FieldRef<"Articulo", 'String'>
    readonly stock: FieldRef<"Articulo", 'Int'>
    readonly precio: FieldRef<"Articulo", 'Float'>
    readonly codCategoria: FieldRef<"Articulo", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Articulo findUnique
   */
  export type ArticuloFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Articulo
     */
    select?: ArticuloSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Articulo
     */
    omit?: ArticuloOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticuloInclude<ExtArgs> | null
    /**
     * Filter, which Articulo to fetch.
     */
    where: ArticuloWhereUniqueInput
  }

  /**
   * Articulo findUniqueOrThrow
   */
  export type ArticuloFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Articulo
     */
    select?: ArticuloSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Articulo
     */
    omit?: ArticuloOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticuloInclude<ExtArgs> | null
    /**
     * Filter, which Articulo to fetch.
     */
    where: ArticuloWhereUniqueInput
  }

  /**
   * Articulo findFirst
   */
  export type ArticuloFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Articulo
     */
    select?: ArticuloSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Articulo
     */
    omit?: ArticuloOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticuloInclude<ExtArgs> | null
    /**
     * Filter, which Articulo to fetch.
     */
    where?: ArticuloWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Articulos to fetch.
     */
    orderBy?: ArticuloOrderByWithRelationInput | ArticuloOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Articulos.
     */
    cursor?: ArticuloWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Articulos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Articulos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Articulos.
     */
    distinct?: ArticuloScalarFieldEnum | ArticuloScalarFieldEnum[]
  }

  /**
   * Articulo findFirstOrThrow
   */
  export type ArticuloFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Articulo
     */
    select?: ArticuloSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Articulo
     */
    omit?: ArticuloOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticuloInclude<ExtArgs> | null
    /**
     * Filter, which Articulo to fetch.
     */
    where?: ArticuloWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Articulos to fetch.
     */
    orderBy?: ArticuloOrderByWithRelationInput | ArticuloOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Articulos.
     */
    cursor?: ArticuloWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Articulos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Articulos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Articulos.
     */
    distinct?: ArticuloScalarFieldEnum | ArticuloScalarFieldEnum[]
  }

  /**
   * Articulo findMany
   */
  export type ArticuloFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Articulo
     */
    select?: ArticuloSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Articulo
     */
    omit?: ArticuloOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticuloInclude<ExtArgs> | null
    /**
     * Filter, which Articulos to fetch.
     */
    where?: ArticuloWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Articulos to fetch.
     */
    orderBy?: ArticuloOrderByWithRelationInput | ArticuloOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Articulos.
     */
    cursor?: ArticuloWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Articulos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Articulos.
     */
    skip?: number
    distinct?: ArticuloScalarFieldEnum | ArticuloScalarFieldEnum[]
  }

  /**
   * Articulo create
   */
  export type ArticuloCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Articulo
     */
    select?: ArticuloSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Articulo
     */
    omit?: ArticuloOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticuloInclude<ExtArgs> | null
    /**
     * The data needed to create a Articulo.
     */
    data: XOR<ArticuloCreateInput, ArticuloUncheckedCreateInput>
  }

  /**
   * Articulo createMany
   */
  export type ArticuloCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Articulos.
     */
    data: ArticuloCreateManyInput | ArticuloCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Articulo createManyAndReturn
   */
  export type ArticuloCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Articulo
     */
    select?: ArticuloSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Articulo
     */
    omit?: ArticuloOmit<ExtArgs> | null
    /**
     * The data used to create many Articulos.
     */
    data: ArticuloCreateManyInput | ArticuloCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Articulo update
   */
  export type ArticuloUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Articulo
     */
    select?: ArticuloSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Articulo
     */
    omit?: ArticuloOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticuloInclude<ExtArgs> | null
    /**
     * The data needed to update a Articulo.
     */
    data: XOR<ArticuloUpdateInput, ArticuloUncheckedUpdateInput>
    /**
     * Choose, which Articulo to update.
     */
    where: ArticuloWhereUniqueInput
  }

  /**
   * Articulo updateMany
   */
  export type ArticuloUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Articulos.
     */
    data: XOR<ArticuloUpdateManyMutationInput, ArticuloUncheckedUpdateManyInput>
    /**
     * Filter which Articulos to update
     */
    where?: ArticuloWhereInput
    /**
     * Limit how many Articulos to update.
     */
    limit?: number
  }

  /**
   * Articulo updateManyAndReturn
   */
  export type ArticuloUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Articulo
     */
    select?: ArticuloSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Articulo
     */
    omit?: ArticuloOmit<ExtArgs> | null
    /**
     * The data used to update Articulos.
     */
    data: XOR<ArticuloUpdateManyMutationInput, ArticuloUncheckedUpdateManyInput>
    /**
     * Filter which Articulos to update
     */
    where?: ArticuloWhereInput
    /**
     * Limit how many Articulos to update.
     */
    limit?: number
  }

  /**
   * Articulo upsert
   */
  export type ArticuloUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Articulo
     */
    select?: ArticuloSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Articulo
     */
    omit?: ArticuloOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticuloInclude<ExtArgs> | null
    /**
     * The filter to search for the Articulo to update in case it exists.
     */
    where: ArticuloWhereUniqueInput
    /**
     * In case the Articulo found by the `where` argument doesn't exist, create a new Articulo with this data.
     */
    create: XOR<ArticuloCreateInput, ArticuloUncheckedCreateInput>
    /**
     * In case the Articulo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ArticuloUpdateInput, ArticuloUncheckedUpdateInput>
  }

  /**
   * Articulo delete
   */
  export type ArticuloDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Articulo
     */
    select?: ArticuloSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Articulo
     */
    omit?: ArticuloOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticuloInclude<ExtArgs> | null
    /**
     * Filter which Articulo to delete.
     */
    where: ArticuloWhereUniqueInput
  }

  /**
   * Articulo deleteMany
   */
  export type ArticuloDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Articulos to delete
     */
    where?: ArticuloWhereInput
    /**
     * Limit how many Articulos to delete.
     */
    limit?: number
  }

  /**
   * Articulo.articuloPedido
   */
  export type Articulo$articuloPedidoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticuloPedido
     */
    select?: ArticuloPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArticuloPedido
     */
    omit?: ArticuloPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticuloPedidoInclude<ExtArgs> | null
    where?: ArticuloPedidoWhereInput
    orderBy?: ArticuloPedidoOrderByWithRelationInput | ArticuloPedidoOrderByWithRelationInput[]
    cursor?: ArticuloPedidoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ArticuloPedidoScalarFieldEnum | ArticuloPedidoScalarFieldEnum[]
  }

  /**
   * Articulo.listaFav
   */
  export type Articulo$listaFavArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListaFavorito
     */
    select?: ListaFavoritoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListaFavorito
     */
    omit?: ListaFavoritoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListaFavoritoInclude<ExtArgs> | null
    where?: ListaFavoritoWhereInput
    orderBy?: ListaFavoritoOrderByWithRelationInput | ListaFavoritoOrderByWithRelationInput[]
    cursor?: ListaFavoritoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ListaFavoritoScalarFieldEnum | ListaFavoritoScalarFieldEnum[]
  }

  /**
   * Articulo.categorias
   */
  export type Articulo$categoriasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    where?: CategoriaWhereInput
    orderBy?: CategoriaOrderByWithRelationInput | CategoriaOrderByWithRelationInput[]
    cursor?: CategoriaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoriaScalarFieldEnum | CategoriaScalarFieldEnum[]
  }

  /**
   * Articulo without action
   */
  export type ArticuloDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Articulo
     */
    select?: ArticuloSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Articulo
     */
    omit?: ArticuloOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticuloInclude<ExtArgs> | null
  }


  /**
   * Model Categoria
   */

  export type AggregateCategoria = {
    _count: CategoriaCountAggregateOutputType | null
    _avg: CategoriaAvgAggregateOutputType | null
    _sum: CategoriaSumAggregateOutputType | null
    _min: CategoriaMinAggregateOutputType | null
    _max: CategoriaMaxAggregateOutputType | null
  }

  export type CategoriaAvgAggregateOutputType = {
    codCategoria: number | null
  }

  export type CategoriaSumAggregateOutputType = {
    codCategoria: number | null
  }

  export type CategoriaMinAggregateOutputType = {
    codCategoria: number | null
    nombreCategoria: string | null
    descripcion: string | null
    fechaBajaCategoria: Date | null
  }

  export type CategoriaMaxAggregateOutputType = {
    codCategoria: number | null
    nombreCategoria: string | null
    descripcion: string | null
    fechaBajaCategoria: Date | null
  }

  export type CategoriaCountAggregateOutputType = {
    codCategoria: number
    nombreCategoria: number
    descripcion: number
    fechaBajaCategoria: number
    _all: number
  }


  export type CategoriaAvgAggregateInputType = {
    codCategoria?: true
  }

  export type CategoriaSumAggregateInputType = {
    codCategoria?: true
  }

  export type CategoriaMinAggregateInputType = {
    codCategoria?: true
    nombreCategoria?: true
    descripcion?: true
    fechaBajaCategoria?: true
  }

  export type CategoriaMaxAggregateInputType = {
    codCategoria?: true
    nombreCategoria?: true
    descripcion?: true
    fechaBajaCategoria?: true
  }

  export type CategoriaCountAggregateInputType = {
    codCategoria?: true
    nombreCategoria?: true
    descripcion?: true
    fechaBajaCategoria?: true
    _all?: true
  }

  export type CategoriaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Categoria to aggregate.
     */
    where?: CategoriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categorias to fetch.
     */
    orderBy?: CategoriaOrderByWithRelationInput | CategoriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CategoriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categorias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Categorias
    **/
    _count?: true | CategoriaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CategoriaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CategoriaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoriaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoriaMaxAggregateInputType
  }

  export type GetCategoriaAggregateType<T extends CategoriaAggregateArgs> = {
        [P in keyof T & keyof AggregateCategoria]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategoria[P]>
      : GetScalarType<T[P], AggregateCategoria[P]>
  }




  export type CategoriaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoriaWhereInput
    orderBy?: CategoriaOrderByWithAggregationInput | CategoriaOrderByWithAggregationInput[]
    by: CategoriaScalarFieldEnum[] | CategoriaScalarFieldEnum
    having?: CategoriaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoriaCountAggregateInputType | true
    _avg?: CategoriaAvgAggregateInputType
    _sum?: CategoriaSumAggregateInputType
    _min?: CategoriaMinAggregateInputType
    _max?: CategoriaMaxAggregateInputType
  }

  export type CategoriaGroupByOutputType = {
    codCategoria: number
    nombreCategoria: string
    descripcion: string
    fechaBajaCategoria: Date | null
    _count: CategoriaCountAggregateOutputType | null
    _avg: CategoriaAvgAggregateOutputType | null
    _sum: CategoriaSumAggregateOutputType | null
    _min: CategoriaMinAggregateOutputType | null
    _max: CategoriaMaxAggregateOutputType | null
  }

  type GetCategoriaGroupByPayload<T extends CategoriaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CategoriaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoriaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoriaGroupByOutputType[P]>
            : GetScalarType<T[P], CategoriaGroupByOutputType[P]>
        }
      >
    >


  export type CategoriaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codCategoria?: boolean
    nombreCategoria?: boolean
    descripcion?: boolean
    fechaBajaCategoria?: boolean
    articulos?: boolean | Categoria$articulosArgs<ExtArgs>
    _count?: boolean | CategoriaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["categoria"]>

  export type CategoriaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codCategoria?: boolean
    nombreCategoria?: boolean
    descripcion?: boolean
    fechaBajaCategoria?: boolean
  }, ExtArgs["result"]["categoria"]>

  export type CategoriaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codCategoria?: boolean
    nombreCategoria?: boolean
    descripcion?: boolean
    fechaBajaCategoria?: boolean
  }, ExtArgs["result"]["categoria"]>

  export type CategoriaSelectScalar = {
    codCategoria?: boolean
    nombreCategoria?: boolean
    descripcion?: boolean
    fechaBajaCategoria?: boolean
  }

  export type CategoriaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"codCategoria" | "nombreCategoria" | "descripcion" | "fechaBajaCategoria", ExtArgs["result"]["categoria"]>
  export type CategoriaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    articulos?: boolean | Categoria$articulosArgs<ExtArgs>
    _count?: boolean | CategoriaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CategoriaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type CategoriaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $CategoriaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Categoria"
    objects: {
      articulos: Prisma.$ArticuloPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      codCategoria: number
      nombreCategoria: string
      descripcion: string
      fechaBajaCategoria: Date | null
    }, ExtArgs["result"]["categoria"]>
    composites: {}
  }

  type CategoriaGetPayload<S extends boolean | null | undefined | CategoriaDefaultArgs> = $Result.GetResult<Prisma.$CategoriaPayload, S>

  type CategoriaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CategoriaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CategoriaCountAggregateInputType | true
    }

  export interface CategoriaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Categoria'], meta: { name: 'Categoria' } }
    /**
     * Find zero or one Categoria that matches the filter.
     * @param {CategoriaFindUniqueArgs} args - Arguments to find a Categoria
     * @example
     * // Get one Categoria
     * const categoria = await prisma.categoria.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CategoriaFindUniqueArgs>(args: SelectSubset<T, CategoriaFindUniqueArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Categoria that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CategoriaFindUniqueOrThrowArgs} args - Arguments to find a Categoria
     * @example
     * // Get one Categoria
     * const categoria = await prisma.categoria.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CategoriaFindUniqueOrThrowArgs>(args: SelectSubset<T, CategoriaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Categoria that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaFindFirstArgs} args - Arguments to find a Categoria
     * @example
     * // Get one Categoria
     * const categoria = await prisma.categoria.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CategoriaFindFirstArgs>(args?: SelectSubset<T, CategoriaFindFirstArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Categoria that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaFindFirstOrThrowArgs} args - Arguments to find a Categoria
     * @example
     * // Get one Categoria
     * const categoria = await prisma.categoria.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CategoriaFindFirstOrThrowArgs>(args?: SelectSubset<T, CategoriaFindFirstOrThrowArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Categorias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Categorias
     * const categorias = await prisma.categoria.findMany()
     * 
     * // Get first 10 Categorias
     * const categorias = await prisma.categoria.findMany({ take: 10 })
     * 
     * // Only select the `codCategoria`
     * const categoriaWithCodCategoriaOnly = await prisma.categoria.findMany({ select: { codCategoria: true } })
     * 
     */
    findMany<T extends CategoriaFindManyArgs>(args?: SelectSubset<T, CategoriaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Categoria.
     * @param {CategoriaCreateArgs} args - Arguments to create a Categoria.
     * @example
     * // Create one Categoria
     * const Categoria = await prisma.categoria.create({
     *   data: {
     *     // ... data to create a Categoria
     *   }
     * })
     * 
     */
    create<T extends CategoriaCreateArgs>(args: SelectSubset<T, CategoriaCreateArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Categorias.
     * @param {CategoriaCreateManyArgs} args - Arguments to create many Categorias.
     * @example
     * // Create many Categorias
     * const categoria = await prisma.categoria.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CategoriaCreateManyArgs>(args?: SelectSubset<T, CategoriaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Categorias and returns the data saved in the database.
     * @param {CategoriaCreateManyAndReturnArgs} args - Arguments to create many Categorias.
     * @example
     * // Create many Categorias
     * const categoria = await prisma.categoria.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Categorias and only return the `codCategoria`
     * const categoriaWithCodCategoriaOnly = await prisma.categoria.createManyAndReturn({
     *   select: { codCategoria: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CategoriaCreateManyAndReturnArgs>(args?: SelectSubset<T, CategoriaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Categoria.
     * @param {CategoriaDeleteArgs} args - Arguments to delete one Categoria.
     * @example
     * // Delete one Categoria
     * const Categoria = await prisma.categoria.delete({
     *   where: {
     *     // ... filter to delete one Categoria
     *   }
     * })
     * 
     */
    delete<T extends CategoriaDeleteArgs>(args: SelectSubset<T, CategoriaDeleteArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Categoria.
     * @param {CategoriaUpdateArgs} args - Arguments to update one Categoria.
     * @example
     * // Update one Categoria
     * const categoria = await prisma.categoria.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CategoriaUpdateArgs>(args: SelectSubset<T, CategoriaUpdateArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Categorias.
     * @param {CategoriaDeleteManyArgs} args - Arguments to filter Categorias to delete.
     * @example
     * // Delete a few Categorias
     * const { count } = await prisma.categoria.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CategoriaDeleteManyArgs>(args?: SelectSubset<T, CategoriaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categorias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Categorias
     * const categoria = await prisma.categoria.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CategoriaUpdateManyArgs>(args: SelectSubset<T, CategoriaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categorias and returns the data updated in the database.
     * @param {CategoriaUpdateManyAndReturnArgs} args - Arguments to update many Categorias.
     * @example
     * // Update many Categorias
     * const categoria = await prisma.categoria.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Categorias and only return the `codCategoria`
     * const categoriaWithCodCategoriaOnly = await prisma.categoria.updateManyAndReturn({
     *   select: { codCategoria: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CategoriaUpdateManyAndReturnArgs>(args: SelectSubset<T, CategoriaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Categoria.
     * @param {CategoriaUpsertArgs} args - Arguments to update or create a Categoria.
     * @example
     * // Update or create a Categoria
     * const categoria = await prisma.categoria.upsert({
     *   create: {
     *     // ... data to create a Categoria
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Categoria we want to update
     *   }
     * })
     */
    upsert<T extends CategoriaUpsertArgs>(args: SelectSubset<T, CategoriaUpsertArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Categorias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaCountArgs} args - Arguments to filter Categorias to count.
     * @example
     * // Count the number of Categorias
     * const count = await prisma.categoria.count({
     *   where: {
     *     // ... the filter for the Categorias we want to count
     *   }
     * })
    **/
    count<T extends CategoriaCountArgs>(
      args?: Subset<T, CategoriaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoriaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Categoria.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoriaAggregateArgs>(args: Subset<T, CategoriaAggregateArgs>): Prisma.PrismaPromise<GetCategoriaAggregateType<T>>

    /**
     * Group by Categoria.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CategoriaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CategoriaGroupByArgs['orderBy'] }
        : { orderBy?: CategoriaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CategoriaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoriaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Categoria model
   */
  readonly fields: CategoriaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Categoria.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CategoriaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    articulos<T extends Categoria$articulosArgs<ExtArgs> = {}>(args?: Subset<T, Categoria$articulosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArticuloPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Categoria model
   */
  interface CategoriaFieldRefs {
    readonly codCategoria: FieldRef<"Categoria", 'Int'>
    readonly nombreCategoria: FieldRef<"Categoria", 'String'>
    readonly descripcion: FieldRef<"Categoria", 'String'>
    readonly fechaBajaCategoria: FieldRef<"Categoria", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Categoria findUnique
   */
  export type CategoriaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * Filter, which Categoria to fetch.
     */
    where: CategoriaWhereUniqueInput
  }

  /**
   * Categoria findUniqueOrThrow
   */
  export type CategoriaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * Filter, which Categoria to fetch.
     */
    where: CategoriaWhereUniqueInput
  }

  /**
   * Categoria findFirst
   */
  export type CategoriaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * Filter, which Categoria to fetch.
     */
    where?: CategoriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categorias to fetch.
     */
    orderBy?: CategoriaOrderByWithRelationInput | CategoriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categorias.
     */
    cursor?: CategoriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categorias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categorias.
     */
    distinct?: CategoriaScalarFieldEnum | CategoriaScalarFieldEnum[]
  }

  /**
   * Categoria findFirstOrThrow
   */
  export type CategoriaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * Filter, which Categoria to fetch.
     */
    where?: CategoriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categorias to fetch.
     */
    orderBy?: CategoriaOrderByWithRelationInput | CategoriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categorias.
     */
    cursor?: CategoriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categorias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categorias.
     */
    distinct?: CategoriaScalarFieldEnum | CategoriaScalarFieldEnum[]
  }

  /**
   * Categoria findMany
   */
  export type CategoriaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * Filter, which Categorias to fetch.
     */
    where?: CategoriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categorias to fetch.
     */
    orderBy?: CategoriaOrderByWithRelationInput | CategoriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Categorias.
     */
    cursor?: CategoriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categorias.
     */
    skip?: number
    distinct?: CategoriaScalarFieldEnum | CategoriaScalarFieldEnum[]
  }

  /**
   * Categoria create
   */
  export type CategoriaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * The data needed to create a Categoria.
     */
    data: XOR<CategoriaCreateInput, CategoriaUncheckedCreateInput>
  }

  /**
   * Categoria createMany
   */
  export type CategoriaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Categorias.
     */
    data: CategoriaCreateManyInput | CategoriaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Categoria createManyAndReturn
   */
  export type CategoriaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * The data used to create many Categorias.
     */
    data: CategoriaCreateManyInput | CategoriaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Categoria update
   */
  export type CategoriaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * The data needed to update a Categoria.
     */
    data: XOR<CategoriaUpdateInput, CategoriaUncheckedUpdateInput>
    /**
     * Choose, which Categoria to update.
     */
    where: CategoriaWhereUniqueInput
  }

  /**
   * Categoria updateMany
   */
  export type CategoriaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Categorias.
     */
    data: XOR<CategoriaUpdateManyMutationInput, CategoriaUncheckedUpdateManyInput>
    /**
     * Filter which Categorias to update
     */
    where?: CategoriaWhereInput
    /**
     * Limit how many Categorias to update.
     */
    limit?: number
  }

  /**
   * Categoria updateManyAndReturn
   */
  export type CategoriaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * The data used to update Categorias.
     */
    data: XOR<CategoriaUpdateManyMutationInput, CategoriaUncheckedUpdateManyInput>
    /**
     * Filter which Categorias to update
     */
    where?: CategoriaWhereInput
    /**
     * Limit how many Categorias to update.
     */
    limit?: number
  }

  /**
   * Categoria upsert
   */
  export type CategoriaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * The filter to search for the Categoria to update in case it exists.
     */
    where: CategoriaWhereUniqueInput
    /**
     * In case the Categoria found by the `where` argument doesn't exist, create a new Categoria with this data.
     */
    create: XOR<CategoriaCreateInput, CategoriaUncheckedCreateInput>
    /**
     * In case the Categoria was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CategoriaUpdateInput, CategoriaUncheckedUpdateInput>
  }

  /**
   * Categoria delete
   */
  export type CategoriaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * Filter which Categoria to delete.
     */
    where: CategoriaWhereUniqueInput
  }

  /**
   * Categoria deleteMany
   */
  export type CategoriaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Categorias to delete
     */
    where?: CategoriaWhereInput
    /**
     * Limit how many Categorias to delete.
     */
    limit?: number
  }

  /**
   * Categoria.articulos
   */
  export type Categoria$articulosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Articulo
     */
    select?: ArticuloSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Articulo
     */
    omit?: ArticuloOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticuloInclude<ExtArgs> | null
    where?: ArticuloWhereInput
    orderBy?: ArticuloOrderByWithRelationInput | ArticuloOrderByWithRelationInput[]
    cursor?: ArticuloWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ArticuloScalarFieldEnum | ArticuloScalarFieldEnum[]
  }

  /**
   * Categoria without action
   */
  export type CategoriaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
  }


  /**
   * Model ArticuloPedido
   */

  export type AggregateArticuloPedido = {
    _count: ArticuloPedidoCountAggregateOutputType | null
    _avg: ArticuloPedidoAvgAggregateOutputType | null
    _sum: ArticuloPedidoSumAggregateOutputType | null
    _min: ArticuloPedidoMinAggregateOutputType | null
    _max: ArticuloPedidoMaxAggregateOutputType | null
  }

  export type ArticuloPedidoAvgAggregateOutputType = {
    cantidadArtPed: number | null
    nroRenglon: number | null
    montoArticuloPe: number | null
    PrecioUnitario: number | null
    codPedido: number | null
    codCarritoCompra: number | null
    codArticulo: number | null
  }

  export type ArticuloPedidoSumAggregateOutputType = {
    cantidadArtPed: number | null
    nroRenglon: number | null
    montoArticuloPe: number | null
    PrecioUnitario: number | null
    codPedido: number | null
    codCarritoCompra: number | null
    codArticulo: number | null
  }

  export type ArticuloPedidoMinAggregateOutputType = {
    cantidadArtPed: number | null
    nroRenglon: number | null
    montoArticuloPe: number | null
    PrecioUnitario: number | null
    codPedido: number | null
    codCarritoCompra: number | null
    codArticulo: number | null
  }

  export type ArticuloPedidoMaxAggregateOutputType = {
    cantidadArtPed: number | null
    nroRenglon: number | null
    montoArticuloPe: number | null
    PrecioUnitario: number | null
    codPedido: number | null
    codCarritoCompra: number | null
    codArticulo: number | null
  }

  export type ArticuloPedidoCountAggregateOutputType = {
    cantidadArtPed: number
    nroRenglon: number
    montoArticuloPe: number
    PrecioUnitario: number
    codPedido: number
    codCarritoCompra: number
    codArticulo: number
    _all: number
  }


  export type ArticuloPedidoAvgAggregateInputType = {
    cantidadArtPed?: true
    nroRenglon?: true
    montoArticuloPe?: true
    PrecioUnitario?: true
    codPedido?: true
    codCarritoCompra?: true
    codArticulo?: true
  }

  export type ArticuloPedidoSumAggregateInputType = {
    cantidadArtPed?: true
    nroRenglon?: true
    montoArticuloPe?: true
    PrecioUnitario?: true
    codPedido?: true
    codCarritoCompra?: true
    codArticulo?: true
  }

  export type ArticuloPedidoMinAggregateInputType = {
    cantidadArtPed?: true
    nroRenglon?: true
    montoArticuloPe?: true
    PrecioUnitario?: true
    codPedido?: true
    codCarritoCompra?: true
    codArticulo?: true
  }

  export type ArticuloPedidoMaxAggregateInputType = {
    cantidadArtPed?: true
    nroRenglon?: true
    montoArticuloPe?: true
    PrecioUnitario?: true
    codPedido?: true
    codCarritoCompra?: true
    codArticulo?: true
  }

  export type ArticuloPedidoCountAggregateInputType = {
    cantidadArtPed?: true
    nroRenglon?: true
    montoArticuloPe?: true
    PrecioUnitario?: true
    codPedido?: true
    codCarritoCompra?: true
    codArticulo?: true
    _all?: true
  }

  export type ArticuloPedidoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ArticuloPedido to aggregate.
     */
    where?: ArticuloPedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ArticuloPedidos to fetch.
     */
    orderBy?: ArticuloPedidoOrderByWithRelationInput | ArticuloPedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ArticuloPedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ArticuloPedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ArticuloPedidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ArticuloPedidos
    **/
    _count?: true | ArticuloPedidoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ArticuloPedidoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ArticuloPedidoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ArticuloPedidoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ArticuloPedidoMaxAggregateInputType
  }

  export type GetArticuloPedidoAggregateType<T extends ArticuloPedidoAggregateArgs> = {
        [P in keyof T & keyof AggregateArticuloPedido]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateArticuloPedido[P]>
      : GetScalarType<T[P], AggregateArticuloPedido[P]>
  }




  export type ArticuloPedidoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ArticuloPedidoWhereInput
    orderBy?: ArticuloPedidoOrderByWithAggregationInput | ArticuloPedidoOrderByWithAggregationInput[]
    by: ArticuloPedidoScalarFieldEnum[] | ArticuloPedidoScalarFieldEnum
    having?: ArticuloPedidoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ArticuloPedidoCountAggregateInputType | true
    _avg?: ArticuloPedidoAvgAggregateInputType
    _sum?: ArticuloPedidoSumAggregateInputType
    _min?: ArticuloPedidoMinAggregateInputType
    _max?: ArticuloPedidoMaxAggregateInputType
  }

  export type ArticuloPedidoGroupByOutputType = {
    cantidadArtPed: number
    nroRenglon: number
    montoArticuloPe: number
    PrecioUnitario: number
    codPedido: number
    codCarritoCompra: number
    codArticulo: number
    _count: ArticuloPedidoCountAggregateOutputType | null
    _avg: ArticuloPedidoAvgAggregateOutputType | null
    _sum: ArticuloPedidoSumAggregateOutputType | null
    _min: ArticuloPedidoMinAggregateOutputType | null
    _max: ArticuloPedidoMaxAggregateOutputType | null
  }

  type GetArticuloPedidoGroupByPayload<T extends ArticuloPedidoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ArticuloPedidoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ArticuloPedidoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ArticuloPedidoGroupByOutputType[P]>
            : GetScalarType<T[P], ArticuloPedidoGroupByOutputType[P]>
        }
      >
    >


  export type ArticuloPedidoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    cantidadArtPed?: boolean
    nroRenglon?: boolean
    montoArticuloPe?: boolean
    PrecioUnitario?: boolean
    codPedido?: boolean
    codCarritoCompra?: boolean
    codArticulo?: boolean
    pedido?: boolean | PedidoDefaultArgs<ExtArgs>
    carritoCompra?: boolean | CarritoComprasDefaultArgs<ExtArgs>
    articulo?: boolean | ArticuloDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["articuloPedido"]>

  export type ArticuloPedidoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    cantidadArtPed?: boolean
    nroRenglon?: boolean
    montoArticuloPe?: boolean
    PrecioUnitario?: boolean
    codPedido?: boolean
    codCarritoCompra?: boolean
    codArticulo?: boolean
    pedido?: boolean | PedidoDefaultArgs<ExtArgs>
    carritoCompra?: boolean | CarritoComprasDefaultArgs<ExtArgs>
    articulo?: boolean | ArticuloDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["articuloPedido"]>

  export type ArticuloPedidoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    cantidadArtPed?: boolean
    nroRenglon?: boolean
    montoArticuloPe?: boolean
    PrecioUnitario?: boolean
    codPedido?: boolean
    codCarritoCompra?: boolean
    codArticulo?: boolean
    pedido?: boolean | PedidoDefaultArgs<ExtArgs>
    carritoCompra?: boolean | CarritoComprasDefaultArgs<ExtArgs>
    articulo?: boolean | ArticuloDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["articuloPedido"]>

  export type ArticuloPedidoSelectScalar = {
    cantidadArtPed?: boolean
    nroRenglon?: boolean
    montoArticuloPe?: boolean
    PrecioUnitario?: boolean
    codPedido?: boolean
    codCarritoCompra?: boolean
    codArticulo?: boolean
  }

  export type ArticuloPedidoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"cantidadArtPed" | "nroRenglon" | "montoArticuloPe" | "PrecioUnitario" | "codPedido" | "codCarritoCompra" | "codArticulo", ExtArgs["result"]["articuloPedido"]>
  export type ArticuloPedidoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pedido?: boolean | PedidoDefaultArgs<ExtArgs>
    carritoCompra?: boolean | CarritoComprasDefaultArgs<ExtArgs>
    articulo?: boolean | ArticuloDefaultArgs<ExtArgs>
  }
  export type ArticuloPedidoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pedido?: boolean | PedidoDefaultArgs<ExtArgs>
    carritoCompra?: boolean | CarritoComprasDefaultArgs<ExtArgs>
    articulo?: boolean | ArticuloDefaultArgs<ExtArgs>
  }
  export type ArticuloPedidoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pedido?: boolean | PedidoDefaultArgs<ExtArgs>
    carritoCompra?: boolean | CarritoComprasDefaultArgs<ExtArgs>
    articulo?: boolean | ArticuloDefaultArgs<ExtArgs>
  }

  export type $ArticuloPedidoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ArticuloPedido"
    objects: {
      pedido: Prisma.$PedidoPayload<ExtArgs>
      carritoCompra: Prisma.$CarritoComprasPayload<ExtArgs>
      articulo: Prisma.$ArticuloPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      cantidadArtPed: number
      nroRenglon: number
      montoArticuloPe: number
      PrecioUnitario: number
      codPedido: number
      codCarritoCompra: number
      codArticulo: number
    }, ExtArgs["result"]["articuloPedido"]>
    composites: {}
  }

  type ArticuloPedidoGetPayload<S extends boolean | null | undefined | ArticuloPedidoDefaultArgs> = $Result.GetResult<Prisma.$ArticuloPedidoPayload, S>

  type ArticuloPedidoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ArticuloPedidoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ArticuloPedidoCountAggregateInputType | true
    }

  export interface ArticuloPedidoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ArticuloPedido'], meta: { name: 'ArticuloPedido' } }
    /**
     * Find zero or one ArticuloPedido that matches the filter.
     * @param {ArticuloPedidoFindUniqueArgs} args - Arguments to find a ArticuloPedido
     * @example
     * // Get one ArticuloPedido
     * const articuloPedido = await prisma.articuloPedido.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ArticuloPedidoFindUniqueArgs>(args: SelectSubset<T, ArticuloPedidoFindUniqueArgs<ExtArgs>>): Prisma__ArticuloPedidoClient<$Result.GetResult<Prisma.$ArticuloPedidoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ArticuloPedido that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ArticuloPedidoFindUniqueOrThrowArgs} args - Arguments to find a ArticuloPedido
     * @example
     * // Get one ArticuloPedido
     * const articuloPedido = await prisma.articuloPedido.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ArticuloPedidoFindUniqueOrThrowArgs>(args: SelectSubset<T, ArticuloPedidoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ArticuloPedidoClient<$Result.GetResult<Prisma.$ArticuloPedidoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ArticuloPedido that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArticuloPedidoFindFirstArgs} args - Arguments to find a ArticuloPedido
     * @example
     * // Get one ArticuloPedido
     * const articuloPedido = await prisma.articuloPedido.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ArticuloPedidoFindFirstArgs>(args?: SelectSubset<T, ArticuloPedidoFindFirstArgs<ExtArgs>>): Prisma__ArticuloPedidoClient<$Result.GetResult<Prisma.$ArticuloPedidoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ArticuloPedido that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArticuloPedidoFindFirstOrThrowArgs} args - Arguments to find a ArticuloPedido
     * @example
     * // Get one ArticuloPedido
     * const articuloPedido = await prisma.articuloPedido.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ArticuloPedidoFindFirstOrThrowArgs>(args?: SelectSubset<T, ArticuloPedidoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ArticuloPedidoClient<$Result.GetResult<Prisma.$ArticuloPedidoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ArticuloPedidos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArticuloPedidoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ArticuloPedidos
     * const articuloPedidos = await prisma.articuloPedido.findMany()
     * 
     * // Get first 10 ArticuloPedidos
     * const articuloPedidos = await prisma.articuloPedido.findMany({ take: 10 })
     * 
     * // Only select the `cantidadArtPed`
     * const articuloPedidoWithCantidadArtPedOnly = await prisma.articuloPedido.findMany({ select: { cantidadArtPed: true } })
     * 
     */
    findMany<T extends ArticuloPedidoFindManyArgs>(args?: SelectSubset<T, ArticuloPedidoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArticuloPedidoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ArticuloPedido.
     * @param {ArticuloPedidoCreateArgs} args - Arguments to create a ArticuloPedido.
     * @example
     * // Create one ArticuloPedido
     * const ArticuloPedido = await prisma.articuloPedido.create({
     *   data: {
     *     // ... data to create a ArticuloPedido
     *   }
     * })
     * 
     */
    create<T extends ArticuloPedidoCreateArgs>(args: SelectSubset<T, ArticuloPedidoCreateArgs<ExtArgs>>): Prisma__ArticuloPedidoClient<$Result.GetResult<Prisma.$ArticuloPedidoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ArticuloPedidos.
     * @param {ArticuloPedidoCreateManyArgs} args - Arguments to create many ArticuloPedidos.
     * @example
     * // Create many ArticuloPedidos
     * const articuloPedido = await prisma.articuloPedido.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ArticuloPedidoCreateManyArgs>(args?: SelectSubset<T, ArticuloPedidoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ArticuloPedidos and returns the data saved in the database.
     * @param {ArticuloPedidoCreateManyAndReturnArgs} args - Arguments to create many ArticuloPedidos.
     * @example
     * // Create many ArticuloPedidos
     * const articuloPedido = await prisma.articuloPedido.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ArticuloPedidos and only return the `cantidadArtPed`
     * const articuloPedidoWithCantidadArtPedOnly = await prisma.articuloPedido.createManyAndReturn({
     *   select: { cantidadArtPed: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ArticuloPedidoCreateManyAndReturnArgs>(args?: SelectSubset<T, ArticuloPedidoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArticuloPedidoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ArticuloPedido.
     * @param {ArticuloPedidoDeleteArgs} args - Arguments to delete one ArticuloPedido.
     * @example
     * // Delete one ArticuloPedido
     * const ArticuloPedido = await prisma.articuloPedido.delete({
     *   where: {
     *     // ... filter to delete one ArticuloPedido
     *   }
     * })
     * 
     */
    delete<T extends ArticuloPedidoDeleteArgs>(args: SelectSubset<T, ArticuloPedidoDeleteArgs<ExtArgs>>): Prisma__ArticuloPedidoClient<$Result.GetResult<Prisma.$ArticuloPedidoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ArticuloPedido.
     * @param {ArticuloPedidoUpdateArgs} args - Arguments to update one ArticuloPedido.
     * @example
     * // Update one ArticuloPedido
     * const articuloPedido = await prisma.articuloPedido.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ArticuloPedidoUpdateArgs>(args: SelectSubset<T, ArticuloPedidoUpdateArgs<ExtArgs>>): Prisma__ArticuloPedidoClient<$Result.GetResult<Prisma.$ArticuloPedidoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ArticuloPedidos.
     * @param {ArticuloPedidoDeleteManyArgs} args - Arguments to filter ArticuloPedidos to delete.
     * @example
     * // Delete a few ArticuloPedidos
     * const { count } = await prisma.articuloPedido.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ArticuloPedidoDeleteManyArgs>(args?: SelectSubset<T, ArticuloPedidoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ArticuloPedidos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArticuloPedidoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ArticuloPedidos
     * const articuloPedido = await prisma.articuloPedido.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ArticuloPedidoUpdateManyArgs>(args: SelectSubset<T, ArticuloPedidoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ArticuloPedidos and returns the data updated in the database.
     * @param {ArticuloPedidoUpdateManyAndReturnArgs} args - Arguments to update many ArticuloPedidos.
     * @example
     * // Update many ArticuloPedidos
     * const articuloPedido = await prisma.articuloPedido.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ArticuloPedidos and only return the `cantidadArtPed`
     * const articuloPedidoWithCantidadArtPedOnly = await prisma.articuloPedido.updateManyAndReturn({
     *   select: { cantidadArtPed: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ArticuloPedidoUpdateManyAndReturnArgs>(args: SelectSubset<T, ArticuloPedidoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArticuloPedidoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ArticuloPedido.
     * @param {ArticuloPedidoUpsertArgs} args - Arguments to update or create a ArticuloPedido.
     * @example
     * // Update or create a ArticuloPedido
     * const articuloPedido = await prisma.articuloPedido.upsert({
     *   create: {
     *     // ... data to create a ArticuloPedido
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ArticuloPedido we want to update
     *   }
     * })
     */
    upsert<T extends ArticuloPedidoUpsertArgs>(args: SelectSubset<T, ArticuloPedidoUpsertArgs<ExtArgs>>): Prisma__ArticuloPedidoClient<$Result.GetResult<Prisma.$ArticuloPedidoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ArticuloPedidos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArticuloPedidoCountArgs} args - Arguments to filter ArticuloPedidos to count.
     * @example
     * // Count the number of ArticuloPedidos
     * const count = await prisma.articuloPedido.count({
     *   where: {
     *     // ... the filter for the ArticuloPedidos we want to count
     *   }
     * })
    **/
    count<T extends ArticuloPedidoCountArgs>(
      args?: Subset<T, ArticuloPedidoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ArticuloPedidoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ArticuloPedido.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArticuloPedidoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ArticuloPedidoAggregateArgs>(args: Subset<T, ArticuloPedidoAggregateArgs>): Prisma.PrismaPromise<GetArticuloPedidoAggregateType<T>>

    /**
     * Group by ArticuloPedido.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArticuloPedidoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ArticuloPedidoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ArticuloPedidoGroupByArgs['orderBy'] }
        : { orderBy?: ArticuloPedidoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ArticuloPedidoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetArticuloPedidoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ArticuloPedido model
   */
  readonly fields: ArticuloPedidoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ArticuloPedido.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ArticuloPedidoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    pedido<T extends PedidoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PedidoDefaultArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    carritoCompra<T extends CarritoComprasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CarritoComprasDefaultArgs<ExtArgs>>): Prisma__CarritoComprasClient<$Result.GetResult<Prisma.$CarritoComprasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    articulo<T extends ArticuloDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ArticuloDefaultArgs<ExtArgs>>): Prisma__ArticuloClient<$Result.GetResult<Prisma.$ArticuloPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ArticuloPedido model
   */
  interface ArticuloPedidoFieldRefs {
    readonly cantidadArtPed: FieldRef<"ArticuloPedido", 'Int'>
    readonly nroRenglon: FieldRef<"ArticuloPedido", 'Int'>
    readonly montoArticuloPe: FieldRef<"ArticuloPedido", 'Float'>
    readonly PrecioUnitario: FieldRef<"ArticuloPedido", 'Float'>
    readonly codPedido: FieldRef<"ArticuloPedido", 'Int'>
    readonly codCarritoCompra: FieldRef<"ArticuloPedido", 'Int'>
    readonly codArticulo: FieldRef<"ArticuloPedido", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * ArticuloPedido findUnique
   */
  export type ArticuloPedidoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticuloPedido
     */
    select?: ArticuloPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArticuloPedido
     */
    omit?: ArticuloPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticuloPedidoInclude<ExtArgs> | null
    /**
     * Filter, which ArticuloPedido to fetch.
     */
    where: ArticuloPedidoWhereUniqueInput
  }

  /**
   * ArticuloPedido findUniqueOrThrow
   */
  export type ArticuloPedidoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticuloPedido
     */
    select?: ArticuloPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArticuloPedido
     */
    omit?: ArticuloPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticuloPedidoInclude<ExtArgs> | null
    /**
     * Filter, which ArticuloPedido to fetch.
     */
    where: ArticuloPedidoWhereUniqueInput
  }

  /**
   * ArticuloPedido findFirst
   */
  export type ArticuloPedidoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticuloPedido
     */
    select?: ArticuloPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArticuloPedido
     */
    omit?: ArticuloPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticuloPedidoInclude<ExtArgs> | null
    /**
     * Filter, which ArticuloPedido to fetch.
     */
    where?: ArticuloPedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ArticuloPedidos to fetch.
     */
    orderBy?: ArticuloPedidoOrderByWithRelationInput | ArticuloPedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ArticuloPedidos.
     */
    cursor?: ArticuloPedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ArticuloPedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ArticuloPedidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ArticuloPedidos.
     */
    distinct?: ArticuloPedidoScalarFieldEnum | ArticuloPedidoScalarFieldEnum[]
  }

  /**
   * ArticuloPedido findFirstOrThrow
   */
  export type ArticuloPedidoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticuloPedido
     */
    select?: ArticuloPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArticuloPedido
     */
    omit?: ArticuloPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticuloPedidoInclude<ExtArgs> | null
    /**
     * Filter, which ArticuloPedido to fetch.
     */
    where?: ArticuloPedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ArticuloPedidos to fetch.
     */
    orderBy?: ArticuloPedidoOrderByWithRelationInput | ArticuloPedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ArticuloPedidos.
     */
    cursor?: ArticuloPedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ArticuloPedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ArticuloPedidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ArticuloPedidos.
     */
    distinct?: ArticuloPedidoScalarFieldEnum | ArticuloPedidoScalarFieldEnum[]
  }

  /**
   * ArticuloPedido findMany
   */
  export type ArticuloPedidoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticuloPedido
     */
    select?: ArticuloPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArticuloPedido
     */
    omit?: ArticuloPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticuloPedidoInclude<ExtArgs> | null
    /**
     * Filter, which ArticuloPedidos to fetch.
     */
    where?: ArticuloPedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ArticuloPedidos to fetch.
     */
    orderBy?: ArticuloPedidoOrderByWithRelationInput | ArticuloPedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ArticuloPedidos.
     */
    cursor?: ArticuloPedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ArticuloPedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ArticuloPedidos.
     */
    skip?: number
    distinct?: ArticuloPedidoScalarFieldEnum | ArticuloPedidoScalarFieldEnum[]
  }

  /**
   * ArticuloPedido create
   */
  export type ArticuloPedidoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticuloPedido
     */
    select?: ArticuloPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArticuloPedido
     */
    omit?: ArticuloPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticuloPedidoInclude<ExtArgs> | null
    /**
     * The data needed to create a ArticuloPedido.
     */
    data: XOR<ArticuloPedidoCreateInput, ArticuloPedidoUncheckedCreateInput>
  }

  /**
   * ArticuloPedido createMany
   */
  export type ArticuloPedidoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ArticuloPedidos.
     */
    data: ArticuloPedidoCreateManyInput | ArticuloPedidoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ArticuloPedido createManyAndReturn
   */
  export type ArticuloPedidoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticuloPedido
     */
    select?: ArticuloPedidoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ArticuloPedido
     */
    omit?: ArticuloPedidoOmit<ExtArgs> | null
    /**
     * The data used to create many ArticuloPedidos.
     */
    data: ArticuloPedidoCreateManyInput | ArticuloPedidoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticuloPedidoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ArticuloPedido update
   */
  export type ArticuloPedidoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticuloPedido
     */
    select?: ArticuloPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArticuloPedido
     */
    omit?: ArticuloPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticuloPedidoInclude<ExtArgs> | null
    /**
     * The data needed to update a ArticuloPedido.
     */
    data: XOR<ArticuloPedidoUpdateInput, ArticuloPedidoUncheckedUpdateInput>
    /**
     * Choose, which ArticuloPedido to update.
     */
    where: ArticuloPedidoWhereUniqueInput
  }

  /**
   * ArticuloPedido updateMany
   */
  export type ArticuloPedidoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ArticuloPedidos.
     */
    data: XOR<ArticuloPedidoUpdateManyMutationInput, ArticuloPedidoUncheckedUpdateManyInput>
    /**
     * Filter which ArticuloPedidos to update
     */
    where?: ArticuloPedidoWhereInput
    /**
     * Limit how many ArticuloPedidos to update.
     */
    limit?: number
  }

  /**
   * ArticuloPedido updateManyAndReturn
   */
  export type ArticuloPedidoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticuloPedido
     */
    select?: ArticuloPedidoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ArticuloPedido
     */
    omit?: ArticuloPedidoOmit<ExtArgs> | null
    /**
     * The data used to update ArticuloPedidos.
     */
    data: XOR<ArticuloPedidoUpdateManyMutationInput, ArticuloPedidoUncheckedUpdateManyInput>
    /**
     * Filter which ArticuloPedidos to update
     */
    where?: ArticuloPedidoWhereInput
    /**
     * Limit how many ArticuloPedidos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticuloPedidoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ArticuloPedido upsert
   */
  export type ArticuloPedidoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticuloPedido
     */
    select?: ArticuloPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArticuloPedido
     */
    omit?: ArticuloPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticuloPedidoInclude<ExtArgs> | null
    /**
     * The filter to search for the ArticuloPedido to update in case it exists.
     */
    where: ArticuloPedidoWhereUniqueInput
    /**
     * In case the ArticuloPedido found by the `where` argument doesn't exist, create a new ArticuloPedido with this data.
     */
    create: XOR<ArticuloPedidoCreateInput, ArticuloPedidoUncheckedCreateInput>
    /**
     * In case the ArticuloPedido was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ArticuloPedidoUpdateInput, ArticuloPedidoUncheckedUpdateInput>
  }

  /**
   * ArticuloPedido delete
   */
  export type ArticuloPedidoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticuloPedido
     */
    select?: ArticuloPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArticuloPedido
     */
    omit?: ArticuloPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticuloPedidoInclude<ExtArgs> | null
    /**
     * Filter which ArticuloPedido to delete.
     */
    where: ArticuloPedidoWhereUniqueInput
  }

  /**
   * ArticuloPedido deleteMany
   */
  export type ArticuloPedidoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ArticuloPedidos to delete
     */
    where?: ArticuloPedidoWhereInput
    /**
     * Limit how many ArticuloPedidos to delete.
     */
    limit?: number
  }

  /**
   * ArticuloPedido without action
   */
  export type ArticuloPedidoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticuloPedido
     */
    select?: ArticuloPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArticuloPedido
     */
    omit?: ArticuloPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticuloPedidoInclude<ExtArgs> | null
  }


  /**
   * Model EnvioPedido
   */

  export type AggregateEnvioPedido = {
    _count: EnvioPedidoCountAggregateOutputType | null
    _avg: EnvioPedidoAvgAggregateOutputType | null
    _sum: EnvioPedidoSumAggregateOutputType | null
    _min: EnvioPedidoMinAggregateOutputType | null
    _max: EnvioPedidoMaxAggregateOutputType | null
  }

  export type EnvioPedidoAvgAggregateOutputType = {
    codEnvio: number | null
    costoEnvio: number | null
    codEstadoEnvio: number | null
    codigoDireccion: number | null
  }

  export type EnvioPedidoSumAggregateOutputType = {
    codEnvio: number | null
    costoEnvio: number | null
    codEstadoEnvio: number | null
    codigoDireccion: number | null
  }

  export type EnvioPedidoMinAggregateOutputType = {
    codEnvio: number | null
    empresaEnvio: string | null
    costoEnvio: number | null
    fechaSalida: Date | null
    fechaEntregaEstimada: Date | null
    fechaEntregaBaja: Date | null
    codEstadoEnvio: number | null
    codigoDireccion: number | null
  }

  export type EnvioPedidoMaxAggregateOutputType = {
    codEnvio: number | null
    empresaEnvio: string | null
    costoEnvio: number | null
    fechaSalida: Date | null
    fechaEntregaEstimada: Date | null
    fechaEntregaBaja: Date | null
    codEstadoEnvio: number | null
    codigoDireccion: number | null
  }

  export type EnvioPedidoCountAggregateOutputType = {
    codEnvio: number
    empresaEnvio: number
    costoEnvio: number
    fechaSalida: number
    fechaEntregaEstimada: number
    fechaEntregaBaja: number
    codEstadoEnvio: number
    codigoDireccion: number
    _all: number
  }


  export type EnvioPedidoAvgAggregateInputType = {
    codEnvio?: true
    costoEnvio?: true
    codEstadoEnvio?: true
    codigoDireccion?: true
  }

  export type EnvioPedidoSumAggregateInputType = {
    codEnvio?: true
    costoEnvio?: true
    codEstadoEnvio?: true
    codigoDireccion?: true
  }

  export type EnvioPedidoMinAggregateInputType = {
    codEnvio?: true
    empresaEnvio?: true
    costoEnvio?: true
    fechaSalida?: true
    fechaEntregaEstimada?: true
    fechaEntregaBaja?: true
    codEstadoEnvio?: true
    codigoDireccion?: true
  }

  export type EnvioPedidoMaxAggregateInputType = {
    codEnvio?: true
    empresaEnvio?: true
    costoEnvio?: true
    fechaSalida?: true
    fechaEntregaEstimada?: true
    fechaEntregaBaja?: true
    codEstadoEnvio?: true
    codigoDireccion?: true
  }

  export type EnvioPedidoCountAggregateInputType = {
    codEnvio?: true
    empresaEnvio?: true
    costoEnvio?: true
    fechaSalida?: true
    fechaEntregaEstimada?: true
    fechaEntregaBaja?: true
    codEstadoEnvio?: true
    codigoDireccion?: true
    _all?: true
  }

  export type EnvioPedidoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EnvioPedido to aggregate.
     */
    where?: EnvioPedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EnvioPedidos to fetch.
     */
    orderBy?: EnvioPedidoOrderByWithRelationInput | EnvioPedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EnvioPedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EnvioPedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EnvioPedidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EnvioPedidos
    **/
    _count?: true | EnvioPedidoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EnvioPedidoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EnvioPedidoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EnvioPedidoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EnvioPedidoMaxAggregateInputType
  }

  export type GetEnvioPedidoAggregateType<T extends EnvioPedidoAggregateArgs> = {
        [P in keyof T & keyof AggregateEnvioPedido]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEnvioPedido[P]>
      : GetScalarType<T[P], AggregateEnvioPedido[P]>
  }




  export type EnvioPedidoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EnvioPedidoWhereInput
    orderBy?: EnvioPedidoOrderByWithAggregationInput | EnvioPedidoOrderByWithAggregationInput[]
    by: EnvioPedidoScalarFieldEnum[] | EnvioPedidoScalarFieldEnum
    having?: EnvioPedidoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EnvioPedidoCountAggregateInputType | true
    _avg?: EnvioPedidoAvgAggregateInputType
    _sum?: EnvioPedidoSumAggregateInputType
    _min?: EnvioPedidoMinAggregateInputType
    _max?: EnvioPedidoMaxAggregateInputType
  }

  export type EnvioPedidoGroupByOutputType = {
    codEnvio: number
    empresaEnvio: string
    costoEnvio: number
    fechaSalida: Date | null
    fechaEntregaEstimada: Date
    fechaEntregaBaja: Date | null
    codEstadoEnvio: number
    codigoDireccion: number
    _count: EnvioPedidoCountAggregateOutputType | null
    _avg: EnvioPedidoAvgAggregateOutputType | null
    _sum: EnvioPedidoSumAggregateOutputType | null
    _min: EnvioPedidoMinAggregateOutputType | null
    _max: EnvioPedidoMaxAggregateOutputType | null
  }

  type GetEnvioPedidoGroupByPayload<T extends EnvioPedidoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EnvioPedidoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EnvioPedidoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EnvioPedidoGroupByOutputType[P]>
            : GetScalarType<T[P], EnvioPedidoGroupByOutputType[P]>
        }
      >
    >


  export type EnvioPedidoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codEnvio?: boolean
    empresaEnvio?: boolean
    costoEnvio?: boolean
    fechaSalida?: boolean
    fechaEntregaEstimada?: boolean
    fechaEntregaBaja?: boolean
    codEstadoEnvio?: boolean
    codigoDireccion?: boolean
    estadoEnvio?: boolean | EstadoEnvioDefaultArgs<ExtArgs>
    direccion?: boolean | DireccionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["envioPedido"]>

  export type EnvioPedidoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codEnvio?: boolean
    empresaEnvio?: boolean
    costoEnvio?: boolean
    fechaSalida?: boolean
    fechaEntregaEstimada?: boolean
    fechaEntregaBaja?: boolean
    codEstadoEnvio?: boolean
    codigoDireccion?: boolean
    estadoEnvio?: boolean | EstadoEnvioDefaultArgs<ExtArgs>
    direccion?: boolean | DireccionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["envioPedido"]>

  export type EnvioPedidoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codEnvio?: boolean
    empresaEnvio?: boolean
    costoEnvio?: boolean
    fechaSalida?: boolean
    fechaEntregaEstimada?: boolean
    fechaEntregaBaja?: boolean
    codEstadoEnvio?: boolean
    codigoDireccion?: boolean
    estadoEnvio?: boolean | EstadoEnvioDefaultArgs<ExtArgs>
    direccion?: boolean | DireccionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["envioPedido"]>

  export type EnvioPedidoSelectScalar = {
    codEnvio?: boolean
    empresaEnvio?: boolean
    costoEnvio?: boolean
    fechaSalida?: boolean
    fechaEntregaEstimada?: boolean
    fechaEntregaBaja?: boolean
    codEstadoEnvio?: boolean
    codigoDireccion?: boolean
  }

  export type EnvioPedidoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"codEnvio" | "empresaEnvio" | "costoEnvio" | "fechaSalida" | "fechaEntregaEstimada" | "fechaEntregaBaja" | "codEstadoEnvio" | "codigoDireccion", ExtArgs["result"]["envioPedido"]>
  export type EnvioPedidoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estadoEnvio?: boolean | EstadoEnvioDefaultArgs<ExtArgs>
    direccion?: boolean | DireccionDefaultArgs<ExtArgs>
  }
  export type EnvioPedidoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estadoEnvio?: boolean | EstadoEnvioDefaultArgs<ExtArgs>
    direccion?: boolean | DireccionDefaultArgs<ExtArgs>
  }
  export type EnvioPedidoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estadoEnvio?: boolean | EstadoEnvioDefaultArgs<ExtArgs>
    direccion?: boolean | DireccionDefaultArgs<ExtArgs>
  }

  export type $EnvioPedidoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EnvioPedido"
    objects: {
      estadoEnvio: Prisma.$EstadoEnvioPayload<ExtArgs>
      direccion: Prisma.$DireccionPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      codEnvio: number
      empresaEnvio: string
      costoEnvio: number
      fechaSalida: Date | null
      fechaEntregaEstimada: Date
      fechaEntregaBaja: Date | null
      codEstadoEnvio: number
      codigoDireccion: number
    }, ExtArgs["result"]["envioPedido"]>
    composites: {}
  }

  type EnvioPedidoGetPayload<S extends boolean | null | undefined | EnvioPedidoDefaultArgs> = $Result.GetResult<Prisma.$EnvioPedidoPayload, S>

  type EnvioPedidoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EnvioPedidoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EnvioPedidoCountAggregateInputType | true
    }

  export interface EnvioPedidoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EnvioPedido'], meta: { name: 'EnvioPedido' } }
    /**
     * Find zero or one EnvioPedido that matches the filter.
     * @param {EnvioPedidoFindUniqueArgs} args - Arguments to find a EnvioPedido
     * @example
     * // Get one EnvioPedido
     * const envioPedido = await prisma.envioPedido.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EnvioPedidoFindUniqueArgs>(args: SelectSubset<T, EnvioPedidoFindUniqueArgs<ExtArgs>>): Prisma__EnvioPedidoClient<$Result.GetResult<Prisma.$EnvioPedidoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one EnvioPedido that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EnvioPedidoFindUniqueOrThrowArgs} args - Arguments to find a EnvioPedido
     * @example
     * // Get one EnvioPedido
     * const envioPedido = await prisma.envioPedido.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EnvioPedidoFindUniqueOrThrowArgs>(args: SelectSubset<T, EnvioPedidoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EnvioPedidoClient<$Result.GetResult<Prisma.$EnvioPedidoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EnvioPedido that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnvioPedidoFindFirstArgs} args - Arguments to find a EnvioPedido
     * @example
     * // Get one EnvioPedido
     * const envioPedido = await prisma.envioPedido.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EnvioPedidoFindFirstArgs>(args?: SelectSubset<T, EnvioPedidoFindFirstArgs<ExtArgs>>): Prisma__EnvioPedidoClient<$Result.GetResult<Prisma.$EnvioPedidoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EnvioPedido that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnvioPedidoFindFirstOrThrowArgs} args - Arguments to find a EnvioPedido
     * @example
     * // Get one EnvioPedido
     * const envioPedido = await prisma.envioPedido.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EnvioPedidoFindFirstOrThrowArgs>(args?: SelectSubset<T, EnvioPedidoFindFirstOrThrowArgs<ExtArgs>>): Prisma__EnvioPedidoClient<$Result.GetResult<Prisma.$EnvioPedidoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more EnvioPedidos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnvioPedidoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EnvioPedidos
     * const envioPedidos = await prisma.envioPedido.findMany()
     * 
     * // Get first 10 EnvioPedidos
     * const envioPedidos = await prisma.envioPedido.findMany({ take: 10 })
     * 
     * // Only select the `codEnvio`
     * const envioPedidoWithCodEnvioOnly = await prisma.envioPedido.findMany({ select: { codEnvio: true } })
     * 
     */
    findMany<T extends EnvioPedidoFindManyArgs>(args?: SelectSubset<T, EnvioPedidoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EnvioPedidoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a EnvioPedido.
     * @param {EnvioPedidoCreateArgs} args - Arguments to create a EnvioPedido.
     * @example
     * // Create one EnvioPedido
     * const EnvioPedido = await prisma.envioPedido.create({
     *   data: {
     *     // ... data to create a EnvioPedido
     *   }
     * })
     * 
     */
    create<T extends EnvioPedidoCreateArgs>(args: SelectSubset<T, EnvioPedidoCreateArgs<ExtArgs>>): Prisma__EnvioPedidoClient<$Result.GetResult<Prisma.$EnvioPedidoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many EnvioPedidos.
     * @param {EnvioPedidoCreateManyArgs} args - Arguments to create many EnvioPedidos.
     * @example
     * // Create many EnvioPedidos
     * const envioPedido = await prisma.envioPedido.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EnvioPedidoCreateManyArgs>(args?: SelectSubset<T, EnvioPedidoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many EnvioPedidos and returns the data saved in the database.
     * @param {EnvioPedidoCreateManyAndReturnArgs} args - Arguments to create many EnvioPedidos.
     * @example
     * // Create many EnvioPedidos
     * const envioPedido = await prisma.envioPedido.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many EnvioPedidos and only return the `codEnvio`
     * const envioPedidoWithCodEnvioOnly = await prisma.envioPedido.createManyAndReturn({
     *   select: { codEnvio: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EnvioPedidoCreateManyAndReturnArgs>(args?: SelectSubset<T, EnvioPedidoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EnvioPedidoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a EnvioPedido.
     * @param {EnvioPedidoDeleteArgs} args - Arguments to delete one EnvioPedido.
     * @example
     * // Delete one EnvioPedido
     * const EnvioPedido = await prisma.envioPedido.delete({
     *   where: {
     *     // ... filter to delete one EnvioPedido
     *   }
     * })
     * 
     */
    delete<T extends EnvioPedidoDeleteArgs>(args: SelectSubset<T, EnvioPedidoDeleteArgs<ExtArgs>>): Prisma__EnvioPedidoClient<$Result.GetResult<Prisma.$EnvioPedidoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one EnvioPedido.
     * @param {EnvioPedidoUpdateArgs} args - Arguments to update one EnvioPedido.
     * @example
     * // Update one EnvioPedido
     * const envioPedido = await prisma.envioPedido.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EnvioPedidoUpdateArgs>(args: SelectSubset<T, EnvioPedidoUpdateArgs<ExtArgs>>): Prisma__EnvioPedidoClient<$Result.GetResult<Prisma.$EnvioPedidoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more EnvioPedidos.
     * @param {EnvioPedidoDeleteManyArgs} args - Arguments to filter EnvioPedidos to delete.
     * @example
     * // Delete a few EnvioPedidos
     * const { count } = await prisma.envioPedido.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EnvioPedidoDeleteManyArgs>(args?: SelectSubset<T, EnvioPedidoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EnvioPedidos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnvioPedidoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EnvioPedidos
     * const envioPedido = await prisma.envioPedido.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EnvioPedidoUpdateManyArgs>(args: SelectSubset<T, EnvioPedidoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EnvioPedidos and returns the data updated in the database.
     * @param {EnvioPedidoUpdateManyAndReturnArgs} args - Arguments to update many EnvioPedidos.
     * @example
     * // Update many EnvioPedidos
     * const envioPedido = await prisma.envioPedido.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more EnvioPedidos and only return the `codEnvio`
     * const envioPedidoWithCodEnvioOnly = await prisma.envioPedido.updateManyAndReturn({
     *   select: { codEnvio: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EnvioPedidoUpdateManyAndReturnArgs>(args: SelectSubset<T, EnvioPedidoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EnvioPedidoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one EnvioPedido.
     * @param {EnvioPedidoUpsertArgs} args - Arguments to update or create a EnvioPedido.
     * @example
     * // Update or create a EnvioPedido
     * const envioPedido = await prisma.envioPedido.upsert({
     *   create: {
     *     // ... data to create a EnvioPedido
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EnvioPedido we want to update
     *   }
     * })
     */
    upsert<T extends EnvioPedidoUpsertArgs>(args: SelectSubset<T, EnvioPedidoUpsertArgs<ExtArgs>>): Prisma__EnvioPedidoClient<$Result.GetResult<Prisma.$EnvioPedidoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of EnvioPedidos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnvioPedidoCountArgs} args - Arguments to filter EnvioPedidos to count.
     * @example
     * // Count the number of EnvioPedidos
     * const count = await prisma.envioPedido.count({
     *   where: {
     *     // ... the filter for the EnvioPedidos we want to count
     *   }
     * })
    **/
    count<T extends EnvioPedidoCountArgs>(
      args?: Subset<T, EnvioPedidoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EnvioPedidoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EnvioPedido.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnvioPedidoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EnvioPedidoAggregateArgs>(args: Subset<T, EnvioPedidoAggregateArgs>): Prisma.PrismaPromise<GetEnvioPedidoAggregateType<T>>

    /**
     * Group by EnvioPedido.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnvioPedidoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EnvioPedidoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EnvioPedidoGroupByArgs['orderBy'] }
        : { orderBy?: EnvioPedidoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EnvioPedidoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEnvioPedidoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EnvioPedido model
   */
  readonly fields: EnvioPedidoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EnvioPedido.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EnvioPedidoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    estadoEnvio<T extends EstadoEnvioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EstadoEnvioDefaultArgs<ExtArgs>>): Prisma__EstadoEnvioClient<$Result.GetResult<Prisma.$EstadoEnvioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    direccion<T extends DireccionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DireccionDefaultArgs<ExtArgs>>): Prisma__DireccionClient<$Result.GetResult<Prisma.$DireccionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EnvioPedido model
   */
  interface EnvioPedidoFieldRefs {
    readonly codEnvio: FieldRef<"EnvioPedido", 'Int'>
    readonly empresaEnvio: FieldRef<"EnvioPedido", 'String'>
    readonly costoEnvio: FieldRef<"EnvioPedido", 'Float'>
    readonly fechaSalida: FieldRef<"EnvioPedido", 'DateTime'>
    readonly fechaEntregaEstimada: FieldRef<"EnvioPedido", 'DateTime'>
    readonly fechaEntregaBaja: FieldRef<"EnvioPedido", 'DateTime'>
    readonly codEstadoEnvio: FieldRef<"EnvioPedido", 'Int'>
    readonly codigoDireccion: FieldRef<"EnvioPedido", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * EnvioPedido findUnique
   */
  export type EnvioPedidoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnvioPedido
     */
    select?: EnvioPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EnvioPedido
     */
    omit?: EnvioPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnvioPedidoInclude<ExtArgs> | null
    /**
     * Filter, which EnvioPedido to fetch.
     */
    where: EnvioPedidoWhereUniqueInput
  }

  /**
   * EnvioPedido findUniqueOrThrow
   */
  export type EnvioPedidoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnvioPedido
     */
    select?: EnvioPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EnvioPedido
     */
    omit?: EnvioPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnvioPedidoInclude<ExtArgs> | null
    /**
     * Filter, which EnvioPedido to fetch.
     */
    where: EnvioPedidoWhereUniqueInput
  }

  /**
   * EnvioPedido findFirst
   */
  export type EnvioPedidoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnvioPedido
     */
    select?: EnvioPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EnvioPedido
     */
    omit?: EnvioPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnvioPedidoInclude<ExtArgs> | null
    /**
     * Filter, which EnvioPedido to fetch.
     */
    where?: EnvioPedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EnvioPedidos to fetch.
     */
    orderBy?: EnvioPedidoOrderByWithRelationInput | EnvioPedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EnvioPedidos.
     */
    cursor?: EnvioPedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EnvioPedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EnvioPedidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EnvioPedidos.
     */
    distinct?: EnvioPedidoScalarFieldEnum | EnvioPedidoScalarFieldEnum[]
  }

  /**
   * EnvioPedido findFirstOrThrow
   */
  export type EnvioPedidoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnvioPedido
     */
    select?: EnvioPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EnvioPedido
     */
    omit?: EnvioPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnvioPedidoInclude<ExtArgs> | null
    /**
     * Filter, which EnvioPedido to fetch.
     */
    where?: EnvioPedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EnvioPedidos to fetch.
     */
    orderBy?: EnvioPedidoOrderByWithRelationInput | EnvioPedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EnvioPedidos.
     */
    cursor?: EnvioPedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EnvioPedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EnvioPedidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EnvioPedidos.
     */
    distinct?: EnvioPedidoScalarFieldEnum | EnvioPedidoScalarFieldEnum[]
  }

  /**
   * EnvioPedido findMany
   */
  export type EnvioPedidoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnvioPedido
     */
    select?: EnvioPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EnvioPedido
     */
    omit?: EnvioPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnvioPedidoInclude<ExtArgs> | null
    /**
     * Filter, which EnvioPedidos to fetch.
     */
    where?: EnvioPedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EnvioPedidos to fetch.
     */
    orderBy?: EnvioPedidoOrderByWithRelationInput | EnvioPedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EnvioPedidos.
     */
    cursor?: EnvioPedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EnvioPedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EnvioPedidos.
     */
    skip?: number
    distinct?: EnvioPedidoScalarFieldEnum | EnvioPedidoScalarFieldEnum[]
  }

  /**
   * EnvioPedido create
   */
  export type EnvioPedidoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnvioPedido
     */
    select?: EnvioPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EnvioPedido
     */
    omit?: EnvioPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnvioPedidoInclude<ExtArgs> | null
    /**
     * The data needed to create a EnvioPedido.
     */
    data: XOR<EnvioPedidoCreateInput, EnvioPedidoUncheckedCreateInput>
  }

  /**
   * EnvioPedido createMany
   */
  export type EnvioPedidoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EnvioPedidos.
     */
    data: EnvioPedidoCreateManyInput | EnvioPedidoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EnvioPedido createManyAndReturn
   */
  export type EnvioPedidoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnvioPedido
     */
    select?: EnvioPedidoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EnvioPedido
     */
    omit?: EnvioPedidoOmit<ExtArgs> | null
    /**
     * The data used to create many EnvioPedidos.
     */
    data: EnvioPedidoCreateManyInput | EnvioPedidoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnvioPedidoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * EnvioPedido update
   */
  export type EnvioPedidoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnvioPedido
     */
    select?: EnvioPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EnvioPedido
     */
    omit?: EnvioPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnvioPedidoInclude<ExtArgs> | null
    /**
     * The data needed to update a EnvioPedido.
     */
    data: XOR<EnvioPedidoUpdateInput, EnvioPedidoUncheckedUpdateInput>
    /**
     * Choose, which EnvioPedido to update.
     */
    where: EnvioPedidoWhereUniqueInput
  }

  /**
   * EnvioPedido updateMany
   */
  export type EnvioPedidoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EnvioPedidos.
     */
    data: XOR<EnvioPedidoUpdateManyMutationInput, EnvioPedidoUncheckedUpdateManyInput>
    /**
     * Filter which EnvioPedidos to update
     */
    where?: EnvioPedidoWhereInput
    /**
     * Limit how many EnvioPedidos to update.
     */
    limit?: number
  }

  /**
   * EnvioPedido updateManyAndReturn
   */
  export type EnvioPedidoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnvioPedido
     */
    select?: EnvioPedidoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EnvioPedido
     */
    omit?: EnvioPedidoOmit<ExtArgs> | null
    /**
     * The data used to update EnvioPedidos.
     */
    data: XOR<EnvioPedidoUpdateManyMutationInput, EnvioPedidoUncheckedUpdateManyInput>
    /**
     * Filter which EnvioPedidos to update
     */
    where?: EnvioPedidoWhereInput
    /**
     * Limit how many EnvioPedidos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnvioPedidoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * EnvioPedido upsert
   */
  export type EnvioPedidoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnvioPedido
     */
    select?: EnvioPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EnvioPedido
     */
    omit?: EnvioPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnvioPedidoInclude<ExtArgs> | null
    /**
     * The filter to search for the EnvioPedido to update in case it exists.
     */
    where: EnvioPedidoWhereUniqueInput
    /**
     * In case the EnvioPedido found by the `where` argument doesn't exist, create a new EnvioPedido with this data.
     */
    create: XOR<EnvioPedidoCreateInput, EnvioPedidoUncheckedCreateInput>
    /**
     * In case the EnvioPedido was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EnvioPedidoUpdateInput, EnvioPedidoUncheckedUpdateInput>
  }

  /**
   * EnvioPedido delete
   */
  export type EnvioPedidoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnvioPedido
     */
    select?: EnvioPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EnvioPedido
     */
    omit?: EnvioPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnvioPedidoInclude<ExtArgs> | null
    /**
     * Filter which EnvioPedido to delete.
     */
    where: EnvioPedidoWhereUniqueInput
  }

  /**
   * EnvioPedido deleteMany
   */
  export type EnvioPedidoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EnvioPedidos to delete
     */
    where?: EnvioPedidoWhereInput
    /**
     * Limit how many EnvioPedidos to delete.
     */
    limit?: number
  }

  /**
   * EnvioPedido without action
   */
  export type EnvioPedidoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnvioPedido
     */
    select?: EnvioPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EnvioPedido
     */
    omit?: EnvioPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnvioPedidoInclude<ExtArgs> | null
  }


  /**
   * Model EstadoEnvio
   */

  export type AggregateEstadoEnvio = {
    _count: EstadoEnvioCountAggregateOutputType | null
    _avg: EstadoEnvioAvgAggregateOutputType | null
    _sum: EstadoEnvioSumAggregateOutputType | null
    _min: EstadoEnvioMinAggregateOutputType | null
    _max: EstadoEnvioMaxAggregateOutputType | null
  }

  export type EstadoEnvioAvgAggregateOutputType = {
    codEstadoEnvio: number | null
  }

  export type EstadoEnvioSumAggregateOutputType = {
    codEstadoEnvio: number | null
  }

  export type EstadoEnvioMinAggregateOutputType = {
    codEstadoEnvio: number | null
    nombreEstadoEnvio: string | null
    fechaHoraBajaEE: Date | null
  }

  export type EstadoEnvioMaxAggregateOutputType = {
    codEstadoEnvio: number | null
    nombreEstadoEnvio: string | null
    fechaHoraBajaEE: Date | null
  }

  export type EstadoEnvioCountAggregateOutputType = {
    codEstadoEnvio: number
    nombreEstadoEnvio: number
    fechaHoraBajaEE: number
    _all: number
  }


  export type EstadoEnvioAvgAggregateInputType = {
    codEstadoEnvio?: true
  }

  export type EstadoEnvioSumAggregateInputType = {
    codEstadoEnvio?: true
  }

  export type EstadoEnvioMinAggregateInputType = {
    codEstadoEnvio?: true
    nombreEstadoEnvio?: true
    fechaHoraBajaEE?: true
  }

  export type EstadoEnvioMaxAggregateInputType = {
    codEstadoEnvio?: true
    nombreEstadoEnvio?: true
    fechaHoraBajaEE?: true
  }

  export type EstadoEnvioCountAggregateInputType = {
    codEstadoEnvio?: true
    nombreEstadoEnvio?: true
    fechaHoraBajaEE?: true
    _all?: true
  }

  export type EstadoEnvioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EstadoEnvio to aggregate.
     */
    where?: EstadoEnvioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstadoEnvios to fetch.
     */
    orderBy?: EstadoEnvioOrderByWithRelationInput | EstadoEnvioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EstadoEnvioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstadoEnvios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstadoEnvios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EstadoEnvios
    **/
    _count?: true | EstadoEnvioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EstadoEnvioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EstadoEnvioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EstadoEnvioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EstadoEnvioMaxAggregateInputType
  }

  export type GetEstadoEnvioAggregateType<T extends EstadoEnvioAggregateArgs> = {
        [P in keyof T & keyof AggregateEstadoEnvio]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEstadoEnvio[P]>
      : GetScalarType<T[P], AggregateEstadoEnvio[P]>
  }




  export type EstadoEnvioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EstadoEnvioWhereInput
    orderBy?: EstadoEnvioOrderByWithAggregationInput | EstadoEnvioOrderByWithAggregationInput[]
    by: EstadoEnvioScalarFieldEnum[] | EstadoEnvioScalarFieldEnum
    having?: EstadoEnvioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EstadoEnvioCountAggregateInputType | true
    _avg?: EstadoEnvioAvgAggregateInputType
    _sum?: EstadoEnvioSumAggregateInputType
    _min?: EstadoEnvioMinAggregateInputType
    _max?: EstadoEnvioMaxAggregateInputType
  }

  export type EstadoEnvioGroupByOutputType = {
    codEstadoEnvio: number
    nombreEstadoEnvio: string
    fechaHoraBajaEE: Date | null
    _count: EstadoEnvioCountAggregateOutputType | null
    _avg: EstadoEnvioAvgAggregateOutputType | null
    _sum: EstadoEnvioSumAggregateOutputType | null
    _min: EstadoEnvioMinAggregateOutputType | null
    _max: EstadoEnvioMaxAggregateOutputType | null
  }

  type GetEstadoEnvioGroupByPayload<T extends EstadoEnvioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EstadoEnvioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EstadoEnvioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EstadoEnvioGroupByOutputType[P]>
            : GetScalarType<T[P], EstadoEnvioGroupByOutputType[P]>
        }
      >
    >


  export type EstadoEnvioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codEstadoEnvio?: boolean
    nombreEstadoEnvio?: boolean
    fechaHoraBajaEE?: boolean
    envioPedido?: boolean | EstadoEnvio$envioPedidoArgs<ExtArgs>
    _count?: boolean | EstadoEnvioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["estadoEnvio"]>

  export type EstadoEnvioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codEstadoEnvio?: boolean
    nombreEstadoEnvio?: boolean
    fechaHoraBajaEE?: boolean
  }, ExtArgs["result"]["estadoEnvio"]>

  export type EstadoEnvioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codEstadoEnvio?: boolean
    nombreEstadoEnvio?: boolean
    fechaHoraBajaEE?: boolean
  }, ExtArgs["result"]["estadoEnvio"]>

  export type EstadoEnvioSelectScalar = {
    codEstadoEnvio?: boolean
    nombreEstadoEnvio?: boolean
    fechaHoraBajaEE?: boolean
  }

  export type EstadoEnvioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"codEstadoEnvio" | "nombreEstadoEnvio" | "fechaHoraBajaEE", ExtArgs["result"]["estadoEnvio"]>
  export type EstadoEnvioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    envioPedido?: boolean | EstadoEnvio$envioPedidoArgs<ExtArgs>
    _count?: boolean | EstadoEnvioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EstadoEnvioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type EstadoEnvioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $EstadoEnvioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EstadoEnvio"
    objects: {
      envioPedido: Prisma.$EnvioPedidoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      codEstadoEnvio: number
      nombreEstadoEnvio: string
      fechaHoraBajaEE: Date | null
    }, ExtArgs["result"]["estadoEnvio"]>
    composites: {}
  }

  type EstadoEnvioGetPayload<S extends boolean | null | undefined | EstadoEnvioDefaultArgs> = $Result.GetResult<Prisma.$EstadoEnvioPayload, S>

  type EstadoEnvioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EstadoEnvioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EstadoEnvioCountAggregateInputType | true
    }

  export interface EstadoEnvioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EstadoEnvio'], meta: { name: 'EstadoEnvio' } }
    /**
     * Find zero or one EstadoEnvio that matches the filter.
     * @param {EstadoEnvioFindUniqueArgs} args - Arguments to find a EstadoEnvio
     * @example
     * // Get one EstadoEnvio
     * const estadoEnvio = await prisma.estadoEnvio.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EstadoEnvioFindUniqueArgs>(args: SelectSubset<T, EstadoEnvioFindUniqueArgs<ExtArgs>>): Prisma__EstadoEnvioClient<$Result.GetResult<Prisma.$EstadoEnvioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one EstadoEnvio that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EstadoEnvioFindUniqueOrThrowArgs} args - Arguments to find a EstadoEnvio
     * @example
     * // Get one EstadoEnvio
     * const estadoEnvio = await prisma.estadoEnvio.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EstadoEnvioFindUniqueOrThrowArgs>(args: SelectSubset<T, EstadoEnvioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EstadoEnvioClient<$Result.GetResult<Prisma.$EstadoEnvioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EstadoEnvio that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadoEnvioFindFirstArgs} args - Arguments to find a EstadoEnvio
     * @example
     * // Get one EstadoEnvio
     * const estadoEnvio = await prisma.estadoEnvio.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EstadoEnvioFindFirstArgs>(args?: SelectSubset<T, EstadoEnvioFindFirstArgs<ExtArgs>>): Prisma__EstadoEnvioClient<$Result.GetResult<Prisma.$EstadoEnvioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EstadoEnvio that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadoEnvioFindFirstOrThrowArgs} args - Arguments to find a EstadoEnvio
     * @example
     * // Get one EstadoEnvio
     * const estadoEnvio = await prisma.estadoEnvio.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EstadoEnvioFindFirstOrThrowArgs>(args?: SelectSubset<T, EstadoEnvioFindFirstOrThrowArgs<ExtArgs>>): Prisma__EstadoEnvioClient<$Result.GetResult<Prisma.$EstadoEnvioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more EstadoEnvios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadoEnvioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EstadoEnvios
     * const estadoEnvios = await prisma.estadoEnvio.findMany()
     * 
     * // Get first 10 EstadoEnvios
     * const estadoEnvios = await prisma.estadoEnvio.findMany({ take: 10 })
     * 
     * // Only select the `codEstadoEnvio`
     * const estadoEnvioWithCodEstadoEnvioOnly = await prisma.estadoEnvio.findMany({ select: { codEstadoEnvio: true } })
     * 
     */
    findMany<T extends EstadoEnvioFindManyArgs>(args?: SelectSubset<T, EstadoEnvioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstadoEnvioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a EstadoEnvio.
     * @param {EstadoEnvioCreateArgs} args - Arguments to create a EstadoEnvio.
     * @example
     * // Create one EstadoEnvio
     * const EstadoEnvio = await prisma.estadoEnvio.create({
     *   data: {
     *     // ... data to create a EstadoEnvio
     *   }
     * })
     * 
     */
    create<T extends EstadoEnvioCreateArgs>(args: SelectSubset<T, EstadoEnvioCreateArgs<ExtArgs>>): Prisma__EstadoEnvioClient<$Result.GetResult<Prisma.$EstadoEnvioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many EstadoEnvios.
     * @param {EstadoEnvioCreateManyArgs} args - Arguments to create many EstadoEnvios.
     * @example
     * // Create many EstadoEnvios
     * const estadoEnvio = await prisma.estadoEnvio.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EstadoEnvioCreateManyArgs>(args?: SelectSubset<T, EstadoEnvioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many EstadoEnvios and returns the data saved in the database.
     * @param {EstadoEnvioCreateManyAndReturnArgs} args - Arguments to create many EstadoEnvios.
     * @example
     * // Create many EstadoEnvios
     * const estadoEnvio = await prisma.estadoEnvio.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many EstadoEnvios and only return the `codEstadoEnvio`
     * const estadoEnvioWithCodEstadoEnvioOnly = await prisma.estadoEnvio.createManyAndReturn({
     *   select: { codEstadoEnvio: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EstadoEnvioCreateManyAndReturnArgs>(args?: SelectSubset<T, EstadoEnvioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstadoEnvioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a EstadoEnvio.
     * @param {EstadoEnvioDeleteArgs} args - Arguments to delete one EstadoEnvio.
     * @example
     * // Delete one EstadoEnvio
     * const EstadoEnvio = await prisma.estadoEnvio.delete({
     *   where: {
     *     // ... filter to delete one EstadoEnvio
     *   }
     * })
     * 
     */
    delete<T extends EstadoEnvioDeleteArgs>(args: SelectSubset<T, EstadoEnvioDeleteArgs<ExtArgs>>): Prisma__EstadoEnvioClient<$Result.GetResult<Prisma.$EstadoEnvioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one EstadoEnvio.
     * @param {EstadoEnvioUpdateArgs} args - Arguments to update one EstadoEnvio.
     * @example
     * // Update one EstadoEnvio
     * const estadoEnvio = await prisma.estadoEnvio.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EstadoEnvioUpdateArgs>(args: SelectSubset<T, EstadoEnvioUpdateArgs<ExtArgs>>): Prisma__EstadoEnvioClient<$Result.GetResult<Prisma.$EstadoEnvioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more EstadoEnvios.
     * @param {EstadoEnvioDeleteManyArgs} args - Arguments to filter EstadoEnvios to delete.
     * @example
     * // Delete a few EstadoEnvios
     * const { count } = await prisma.estadoEnvio.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EstadoEnvioDeleteManyArgs>(args?: SelectSubset<T, EstadoEnvioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EstadoEnvios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadoEnvioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EstadoEnvios
     * const estadoEnvio = await prisma.estadoEnvio.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EstadoEnvioUpdateManyArgs>(args: SelectSubset<T, EstadoEnvioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EstadoEnvios and returns the data updated in the database.
     * @param {EstadoEnvioUpdateManyAndReturnArgs} args - Arguments to update many EstadoEnvios.
     * @example
     * // Update many EstadoEnvios
     * const estadoEnvio = await prisma.estadoEnvio.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more EstadoEnvios and only return the `codEstadoEnvio`
     * const estadoEnvioWithCodEstadoEnvioOnly = await prisma.estadoEnvio.updateManyAndReturn({
     *   select: { codEstadoEnvio: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EstadoEnvioUpdateManyAndReturnArgs>(args: SelectSubset<T, EstadoEnvioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstadoEnvioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one EstadoEnvio.
     * @param {EstadoEnvioUpsertArgs} args - Arguments to update or create a EstadoEnvio.
     * @example
     * // Update or create a EstadoEnvio
     * const estadoEnvio = await prisma.estadoEnvio.upsert({
     *   create: {
     *     // ... data to create a EstadoEnvio
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EstadoEnvio we want to update
     *   }
     * })
     */
    upsert<T extends EstadoEnvioUpsertArgs>(args: SelectSubset<T, EstadoEnvioUpsertArgs<ExtArgs>>): Prisma__EstadoEnvioClient<$Result.GetResult<Prisma.$EstadoEnvioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of EstadoEnvios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadoEnvioCountArgs} args - Arguments to filter EstadoEnvios to count.
     * @example
     * // Count the number of EstadoEnvios
     * const count = await prisma.estadoEnvio.count({
     *   where: {
     *     // ... the filter for the EstadoEnvios we want to count
     *   }
     * })
    **/
    count<T extends EstadoEnvioCountArgs>(
      args?: Subset<T, EstadoEnvioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EstadoEnvioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EstadoEnvio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadoEnvioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EstadoEnvioAggregateArgs>(args: Subset<T, EstadoEnvioAggregateArgs>): Prisma.PrismaPromise<GetEstadoEnvioAggregateType<T>>

    /**
     * Group by EstadoEnvio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadoEnvioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EstadoEnvioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EstadoEnvioGroupByArgs['orderBy'] }
        : { orderBy?: EstadoEnvioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EstadoEnvioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEstadoEnvioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EstadoEnvio model
   */
  readonly fields: EstadoEnvioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EstadoEnvio.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EstadoEnvioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    envioPedido<T extends EstadoEnvio$envioPedidoArgs<ExtArgs> = {}>(args?: Subset<T, EstadoEnvio$envioPedidoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EnvioPedidoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EstadoEnvio model
   */
  interface EstadoEnvioFieldRefs {
    readonly codEstadoEnvio: FieldRef<"EstadoEnvio", 'Int'>
    readonly nombreEstadoEnvio: FieldRef<"EstadoEnvio", 'String'>
    readonly fechaHoraBajaEE: FieldRef<"EstadoEnvio", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * EstadoEnvio findUnique
   */
  export type EstadoEnvioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoEnvio
     */
    select?: EstadoEnvioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoEnvio
     */
    omit?: EstadoEnvioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoEnvioInclude<ExtArgs> | null
    /**
     * Filter, which EstadoEnvio to fetch.
     */
    where: EstadoEnvioWhereUniqueInput
  }

  /**
   * EstadoEnvio findUniqueOrThrow
   */
  export type EstadoEnvioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoEnvio
     */
    select?: EstadoEnvioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoEnvio
     */
    omit?: EstadoEnvioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoEnvioInclude<ExtArgs> | null
    /**
     * Filter, which EstadoEnvio to fetch.
     */
    where: EstadoEnvioWhereUniqueInput
  }

  /**
   * EstadoEnvio findFirst
   */
  export type EstadoEnvioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoEnvio
     */
    select?: EstadoEnvioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoEnvio
     */
    omit?: EstadoEnvioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoEnvioInclude<ExtArgs> | null
    /**
     * Filter, which EstadoEnvio to fetch.
     */
    where?: EstadoEnvioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstadoEnvios to fetch.
     */
    orderBy?: EstadoEnvioOrderByWithRelationInput | EstadoEnvioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EstadoEnvios.
     */
    cursor?: EstadoEnvioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstadoEnvios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstadoEnvios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EstadoEnvios.
     */
    distinct?: EstadoEnvioScalarFieldEnum | EstadoEnvioScalarFieldEnum[]
  }

  /**
   * EstadoEnvio findFirstOrThrow
   */
  export type EstadoEnvioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoEnvio
     */
    select?: EstadoEnvioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoEnvio
     */
    omit?: EstadoEnvioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoEnvioInclude<ExtArgs> | null
    /**
     * Filter, which EstadoEnvio to fetch.
     */
    where?: EstadoEnvioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstadoEnvios to fetch.
     */
    orderBy?: EstadoEnvioOrderByWithRelationInput | EstadoEnvioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EstadoEnvios.
     */
    cursor?: EstadoEnvioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstadoEnvios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstadoEnvios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EstadoEnvios.
     */
    distinct?: EstadoEnvioScalarFieldEnum | EstadoEnvioScalarFieldEnum[]
  }

  /**
   * EstadoEnvio findMany
   */
  export type EstadoEnvioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoEnvio
     */
    select?: EstadoEnvioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoEnvio
     */
    omit?: EstadoEnvioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoEnvioInclude<ExtArgs> | null
    /**
     * Filter, which EstadoEnvios to fetch.
     */
    where?: EstadoEnvioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstadoEnvios to fetch.
     */
    orderBy?: EstadoEnvioOrderByWithRelationInput | EstadoEnvioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EstadoEnvios.
     */
    cursor?: EstadoEnvioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstadoEnvios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstadoEnvios.
     */
    skip?: number
    distinct?: EstadoEnvioScalarFieldEnum | EstadoEnvioScalarFieldEnum[]
  }

  /**
   * EstadoEnvio create
   */
  export type EstadoEnvioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoEnvio
     */
    select?: EstadoEnvioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoEnvio
     */
    omit?: EstadoEnvioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoEnvioInclude<ExtArgs> | null
    /**
     * The data needed to create a EstadoEnvio.
     */
    data: XOR<EstadoEnvioCreateInput, EstadoEnvioUncheckedCreateInput>
  }

  /**
   * EstadoEnvio createMany
   */
  export type EstadoEnvioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EstadoEnvios.
     */
    data: EstadoEnvioCreateManyInput | EstadoEnvioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EstadoEnvio createManyAndReturn
   */
  export type EstadoEnvioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoEnvio
     */
    select?: EstadoEnvioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoEnvio
     */
    omit?: EstadoEnvioOmit<ExtArgs> | null
    /**
     * The data used to create many EstadoEnvios.
     */
    data: EstadoEnvioCreateManyInput | EstadoEnvioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EstadoEnvio update
   */
  export type EstadoEnvioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoEnvio
     */
    select?: EstadoEnvioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoEnvio
     */
    omit?: EstadoEnvioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoEnvioInclude<ExtArgs> | null
    /**
     * The data needed to update a EstadoEnvio.
     */
    data: XOR<EstadoEnvioUpdateInput, EstadoEnvioUncheckedUpdateInput>
    /**
     * Choose, which EstadoEnvio to update.
     */
    where: EstadoEnvioWhereUniqueInput
  }

  /**
   * EstadoEnvio updateMany
   */
  export type EstadoEnvioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EstadoEnvios.
     */
    data: XOR<EstadoEnvioUpdateManyMutationInput, EstadoEnvioUncheckedUpdateManyInput>
    /**
     * Filter which EstadoEnvios to update
     */
    where?: EstadoEnvioWhereInput
    /**
     * Limit how many EstadoEnvios to update.
     */
    limit?: number
  }

  /**
   * EstadoEnvio updateManyAndReturn
   */
  export type EstadoEnvioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoEnvio
     */
    select?: EstadoEnvioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoEnvio
     */
    omit?: EstadoEnvioOmit<ExtArgs> | null
    /**
     * The data used to update EstadoEnvios.
     */
    data: XOR<EstadoEnvioUpdateManyMutationInput, EstadoEnvioUncheckedUpdateManyInput>
    /**
     * Filter which EstadoEnvios to update
     */
    where?: EstadoEnvioWhereInput
    /**
     * Limit how many EstadoEnvios to update.
     */
    limit?: number
  }

  /**
   * EstadoEnvio upsert
   */
  export type EstadoEnvioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoEnvio
     */
    select?: EstadoEnvioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoEnvio
     */
    omit?: EstadoEnvioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoEnvioInclude<ExtArgs> | null
    /**
     * The filter to search for the EstadoEnvio to update in case it exists.
     */
    where: EstadoEnvioWhereUniqueInput
    /**
     * In case the EstadoEnvio found by the `where` argument doesn't exist, create a new EstadoEnvio with this data.
     */
    create: XOR<EstadoEnvioCreateInput, EstadoEnvioUncheckedCreateInput>
    /**
     * In case the EstadoEnvio was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EstadoEnvioUpdateInput, EstadoEnvioUncheckedUpdateInput>
  }

  /**
   * EstadoEnvio delete
   */
  export type EstadoEnvioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoEnvio
     */
    select?: EstadoEnvioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoEnvio
     */
    omit?: EstadoEnvioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoEnvioInclude<ExtArgs> | null
    /**
     * Filter which EstadoEnvio to delete.
     */
    where: EstadoEnvioWhereUniqueInput
  }

  /**
   * EstadoEnvio deleteMany
   */
  export type EstadoEnvioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EstadoEnvios to delete
     */
    where?: EstadoEnvioWhereInput
    /**
     * Limit how many EstadoEnvios to delete.
     */
    limit?: number
  }

  /**
   * EstadoEnvio.envioPedido
   */
  export type EstadoEnvio$envioPedidoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnvioPedido
     */
    select?: EnvioPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EnvioPedido
     */
    omit?: EnvioPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnvioPedidoInclude<ExtArgs> | null
    where?: EnvioPedidoWhereInput
    orderBy?: EnvioPedidoOrderByWithRelationInput | EnvioPedidoOrderByWithRelationInput[]
    cursor?: EnvioPedidoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EnvioPedidoScalarFieldEnum | EnvioPedidoScalarFieldEnum[]
  }

  /**
   * EstadoEnvio without action
   */
  export type EstadoEnvioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoEnvio
     */
    select?: EstadoEnvioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoEnvio
     */
    omit?: EstadoEnvioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoEnvioInclude<ExtArgs> | null
  }


  /**
   * Model MedioPago
   */

  export type AggregateMedioPago = {
    _count: MedioPagoCountAggregateOutputType | null
    _avg: MedioPagoAvgAggregateOutputType | null
    _sum: MedioPagoSumAggregateOutputType | null
    _min: MedioPagoMinAggregateOutputType | null
    _max: MedioPagoMaxAggregateOutputType | null
  }

  export type MedioPagoAvgAggregateOutputType = {
    codMedioPago: number | null
  }

  export type MedioPagoSumAggregateOutputType = {
    codMedioPago: number | null
  }

  export type MedioPagoMinAggregateOutputType = {
    codMedioPago: number | null
    nombreTipoMedioPago: string | null
    fechaHoraBajaMedioPago: Date | null
  }

  export type MedioPagoMaxAggregateOutputType = {
    codMedioPago: number | null
    nombreTipoMedioPago: string | null
    fechaHoraBajaMedioPago: Date | null
  }

  export type MedioPagoCountAggregateOutputType = {
    codMedioPago: number
    nombreTipoMedioPago: number
    fechaHoraBajaMedioPago: number
    _all: number
  }


  export type MedioPagoAvgAggregateInputType = {
    codMedioPago?: true
  }

  export type MedioPagoSumAggregateInputType = {
    codMedioPago?: true
  }

  export type MedioPagoMinAggregateInputType = {
    codMedioPago?: true
    nombreTipoMedioPago?: true
    fechaHoraBajaMedioPago?: true
  }

  export type MedioPagoMaxAggregateInputType = {
    codMedioPago?: true
    nombreTipoMedioPago?: true
    fechaHoraBajaMedioPago?: true
  }

  export type MedioPagoCountAggregateInputType = {
    codMedioPago?: true
    nombreTipoMedioPago?: true
    fechaHoraBajaMedioPago?: true
    _all?: true
  }

  export type MedioPagoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MedioPago to aggregate.
     */
    where?: MedioPagoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MedioPagos to fetch.
     */
    orderBy?: MedioPagoOrderByWithRelationInput | MedioPagoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MedioPagoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MedioPagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MedioPagos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MedioPagos
    **/
    _count?: true | MedioPagoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MedioPagoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MedioPagoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MedioPagoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MedioPagoMaxAggregateInputType
  }

  export type GetMedioPagoAggregateType<T extends MedioPagoAggregateArgs> = {
        [P in keyof T & keyof AggregateMedioPago]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMedioPago[P]>
      : GetScalarType<T[P], AggregateMedioPago[P]>
  }




  export type MedioPagoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MedioPagoWhereInput
    orderBy?: MedioPagoOrderByWithAggregationInput | MedioPagoOrderByWithAggregationInput[]
    by: MedioPagoScalarFieldEnum[] | MedioPagoScalarFieldEnum
    having?: MedioPagoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MedioPagoCountAggregateInputType | true
    _avg?: MedioPagoAvgAggregateInputType
    _sum?: MedioPagoSumAggregateInputType
    _min?: MedioPagoMinAggregateInputType
    _max?: MedioPagoMaxAggregateInputType
  }

  export type MedioPagoGroupByOutputType = {
    codMedioPago: number
    nombreTipoMedioPago: string
    fechaHoraBajaMedioPago: Date | null
    _count: MedioPagoCountAggregateOutputType | null
    _avg: MedioPagoAvgAggregateOutputType | null
    _sum: MedioPagoSumAggregateOutputType | null
    _min: MedioPagoMinAggregateOutputType | null
    _max: MedioPagoMaxAggregateOutputType | null
  }

  type GetMedioPagoGroupByPayload<T extends MedioPagoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MedioPagoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MedioPagoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MedioPagoGroupByOutputType[P]>
            : GetScalarType<T[P], MedioPagoGroupByOutputType[P]>
        }
      >
    >


  export type MedioPagoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codMedioPago?: boolean
    nombreTipoMedioPago?: boolean
    fechaHoraBajaMedioPago?: boolean
    clientes?: boolean | MedioPago$clientesArgs<ExtArgs>
    Pago?: boolean | MedioPago$PagoArgs<ExtArgs>
    _count?: boolean | MedioPagoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["medioPago"]>

  export type MedioPagoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codMedioPago?: boolean
    nombreTipoMedioPago?: boolean
    fechaHoraBajaMedioPago?: boolean
  }, ExtArgs["result"]["medioPago"]>

  export type MedioPagoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codMedioPago?: boolean
    nombreTipoMedioPago?: boolean
    fechaHoraBajaMedioPago?: boolean
  }, ExtArgs["result"]["medioPago"]>

  export type MedioPagoSelectScalar = {
    codMedioPago?: boolean
    nombreTipoMedioPago?: boolean
    fechaHoraBajaMedioPago?: boolean
  }

  export type MedioPagoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"codMedioPago" | "nombreTipoMedioPago" | "fechaHoraBajaMedioPago", ExtArgs["result"]["medioPago"]>
  export type MedioPagoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clientes?: boolean | MedioPago$clientesArgs<ExtArgs>
    Pago?: boolean | MedioPago$PagoArgs<ExtArgs>
    _count?: boolean | MedioPagoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type MedioPagoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type MedioPagoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $MedioPagoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MedioPago"
    objects: {
      clientes: Prisma.$ClientePayload<ExtArgs>[]
      Pago: Prisma.$PagoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      codMedioPago: number
      nombreTipoMedioPago: string
      fechaHoraBajaMedioPago: Date | null
    }, ExtArgs["result"]["medioPago"]>
    composites: {}
  }

  type MedioPagoGetPayload<S extends boolean | null | undefined | MedioPagoDefaultArgs> = $Result.GetResult<Prisma.$MedioPagoPayload, S>

  type MedioPagoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MedioPagoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MedioPagoCountAggregateInputType | true
    }

  export interface MedioPagoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MedioPago'], meta: { name: 'MedioPago' } }
    /**
     * Find zero or one MedioPago that matches the filter.
     * @param {MedioPagoFindUniqueArgs} args - Arguments to find a MedioPago
     * @example
     * // Get one MedioPago
     * const medioPago = await prisma.medioPago.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MedioPagoFindUniqueArgs>(args: SelectSubset<T, MedioPagoFindUniqueArgs<ExtArgs>>): Prisma__MedioPagoClient<$Result.GetResult<Prisma.$MedioPagoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one MedioPago that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MedioPagoFindUniqueOrThrowArgs} args - Arguments to find a MedioPago
     * @example
     * // Get one MedioPago
     * const medioPago = await prisma.medioPago.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MedioPagoFindUniqueOrThrowArgs>(args: SelectSubset<T, MedioPagoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MedioPagoClient<$Result.GetResult<Prisma.$MedioPagoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MedioPago that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MedioPagoFindFirstArgs} args - Arguments to find a MedioPago
     * @example
     * // Get one MedioPago
     * const medioPago = await prisma.medioPago.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MedioPagoFindFirstArgs>(args?: SelectSubset<T, MedioPagoFindFirstArgs<ExtArgs>>): Prisma__MedioPagoClient<$Result.GetResult<Prisma.$MedioPagoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MedioPago that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MedioPagoFindFirstOrThrowArgs} args - Arguments to find a MedioPago
     * @example
     * // Get one MedioPago
     * const medioPago = await prisma.medioPago.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MedioPagoFindFirstOrThrowArgs>(args?: SelectSubset<T, MedioPagoFindFirstOrThrowArgs<ExtArgs>>): Prisma__MedioPagoClient<$Result.GetResult<Prisma.$MedioPagoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more MedioPagos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MedioPagoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MedioPagos
     * const medioPagos = await prisma.medioPago.findMany()
     * 
     * // Get first 10 MedioPagos
     * const medioPagos = await prisma.medioPago.findMany({ take: 10 })
     * 
     * // Only select the `codMedioPago`
     * const medioPagoWithCodMedioPagoOnly = await prisma.medioPago.findMany({ select: { codMedioPago: true } })
     * 
     */
    findMany<T extends MedioPagoFindManyArgs>(args?: SelectSubset<T, MedioPagoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MedioPagoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a MedioPago.
     * @param {MedioPagoCreateArgs} args - Arguments to create a MedioPago.
     * @example
     * // Create one MedioPago
     * const MedioPago = await prisma.medioPago.create({
     *   data: {
     *     // ... data to create a MedioPago
     *   }
     * })
     * 
     */
    create<T extends MedioPagoCreateArgs>(args: SelectSubset<T, MedioPagoCreateArgs<ExtArgs>>): Prisma__MedioPagoClient<$Result.GetResult<Prisma.$MedioPagoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many MedioPagos.
     * @param {MedioPagoCreateManyArgs} args - Arguments to create many MedioPagos.
     * @example
     * // Create many MedioPagos
     * const medioPago = await prisma.medioPago.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MedioPagoCreateManyArgs>(args?: SelectSubset<T, MedioPagoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MedioPagos and returns the data saved in the database.
     * @param {MedioPagoCreateManyAndReturnArgs} args - Arguments to create many MedioPagos.
     * @example
     * // Create many MedioPagos
     * const medioPago = await prisma.medioPago.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MedioPagos and only return the `codMedioPago`
     * const medioPagoWithCodMedioPagoOnly = await prisma.medioPago.createManyAndReturn({
     *   select: { codMedioPago: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MedioPagoCreateManyAndReturnArgs>(args?: SelectSubset<T, MedioPagoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MedioPagoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a MedioPago.
     * @param {MedioPagoDeleteArgs} args - Arguments to delete one MedioPago.
     * @example
     * // Delete one MedioPago
     * const MedioPago = await prisma.medioPago.delete({
     *   where: {
     *     // ... filter to delete one MedioPago
     *   }
     * })
     * 
     */
    delete<T extends MedioPagoDeleteArgs>(args: SelectSubset<T, MedioPagoDeleteArgs<ExtArgs>>): Prisma__MedioPagoClient<$Result.GetResult<Prisma.$MedioPagoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one MedioPago.
     * @param {MedioPagoUpdateArgs} args - Arguments to update one MedioPago.
     * @example
     * // Update one MedioPago
     * const medioPago = await prisma.medioPago.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MedioPagoUpdateArgs>(args: SelectSubset<T, MedioPagoUpdateArgs<ExtArgs>>): Prisma__MedioPagoClient<$Result.GetResult<Prisma.$MedioPagoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more MedioPagos.
     * @param {MedioPagoDeleteManyArgs} args - Arguments to filter MedioPagos to delete.
     * @example
     * // Delete a few MedioPagos
     * const { count } = await prisma.medioPago.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MedioPagoDeleteManyArgs>(args?: SelectSubset<T, MedioPagoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MedioPagos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MedioPagoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MedioPagos
     * const medioPago = await prisma.medioPago.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MedioPagoUpdateManyArgs>(args: SelectSubset<T, MedioPagoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MedioPagos and returns the data updated in the database.
     * @param {MedioPagoUpdateManyAndReturnArgs} args - Arguments to update many MedioPagos.
     * @example
     * // Update many MedioPagos
     * const medioPago = await prisma.medioPago.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more MedioPagos and only return the `codMedioPago`
     * const medioPagoWithCodMedioPagoOnly = await prisma.medioPago.updateManyAndReturn({
     *   select: { codMedioPago: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MedioPagoUpdateManyAndReturnArgs>(args: SelectSubset<T, MedioPagoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MedioPagoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one MedioPago.
     * @param {MedioPagoUpsertArgs} args - Arguments to update or create a MedioPago.
     * @example
     * // Update or create a MedioPago
     * const medioPago = await prisma.medioPago.upsert({
     *   create: {
     *     // ... data to create a MedioPago
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MedioPago we want to update
     *   }
     * })
     */
    upsert<T extends MedioPagoUpsertArgs>(args: SelectSubset<T, MedioPagoUpsertArgs<ExtArgs>>): Prisma__MedioPagoClient<$Result.GetResult<Prisma.$MedioPagoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of MedioPagos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MedioPagoCountArgs} args - Arguments to filter MedioPagos to count.
     * @example
     * // Count the number of MedioPagos
     * const count = await prisma.medioPago.count({
     *   where: {
     *     // ... the filter for the MedioPagos we want to count
     *   }
     * })
    **/
    count<T extends MedioPagoCountArgs>(
      args?: Subset<T, MedioPagoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MedioPagoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MedioPago.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MedioPagoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MedioPagoAggregateArgs>(args: Subset<T, MedioPagoAggregateArgs>): Prisma.PrismaPromise<GetMedioPagoAggregateType<T>>

    /**
     * Group by MedioPago.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MedioPagoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MedioPagoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MedioPagoGroupByArgs['orderBy'] }
        : { orderBy?: MedioPagoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MedioPagoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMedioPagoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MedioPago model
   */
  readonly fields: MedioPagoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MedioPago.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MedioPagoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    clientes<T extends MedioPago$clientesArgs<ExtArgs> = {}>(args?: Subset<T, MedioPago$clientesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Pago<T extends MedioPago$PagoArgs<ExtArgs> = {}>(args?: Subset<T, MedioPago$PagoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MedioPago model
   */
  interface MedioPagoFieldRefs {
    readonly codMedioPago: FieldRef<"MedioPago", 'Int'>
    readonly nombreTipoMedioPago: FieldRef<"MedioPago", 'String'>
    readonly fechaHoraBajaMedioPago: FieldRef<"MedioPago", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * MedioPago findUnique
   */
  export type MedioPagoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedioPago
     */
    select?: MedioPagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedioPago
     */
    omit?: MedioPagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedioPagoInclude<ExtArgs> | null
    /**
     * Filter, which MedioPago to fetch.
     */
    where: MedioPagoWhereUniqueInput
  }

  /**
   * MedioPago findUniqueOrThrow
   */
  export type MedioPagoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedioPago
     */
    select?: MedioPagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedioPago
     */
    omit?: MedioPagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedioPagoInclude<ExtArgs> | null
    /**
     * Filter, which MedioPago to fetch.
     */
    where: MedioPagoWhereUniqueInput
  }

  /**
   * MedioPago findFirst
   */
  export type MedioPagoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedioPago
     */
    select?: MedioPagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedioPago
     */
    omit?: MedioPagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedioPagoInclude<ExtArgs> | null
    /**
     * Filter, which MedioPago to fetch.
     */
    where?: MedioPagoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MedioPagos to fetch.
     */
    orderBy?: MedioPagoOrderByWithRelationInput | MedioPagoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MedioPagos.
     */
    cursor?: MedioPagoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MedioPagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MedioPagos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MedioPagos.
     */
    distinct?: MedioPagoScalarFieldEnum | MedioPagoScalarFieldEnum[]
  }

  /**
   * MedioPago findFirstOrThrow
   */
  export type MedioPagoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedioPago
     */
    select?: MedioPagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedioPago
     */
    omit?: MedioPagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedioPagoInclude<ExtArgs> | null
    /**
     * Filter, which MedioPago to fetch.
     */
    where?: MedioPagoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MedioPagos to fetch.
     */
    orderBy?: MedioPagoOrderByWithRelationInput | MedioPagoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MedioPagos.
     */
    cursor?: MedioPagoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MedioPagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MedioPagos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MedioPagos.
     */
    distinct?: MedioPagoScalarFieldEnum | MedioPagoScalarFieldEnum[]
  }

  /**
   * MedioPago findMany
   */
  export type MedioPagoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedioPago
     */
    select?: MedioPagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedioPago
     */
    omit?: MedioPagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedioPagoInclude<ExtArgs> | null
    /**
     * Filter, which MedioPagos to fetch.
     */
    where?: MedioPagoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MedioPagos to fetch.
     */
    orderBy?: MedioPagoOrderByWithRelationInput | MedioPagoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MedioPagos.
     */
    cursor?: MedioPagoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MedioPagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MedioPagos.
     */
    skip?: number
    distinct?: MedioPagoScalarFieldEnum | MedioPagoScalarFieldEnum[]
  }

  /**
   * MedioPago create
   */
  export type MedioPagoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedioPago
     */
    select?: MedioPagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedioPago
     */
    omit?: MedioPagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedioPagoInclude<ExtArgs> | null
    /**
     * The data needed to create a MedioPago.
     */
    data: XOR<MedioPagoCreateInput, MedioPagoUncheckedCreateInput>
  }

  /**
   * MedioPago createMany
   */
  export type MedioPagoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MedioPagos.
     */
    data: MedioPagoCreateManyInput | MedioPagoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MedioPago createManyAndReturn
   */
  export type MedioPagoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedioPago
     */
    select?: MedioPagoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MedioPago
     */
    omit?: MedioPagoOmit<ExtArgs> | null
    /**
     * The data used to create many MedioPagos.
     */
    data: MedioPagoCreateManyInput | MedioPagoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MedioPago update
   */
  export type MedioPagoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedioPago
     */
    select?: MedioPagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedioPago
     */
    omit?: MedioPagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedioPagoInclude<ExtArgs> | null
    /**
     * The data needed to update a MedioPago.
     */
    data: XOR<MedioPagoUpdateInput, MedioPagoUncheckedUpdateInput>
    /**
     * Choose, which MedioPago to update.
     */
    where: MedioPagoWhereUniqueInput
  }

  /**
   * MedioPago updateMany
   */
  export type MedioPagoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MedioPagos.
     */
    data: XOR<MedioPagoUpdateManyMutationInput, MedioPagoUncheckedUpdateManyInput>
    /**
     * Filter which MedioPagos to update
     */
    where?: MedioPagoWhereInput
    /**
     * Limit how many MedioPagos to update.
     */
    limit?: number
  }

  /**
   * MedioPago updateManyAndReturn
   */
  export type MedioPagoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedioPago
     */
    select?: MedioPagoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MedioPago
     */
    omit?: MedioPagoOmit<ExtArgs> | null
    /**
     * The data used to update MedioPagos.
     */
    data: XOR<MedioPagoUpdateManyMutationInput, MedioPagoUncheckedUpdateManyInput>
    /**
     * Filter which MedioPagos to update
     */
    where?: MedioPagoWhereInput
    /**
     * Limit how many MedioPagos to update.
     */
    limit?: number
  }

  /**
   * MedioPago upsert
   */
  export type MedioPagoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedioPago
     */
    select?: MedioPagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedioPago
     */
    omit?: MedioPagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedioPagoInclude<ExtArgs> | null
    /**
     * The filter to search for the MedioPago to update in case it exists.
     */
    where: MedioPagoWhereUniqueInput
    /**
     * In case the MedioPago found by the `where` argument doesn't exist, create a new MedioPago with this data.
     */
    create: XOR<MedioPagoCreateInput, MedioPagoUncheckedCreateInput>
    /**
     * In case the MedioPago was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MedioPagoUpdateInput, MedioPagoUncheckedUpdateInput>
  }

  /**
   * MedioPago delete
   */
  export type MedioPagoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedioPago
     */
    select?: MedioPagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedioPago
     */
    omit?: MedioPagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedioPagoInclude<ExtArgs> | null
    /**
     * Filter which MedioPago to delete.
     */
    where: MedioPagoWhereUniqueInput
  }

  /**
   * MedioPago deleteMany
   */
  export type MedioPagoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MedioPagos to delete
     */
    where?: MedioPagoWhereInput
    /**
     * Limit how many MedioPagos to delete.
     */
    limit?: number
  }

  /**
   * MedioPago.clientes
   */
  export type MedioPago$clientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    where?: ClienteWhereInput
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    cursor?: ClienteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }

  /**
   * MedioPago.Pago
   */
  export type MedioPago$PagoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pago
     */
    omit?: PagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
    where?: PagoWhereInput
    orderBy?: PagoOrderByWithRelationInput | PagoOrderByWithRelationInput[]
    cursor?: PagoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PagoScalarFieldEnum | PagoScalarFieldEnum[]
  }

  /**
   * MedioPago without action
   */
  export type MedioPagoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedioPago
     */
    select?: MedioPagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedioPago
     */
    omit?: MedioPagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedioPagoInclude<ExtArgs> | null
  }


  /**
   * Model Pago
   */

  export type AggregatePago = {
    _count: PagoCountAggregateOutputType | null
    _avg: PagoAvgAggregateOutputType | null
    _sum: PagoSumAggregateOutputType | null
    _min: PagoMinAggregateOutputType | null
    _max: PagoMaxAggregateOutputType | null
  }

  export type PagoAvgAggregateOutputType = {
    codPago: number | null
    montoPagado: number | null
    transaccionId: number | null
    codMedioPago: number | null
    codEstadoPago: number | null
  }

  export type PagoSumAggregateOutputType = {
    codPago: number | null
    montoPagado: number | null
    transaccionId: number | null
    codMedioPago: number | null
    codEstadoPago: number | null
  }

  export type PagoMinAggregateOutputType = {
    codPago: number | null
    nombreTipoMedioPago: string | null
    montoPagado: number | null
    transaccionId: number | null
    fechaHoraPago: Date | null
    codMedioPago: number | null
    codEstadoPago: number | null
  }

  export type PagoMaxAggregateOutputType = {
    codPago: number | null
    nombreTipoMedioPago: string | null
    montoPagado: number | null
    transaccionId: number | null
    fechaHoraPago: Date | null
    codMedioPago: number | null
    codEstadoPago: number | null
  }

  export type PagoCountAggregateOutputType = {
    codPago: number
    nombreTipoMedioPago: number
    montoPagado: number
    transaccionId: number
    fechaHoraPago: number
    codMedioPago: number
    codEstadoPago: number
    _all: number
  }


  export type PagoAvgAggregateInputType = {
    codPago?: true
    montoPagado?: true
    transaccionId?: true
    codMedioPago?: true
    codEstadoPago?: true
  }

  export type PagoSumAggregateInputType = {
    codPago?: true
    montoPagado?: true
    transaccionId?: true
    codMedioPago?: true
    codEstadoPago?: true
  }

  export type PagoMinAggregateInputType = {
    codPago?: true
    nombreTipoMedioPago?: true
    montoPagado?: true
    transaccionId?: true
    fechaHoraPago?: true
    codMedioPago?: true
    codEstadoPago?: true
  }

  export type PagoMaxAggregateInputType = {
    codPago?: true
    nombreTipoMedioPago?: true
    montoPagado?: true
    transaccionId?: true
    fechaHoraPago?: true
    codMedioPago?: true
    codEstadoPago?: true
  }

  export type PagoCountAggregateInputType = {
    codPago?: true
    nombreTipoMedioPago?: true
    montoPagado?: true
    transaccionId?: true
    fechaHoraPago?: true
    codMedioPago?: true
    codEstadoPago?: true
    _all?: true
  }

  export type PagoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pago to aggregate.
     */
    where?: PagoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pagos to fetch.
     */
    orderBy?: PagoOrderByWithRelationInput | PagoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PagoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pagos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Pagos
    **/
    _count?: true | PagoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PagoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PagoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PagoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PagoMaxAggregateInputType
  }

  export type GetPagoAggregateType<T extends PagoAggregateArgs> = {
        [P in keyof T & keyof AggregatePago]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePago[P]>
      : GetScalarType<T[P], AggregatePago[P]>
  }




  export type PagoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PagoWhereInput
    orderBy?: PagoOrderByWithAggregationInput | PagoOrderByWithAggregationInput[]
    by: PagoScalarFieldEnum[] | PagoScalarFieldEnum
    having?: PagoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PagoCountAggregateInputType | true
    _avg?: PagoAvgAggregateInputType
    _sum?: PagoSumAggregateInputType
    _min?: PagoMinAggregateInputType
    _max?: PagoMaxAggregateInputType
  }

  export type PagoGroupByOutputType = {
    codPago: number
    nombreTipoMedioPago: string
    montoPagado: number
    transaccionId: number
    fechaHoraPago: Date | null
    codMedioPago: number
    codEstadoPago: number
    _count: PagoCountAggregateOutputType | null
    _avg: PagoAvgAggregateOutputType | null
    _sum: PagoSumAggregateOutputType | null
    _min: PagoMinAggregateOutputType | null
    _max: PagoMaxAggregateOutputType | null
  }

  type GetPagoGroupByPayload<T extends PagoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PagoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PagoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PagoGroupByOutputType[P]>
            : GetScalarType<T[P], PagoGroupByOutputType[P]>
        }
      >
    >


  export type PagoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codPago?: boolean
    nombreTipoMedioPago?: boolean
    montoPagado?: boolean
    transaccionId?: boolean
    fechaHoraPago?: boolean
    codMedioPago?: boolean
    codEstadoPago?: boolean
    medioPago?: boolean | MedioPagoDefaultArgs<ExtArgs>
    estadoPago?: boolean | EstadoPagoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pago"]>

  export type PagoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codPago?: boolean
    nombreTipoMedioPago?: boolean
    montoPagado?: boolean
    transaccionId?: boolean
    fechaHoraPago?: boolean
    codMedioPago?: boolean
    codEstadoPago?: boolean
    medioPago?: boolean | MedioPagoDefaultArgs<ExtArgs>
    estadoPago?: boolean | EstadoPagoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pago"]>

  export type PagoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codPago?: boolean
    nombreTipoMedioPago?: boolean
    montoPagado?: boolean
    transaccionId?: boolean
    fechaHoraPago?: boolean
    codMedioPago?: boolean
    codEstadoPago?: boolean
    medioPago?: boolean | MedioPagoDefaultArgs<ExtArgs>
    estadoPago?: boolean | EstadoPagoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pago"]>

  export type PagoSelectScalar = {
    codPago?: boolean
    nombreTipoMedioPago?: boolean
    montoPagado?: boolean
    transaccionId?: boolean
    fechaHoraPago?: boolean
    codMedioPago?: boolean
    codEstadoPago?: boolean
  }

  export type PagoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"codPago" | "nombreTipoMedioPago" | "montoPagado" | "transaccionId" | "fechaHoraPago" | "codMedioPago" | "codEstadoPago", ExtArgs["result"]["pago"]>
  export type PagoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    medioPago?: boolean | MedioPagoDefaultArgs<ExtArgs>
    estadoPago?: boolean | EstadoPagoDefaultArgs<ExtArgs>
  }
  export type PagoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    medioPago?: boolean | MedioPagoDefaultArgs<ExtArgs>
    estadoPago?: boolean | EstadoPagoDefaultArgs<ExtArgs>
  }
  export type PagoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    medioPago?: boolean | MedioPagoDefaultArgs<ExtArgs>
    estadoPago?: boolean | EstadoPagoDefaultArgs<ExtArgs>
  }

  export type $PagoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Pago"
    objects: {
      medioPago: Prisma.$MedioPagoPayload<ExtArgs>
      estadoPago: Prisma.$EstadoPagoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      codPago: number
      nombreTipoMedioPago: string
      montoPagado: number
      transaccionId: number
      fechaHoraPago: Date | null
      codMedioPago: number
      codEstadoPago: number
    }, ExtArgs["result"]["pago"]>
    composites: {}
  }

  type PagoGetPayload<S extends boolean | null | undefined | PagoDefaultArgs> = $Result.GetResult<Prisma.$PagoPayload, S>

  type PagoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PagoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PagoCountAggregateInputType | true
    }

  export interface PagoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Pago'], meta: { name: 'Pago' } }
    /**
     * Find zero or one Pago that matches the filter.
     * @param {PagoFindUniqueArgs} args - Arguments to find a Pago
     * @example
     * // Get one Pago
     * const pago = await prisma.pago.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PagoFindUniqueArgs>(args: SelectSubset<T, PagoFindUniqueArgs<ExtArgs>>): Prisma__PagoClient<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Pago that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PagoFindUniqueOrThrowArgs} args - Arguments to find a Pago
     * @example
     * // Get one Pago
     * const pago = await prisma.pago.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PagoFindUniqueOrThrowArgs>(args: SelectSubset<T, PagoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PagoClient<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pago that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagoFindFirstArgs} args - Arguments to find a Pago
     * @example
     * // Get one Pago
     * const pago = await prisma.pago.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PagoFindFirstArgs>(args?: SelectSubset<T, PagoFindFirstArgs<ExtArgs>>): Prisma__PagoClient<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pago that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagoFindFirstOrThrowArgs} args - Arguments to find a Pago
     * @example
     * // Get one Pago
     * const pago = await prisma.pago.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PagoFindFirstOrThrowArgs>(args?: SelectSubset<T, PagoFindFirstOrThrowArgs<ExtArgs>>): Prisma__PagoClient<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Pagos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pagos
     * const pagos = await prisma.pago.findMany()
     * 
     * // Get first 10 Pagos
     * const pagos = await prisma.pago.findMany({ take: 10 })
     * 
     * // Only select the `codPago`
     * const pagoWithCodPagoOnly = await prisma.pago.findMany({ select: { codPago: true } })
     * 
     */
    findMany<T extends PagoFindManyArgs>(args?: SelectSubset<T, PagoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Pago.
     * @param {PagoCreateArgs} args - Arguments to create a Pago.
     * @example
     * // Create one Pago
     * const Pago = await prisma.pago.create({
     *   data: {
     *     // ... data to create a Pago
     *   }
     * })
     * 
     */
    create<T extends PagoCreateArgs>(args: SelectSubset<T, PagoCreateArgs<ExtArgs>>): Prisma__PagoClient<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Pagos.
     * @param {PagoCreateManyArgs} args - Arguments to create many Pagos.
     * @example
     * // Create many Pagos
     * const pago = await prisma.pago.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PagoCreateManyArgs>(args?: SelectSubset<T, PagoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Pagos and returns the data saved in the database.
     * @param {PagoCreateManyAndReturnArgs} args - Arguments to create many Pagos.
     * @example
     * // Create many Pagos
     * const pago = await prisma.pago.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Pagos and only return the `codPago`
     * const pagoWithCodPagoOnly = await prisma.pago.createManyAndReturn({
     *   select: { codPago: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PagoCreateManyAndReturnArgs>(args?: SelectSubset<T, PagoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Pago.
     * @param {PagoDeleteArgs} args - Arguments to delete one Pago.
     * @example
     * // Delete one Pago
     * const Pago = await prisma.pago.delete({
     *   where: {
     *     // ... filter to delete one Pago
     *   }
     * })
     * 
     */
    delete<T extends PagoDeleteArgs>(args: SelectSubset<T, PagoDeleteArgs<ExtArgs>>): Prisma__PagoClient<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Pago.
     * @param {PagoUpdateArgs} args - Arguments to update one Pago.
     * @example
     * // Update one Pago
     * const pago = await prisma.pago.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PagoUpdateArgs>(args: SelectSubset<T, PagoUpdateArgs<ExtArgs>>): Prisma__PagoClient<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Pagos.
     * @param {PagoDeleteManyArgs} args - Arguments to filter Pagos to delete.
     * @example
     * // Delete a few Pagos
     * const { count } = await prisma.pago.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PagoDeleteManyArgs>(args?: SelectSubset<T, PagoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pagos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pagos
     * const pago = await prisma.pago.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PagoUpdateManyArgs>(args: SelectSubset<T, PagoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pagos and returns the data updated in the database.
     * @param {PagoUpdateManyAndReturnArgs} args - Arguments to update many Pagos.
     * @example
     * // Update many Pagos
     * const pago = await prisma.pago.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Pagos and only return the `codPago`
     * const pagoWithCodPagoOnly = await prisma.pago.updateManyAndReturn({
     *   select: { codPago: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PagoUpdateManyAndReturnArgs>(args: SelectSubset<T, PagoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Pago.
     * @param {PagoUpsertArgs} args - Arguments to update or create a Pago.
     * @example
     * // Update or create a Pago
     * const pago = await prisma.pago.upsert({
     *   create: {
     *     // ... data to create a Pago
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pago we want to update
     *   }
     * })
     */
    upsert<T extends PagoUpsertArgs>(args: SelectSubset<T, PagoUpsertArgs<ExtArgs>>): Prisma__PagoClient<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Pagos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagoCountArgs} args - Arguments to filter Pagos to count.
     * @example
     * // Count the number of Pagos
     * const count = await prisma.pago.count({
     *   where: {
     *     // ... the filter for the Pagos we want to count
     *   }
     * })
    **/
    count<T extends PagoCountArgs>(
      args?: Subset<T, PagoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PagoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pago.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PagoAggregateArgs>(args: Subset<T, PagoAggregateArgs>): Prisma.PrismaPromise<GetPagoAggregateType<T>>

    /**
     * Group by Pago.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PagoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PagoGroupByArgs['orderBy'] }
        : { orderBy?: PagoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PagoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPagoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Pago model
   */
  readonly fields: PagoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Pago.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PagoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    medioPago<T extends MedioPagoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MedioPagoDefaultArgs<ExtArgs>>): Prisma__MedioPagoClient<$Result.GetResult<Prisma.$MedioPagoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    estadoPago<T extends EstadoPagoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EstadoPagoDefaultArgs<ExtArgs>>): Prisma__EstadoPagoClient<$Result.GetResult<Prisma.$EstadoPagoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Pago model
   */
  interface PagoFieldRefs {
    readonly codPago: FieldRef<"Pago", 'Int'>
    readonly nombreTipoMedioPago: FieldRef<"Pago", 'String'>
    readonly montoPagado: FieldRef<"Pago", 'Float'>
    readonly transaccionId: FieldRef<"Pago", 'Int'>
    readonly fechaHoraPago: FieldRef<"Pago", 'DateTime'>
    readonly codMedioPago: FieldRef<"Pago", 'Int'>
    readonly codEstadoPago: FieldRef<"Pago", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Pago findUnique
   */
  export type PagoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pago
     */
    omit?: PagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
    /**
     * Filter, which Pago to fetch.
     */
    where: PagoWhereUniqueInput
  }

  /**
   * Pago findUniqueOrThrow
   */
  export type PagoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pago
     */
    omit?: PagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
    /**
     * Filter, which Pago to fetch.
     */
    where: PagoWhereUniqueInput
  }

  /**
   * Pago findFirst
   */
  export type PagoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pago
     */
    omit?: PagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
    /**
     * Filter, which Pago to fetch.
     */
    where?: PagoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pagos to fetch.
     */
    orderBy?: PagoOrderByWithRelationInput | PagoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pagos.
     */
    cursor?: PagoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pagos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pagos.
     */
    distinct?: PagoScalarFieldEnum | PagoScalarFieldEnum[]
  }

  /**
   * Pago findFirstOrThrow
   */
  export type PagoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pago
     */
    omit?: PagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
    /**
     * Filter, which Pago to fetch.
     */
    where?: PagoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pagos to fetch.
     */
    orderBy?: PagoOrderByWithRelationInput | PagoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pagos.
     */
    cursor?: PagoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pagos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pagos.
     */
    distinct?: PagoScalarFieldEnum | PagoScalarFieldEnum[]
  }

  /**
   * Pago findMany
   */
  export type PagoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pago
     */
    omit?: PagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
    /**
     * Filter, which Pagos to fetch.
     */
    where?: PagoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pagos to fetch.
     */
    orderBy?: PagoOrderByWithRelationInput | PagoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Pagos.
     */
    cursor?: PagoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pagos.
     */
    skip?: number
    distinct?: PagoScalarFieldEnum | PagoScalarFieldEnum[]
  }

  /**
   * Pago create
   */
  export type PagoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pago
     */
    omit?: PagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
    /**
     * The data needed to create a Pago.
     */
    data: XOR<PagoCreateInput, PagoUncheckedCreateInput>
  }

  /**
   * Pago createMany
   */
  export type PagoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Pagos.
     */
    data: PagoCreateManyInput | PagoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Pago createManyAndReturn
   */
  export type PagoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Pago
     */
    omit?: PagoOmit<ExtArgs> | null
    /**
     * The data used to create many Pagos.
     */
    data: PagoCreateManyInput | PagoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Pago update
   */
  export type PagoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pago
     */
    omit?: PagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
    /**
     * The data needed to update a Pago.
     */
    data: XOR<PagoUpdateInput, PagoUncheckedUpdateInput>
    /**
     * Choose, which Pago to update.
     */
    where: PagoWhereUniqueInput
  }

  /**
   * Pago updateMany
   */
  export type PagoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Pagos.
     */
    data: XOR<PagoUpdateManyMutationInput, PagoUncheckedUpdateManyInput>
    /**
     * Filter which Pagos to update
     */
    where?: PagoWhereInput
    /**
     * Limit how many Pagos to update.
     */
    limit?: number
  }

  /**
   * Pago updateManyAndReturn
   */
  export type PagoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Pago
     */
    omit?: PagoOmit<ExtArgs> | null
    /**
     * The data used to update Pagos.
     */
    data: XOR<PagoUpdateManyMutationInput, PagoUncheckedUpdateManyInput>
    /**
     * Filter which Pagos to update
     */
    where?: PagoWhereInput
    /**
     * Limit how many Pagos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Pago upsert
   */
  export type PagoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pago
     */
    omit?: PagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
    /**
     * The filter to search for the Pago to update in case it exists.
     */
    where: PagoWhereUniqueInput
    /**
     * In case the Pago found by the `where` argument doesn't exist, create a new Pago with this data.
     */
    create: XOR<PagoCreateInput, PagoUncheckedCreateInput>
    /**
     * In case the Pago was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PagoUpdateInput, PagoUncheckedUpdateInput>
  }

  /**
   * Pago delete
   */
  export type PagoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pago
     */
    omit?: PagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
    /**
     * Filter which Pago to delete.
     */
    where: PagoWhereUniqueInput
  }

  /**
   * Pago deleteMany
   */
  export type PagoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pagos to delete
     */
    where?: PagoWhereInput
    /**
     * Limit how many Pagos to delete.
     */
    limit?: number
  }

  /**
   * Pago without action
   */
  export type PagoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pago
     */
    omit?: PagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
  }


  /**
   * Model EstadoPago
   */

  export type AggregateEstadoPago = {
    _count: EstadoPagoCountAggregateOutputType | null
    _avg: EstadoPagoAvgAggregateOutputType | null
    _sum: EstadoPagoSumAggregateOutputType | null
    _min: EstadoPagoMinAggregateOutputType | null
    _max: EstadoPagoMaxAggregateOutputType | null
  }

  export type EstadoPagoAvgAggregateOutputType = {
    codEstadoPago: number | null
  }

  export type EstadoPagoSumAggregateOutputType = {
    codEstadoPago: number | null
  }

  export type EstadoPagoMinAggregateOutputType = {
    codEstadoPago: number | null
    nombreEstadoPago: string | null
    fechaHoraBajaEP: Date | null
  }

  export type EstadoPagoMaxAggregateOutputType = {
    codEstadoPago: number | null
    nombreEstadoPago: string | null
    fechaHoraBajaEP: Date | null
  }

  export type EstadoPagoCountAggregateOutputType = {
    codEstadoPago: number
    nombreEstadoPago: number
    fechaHoraBajaEP: number
    _all: number
  }


  export type EstadoPagoAvgAggregateInputType = {
    codEstadoPago?: true
  }

  export type EstadoPagoSumAggregateInputType = {
    codEstadoPago?: true
  }

  export type EstadoPagoMinAggregateInputType = {
    codEstadoPago?: true
    nombreEstadoPago?: true
    fechaHoraBajaEP?: true
  }

  export type EstadoPagoMaxAggregateInputType = {
    codEstadoPago?: true
    nombreEstadoPago?: true
    fechaHoraBajaEP?: true
  }

  export type EstadoPagoCountAggregateInputType = {
    codEstadoPago?: true
    nombreEstadoPago?: true
    fechaHoraBajaEP?: true
    _all?: true
  }

  export type EstadoPagoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EstadoPago to aggregate.
     */
    where?: EstadoPagoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstadoPagos to fetch.
     */
    orderBy?: EstadoPagoOrderByWithRelationInput | EstadoPagoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EstadoPagoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstadoPagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstadoPagos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EstadoPagos
    **/
    _count?: true | EstadoPagoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EstadoPagoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EstadoPagoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EstadoPagoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EstadoPagoMaxAggregateInputType
  }

  export type GetEstadoPagoAggregateType<T extends EstadoPagoAggregateArgs> = {
        [P in keyof T & keyof AggregateEstadoPago]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEstadoPago[P]>
      : GetScalarType<T[P], AggregateEstadoPago[P]>
  }




  export type EstadoPagoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EstadoPagoWhereInput
    orderBy?: EstadoPagoOrderByWithAggregationInput | EstadoPagoOrderByWithAggregationInput[]
    by: EstadoPagoScalarFieldEnum[] | EstadoPagoScalarFieldEnum
    having?: EstadoPagoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EstadoPagoCountAggregateInputType | true
    _avg?: EstadoPagoAvgAggregateInputType
    _sum?: EstadoPagoSumAggregateInputType
    _min?: EstadoPagoMinAggregateInputType
    _max?: EstadoPagoMaxAggregateInputType
  }

  export type EstadoPagoGroupByOutputType = {
    codEstadoPago: number
    nombreEstadoPago: string
    fechaHoraBajaEP: Date | null
    _count: EstadoPagoCountAggregateOutputType | null
    _avg: EstadoPagoAvgAggregateOutputType | null
    _sum: EstadoPagoSumAggregateOutputType | null
    _min: EstadoPagoMinAggregateOutputType | null
    _max: EstadoPagoMaxAggregateOutputType | null
  }

  type GetEstadoPagoGroupByPayload<T extends EstadoPagoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EstadoPagoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EstadoPagoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EstadoPagoGroupByOutputType[P]>
            : GetScalarType<T[P], EstadoPagoGroupByOutputType[P]>
        }
      >
    >


  export type EstadoPagoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codEstadoPago?: boolean
    nombreEstadoPago?: boolean
    fechaHoraBajaEP?: boolean
    pagos?: boolean | EstadoPago$pagosArgs<ExtArgs>
    _count?: boolean | EstadoPagoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["estadoPago"]>

  export type EstadoPagoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codEstadoPago?: boolean
    nombreEstadoPago?: boolean
    fechaHoraBajaEP?: boolean
  }, ExtArgs["result"]["estadoPago"]>

  export type EstadoPagoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codEstadoPago?: boolean
    nombreEstadoPago?: boolean
    fechaHoraBajaEP?: boolean
  }, ExtArgs["result"]["estadoPago"]>

  export type EstadoPagoSelectScalar = {
    codEstadoPago?: boolean
    nombreEstadoPago?: boolean
    fechaHoraBajaEP?: boolean
  }

  export type EstadoPagoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"codEstadoPago" | "nombreEstadoPago" | "fechaHoraBajaEP", ExtArgs["result"]["estadoPago"]>
  export type EstadoPagoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pagos?: boolean | EstadoPago$pagosArgs<ExtArgs>
    _count?: boolean | EstadoPagoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EstadoPagoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type EstadoPagoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $EstadoPagoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EstadoPago"
    objects: {
      pagos: Prisma.$PagoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      codEstadoPago: number
      nombreEstadoPago: string
      fechaHoraBajaEP: Date | null
    }, ExtArgs["result"]["estadoPago"]>
    composites: {}
  }

  type EstadoPagoGetPayload<S extends boolean | null | undefined | EstadoPagoDefaultArgs> = $Result.GetResult<Prisma.$EstadoPagoPayload, S>

  type EstadoPagoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EstadoPagoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EstadoPagoCountAggregateInputType | true
    }

  export interface EstadoPagoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EstadoPago'], meta: { name: 'EstadoPago' } }
    /**
     * Find zero or one EstadoPago that matches the filter.
     * @param {EstadoPagoFindUniqueArgs} args - Arguments to find a EstadoPago
     * @example
     * // Get one EstadoPago
     * const estadoPago = await prisma.estadoPago.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EstadoPagoFindUniqueArgs>(args: SelectSubset<T, EstadoPagoFindUniqueArgs<ExtArgs>>): Prisma__EstadoPagoClient<$Result.GetResult<Prisma.$EstadoPagoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one EstadoPago that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EstadoPagoFindUniqueOrThrowArgs} args - Arguments to find a EstadoPago
     * @example
     * // Get one EstadoPago
     * const estadoPago = await prisma.estadoPago.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EstadoPagoFindUniqueOrThrowArgs>(args: SelectSubset<T, EstadoPagoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EstadoPagoClient<$Result.GetResult<Prisma.$EstadoPagoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EstadoPago that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadoPagoFindFirstArgs} args - Arguments to find a EstadoPago
     * @example
     * // Get one EstadoPago
     * const estadoPago = await prisma.estadoPago.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EstadoPagoFindFirstArgs>(args?: SelectSubset<T, EstadoPagoFindFirstArgs<ExtArgs>>): Prisma__EstadoPagoClient<$Result.GetResult<Prisma.$EstadoPagoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EstadoPago that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadoPagoFindFirstOrThrowArgs} args - Arguments to find a EstadoPago
     * @example
     * // Get one EstadoPago
     * const estadoPago = await prisma.estadoPago.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EstadoPagoFindFirstOrThrowArgs>(args?: SelectSubset<T, EstadoPagoFindFirstOrThrowArgs<ExtArgs>>): Prisma__EstadoPagoClient<$Result.GetResult<Prisma.$EstadoPagoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more EstadoPagos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadoPagoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EstadoPagos
     * const estadoPagos = await prisma.estadoPago.findMany()
     * 
     * // Get first 10 EstadoPagos
     * const estadoPagos = await prisma.estadoPago.findMany({ take: 10 })
     * 
     * // Only select the `codEstadoPago`
     * const estadoPagoWithCodEstadoPagoOnly = await prisma.estadoPago.findMany({ select: { codEstadoPago: true } })
     * 
     */
    findMany<T extends EstadoPagoFindManyArgs>(args?: SelectSubset<T, EstadoPagoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstadoPagoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a EstadoPago.
     * @param {EstadoPagoCreateArgs} args - Arguments to create a EstadoPago.
     * @example
     * // Create one EstadoPago
     * const EstadoPago = await prisma.estadoPago.create({
     *   data: {
     *     // ... data to create a EstadoPago
     *   }
     * })
     * 
     */
    create<T extends EstadoPagoCreateArgs>(args: SelectSubset<T, EstadoPagoCreateArgs<ExtArgs>>): Prisma__EstadoPagoClient<$Result.GetResult<Prisma.$EstadoPagoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many EstadoPagos.
     * @param {EstadoPagoCreateManyArgs} args - Arguments to create many EstadoPagos.
     * @example
     * // Create many EstadoPagos
     * const estadoPago = await prisma.estadoPago.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EstadoPagoCreateManyArgs>(args?: SelectSubset<T, EstadoPagoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many EstadoPagos and returns the data saved in the database.
     * @param {EstadoPagoCreateManyAndReturnArgs} args - Arguments to create many EstadoPagos.
     * @example
     * // Create many EstadoPagos
     * const estadoPago = await prisma.estadoPago.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many EstadoPagos and only return the `codEstadoPago`
     * const estadoPagoWithCodEstadoPagoOnly = await prisma.estadoPago.createManyAndReturn({
     *   select: { codEstadoPago: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EstadoPagoCreateManyAndReturnArgs>(args?: SelectSubset<T, EstadoPagoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstadoPagoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a EstadoPago.
     * @param {EstadoPagoDeleteArgs} args - Arguments to delete one EstadoPago.
     * @example
     * // Delete one EstadoPago
     * const EstadoPago = await prisma.estadoPago.delete({
     *   where: {
     *     // ... filter to delete one EstadoPago
     *   }
     * })
     * 
     */
    delete<T extends EstadoPagoDeleteArgs>(args: SelectSubset<T, EstadoPagoDeleteArgs<ExtArgs>>): Prisma__EstadoPagoClient<$Result.GetResult<Prisma.$EstadoPagoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one EstadoPago.
     * @param {EstadoPagoUpdateArgs} args - Arguments to update one EstadoPago.
     * @example
     * // Update one EstadoPago
     * const estadoPago = await prisma.estadoPago.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EstadoPagoUpdateArgs>(args: SelectSubset<T, EstadoPagoUpdateArgs<ExtArgs>>): Prisma__EstadoPagoClient<$Result.GetResult<Prisma.$EstadoPagoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more EstadoPagos.
     * @param {EstadoPagoDeleteManyArgs} args - Arguments to filter EstadoPagos to delete.
     * @example
     * // Delete a few EstadoPagos
     * const { count } = await prisma.estadoPago.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EstadoPagoDeleteManyArgs>(args?: SelectSubset<T, EstadoPagoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EstadoPagos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadoPagoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EstadoPagos
     * const estadoPago = await prisma.estadoPago.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EstadoPagoUpdateManyArgs>(args: SelectSubset<T, EstadoPagoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EstadoPagos and returns the data updated in the database.
     * @param {EstadoPagoUpdateManyAndReturnArgs} args - Arguments to update many EstadoPagos.
     * @example
     * // Update many EstadoPagos
     * const estadoPago = await prisma.estadoPago.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more EstadoPagos and only return the `codEstadoPago`
     * const estadoPagoWithCodEstadoPagoOnly = await prisma.estadoPago.updateManyAndReturn({
     *   select: { codEstadoPago: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EstadoPagoUpdateManyAndReturnArgs>(args: SelectSubset<T, EstadoPagoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstadoPagoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one EstadoPago.
     * @param {EstadoPagoUpsertArgs} args - Arguments to update or create a EstadoPago.
     * @example
     * // Update or create a EstadoPago
     * const estadoPago = await prisma.estadoPago.upsert({
     *   create: {
     *     // ... data to create a EstadoPago
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EstadoPago we want to update
     *   }
     * })
     */
    upsert<T extends EstadoPagoUpsertArgs>(args: SelectSubset<T, EstadoPagoUpsertArgs<ExtArgs>>): Prisma__EstadoPagoClient<$Result.GetResult<Prisma.$EstadoPagoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of EstadoPagos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadoPagoCountArgs} args - Arguments to filter EstadoPagos to count.
     * @example
     * // Count the number of EstadoPagos
     * const count = await prisma.estadoPago.count({
     *   where: {
     *     // ... the filter for the EstadoPagos we want to count
     *   }
     * })
    **/
    count<T extends EstadoPagoCountArgs>(
      args?: Subset<T, EstadoPagoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EstadoPagoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EstadoPago.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadoPagoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EstadoPagoAggregateArgs>(args: Subset<T, EstadoPagoAggregateArgs>): Prisma.PrismaPromise<GetEstadoPagoAggregateType<T>>

    /**
     * Group by EstadoPago.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadoPagoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EstadoPagoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EstadoPagoGroupByArgs['orderBy'] }
        : { orderBy?: EstadoPagoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EstadoPagoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEstadoPagoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EstadoPago model
   */
  readonly fields: EstadoPagoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EstadoPago.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EstadoPagoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    pagos<T extends EstadoPago$pagosArgs<ExtArgs> = {}>(args?: Subset<T, EstadoPago$pagosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EstadoPago model
   */
  interface EstadoPagoFieldRefs {
    readonly codEstadoPago: FieldRef<"EstadoPago", 'Int'>
    readonly nombreEstadoPago: FieldRef<"EstadoPago", 'String'>
    readonly fechaHoraBajaEP: FieldRef<"EstadoPago", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * EstadoPago findUnique
   */
  export type EstadoPagoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoPago
     */
    select?: EstadoPagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoPago
     */
    omit?: EstadoPagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoPagoInclude<ExtArgs> | null
    /**
     * Filter, which EstadoPago to fetch.
     */
    where: EstadoPagoWhereUniqueInput
  }

  /**
   * EstadoPago findUniqueOrThrow
   */
  export type EstadoPagoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoPago
     */
    select?: EstadoPagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoPago
     */
    omit?: EstadoPagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoPagoInclude<ExtArgs> | null
    /**
     * Filter, which EstadoPago to fetch.
     */
    where: EstadoPagoWhereUniqueInput
  }

  /**
   * EstadoPago findFirst
   */
  export type EstadoPagoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoPago
     */
    select?: EstadoPagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoPago
     */
    omit?: EstadoPagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoPagoInclude<ExtArgs> | null
    /**
     * Filter, which EstadoPago to fetch.
     */
    where?: EstadoPagoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstadoPagos to fetch.
     */
    orderBy?: EstadoPagoOrderByWithRelationInput | EstadoPagoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EstadoPagos.
     */
    cursor?: EstadoPagoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstadoPagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstadoPagos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EstadoPagos.
     */
    distinct?: EstadoPagoScalarFieldEnum | EstadoPagoScalarFieldEnum[]
  }

  /**
   * EstadoPago findFirstOrThrow
   */
  export type EstadoPagoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoPago
     */
    select?: EstadoPagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoPago
     */
    omit?: EstadoPagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoPagoInclude<ExtArgs> | null
    /**
     * Filter, which EstadoPago to fetch.
     */
    where?: EstadoPagoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstadoPagos to fetch.
     */
    orderBy?: EstadoPagoOrderByWithRelationInput | EstadoPagoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EstadoPagos.
     */
    cursor?: EstadoPagoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstadoPagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstadoPagos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EstadoPagos.
     */
    distinct?: EstadoPagoScalarFieldEnum | EstadoPagoScalarFieldEnum[]
  }

  /**
   * EstadoPago findMany
   */
  export type EstadoPagoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoPago
     */
    select?: EstadoPagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoPago
     */
    omit?: EstadoPagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoPagoInclude<ExtArgs> | null
    /**
     * Filter, which EstadoPagos to fetch.
     */
    where?: EstadoPagoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstadoPagos to fetch.
     */
    orderBy?: EstadoPagoOrderByWithRelationInput | EstadoPagoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EstadoPagos.
     */
    cursor?: EstadoPagoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstadoPagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstadoPagos.
     */
    skip?: number
    distinct?: EstadoPagoScalarFieldEnum | EstadoPagoScalarFieldEnum[]
  }

  /**
   * EstadoPago create
   */
  export type EstadoPagoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoPago
     */
    select?: EstadoPagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoPago
     */
    omit?: EstadoPagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoPagoInclude<ExtArgs> | null
    /**
     * The data needed to create a EstadoPago.
     */
    data: XOR<EstadoPagoCreateInput, EstadoPagoUncheckedCreateInput>
  }

  /**
   * EstadoPago createMany
   */
  export type EstadoPagoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EstadoPagos.
     */
    data: EstadoPagoCreateManyInput | EstadoPagoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EstadoPago createManyAndReturn
   */
  export type EstadoPagoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoPago
     */
    select?: EstadoPagoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoPago
     */
    omit?: EstadoPagoOmit<ExtArgs> | null
    /**
     * The data used to create many EstadoPagos.
     */
    data: EstadoPagoCreateManyInput | EstadoPagoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EstadoPago update
   */
  export type EstadoPagoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoPago
     */
    select?: EstadoPagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoPago
     */
    omit?: EstadoPagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoPagoInclude<ExtArgs> | null
    /**
     * The data needed to update a EstadoPago.
     */
    data: XOR<EstadoPagoUpdateInput, EstadoPagoUncheckedUpdateInput>
    /**
     * Choose, which EstadoPago to update.
     */
    where: EstadoPagoWhereUniqueInput
  }

  /**
   * EstadoPago updateMany
   */
  export type EstadoPagoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EstadoPagos.
     */
    data: XOR<EstadoPagoUpdateManyMutationInput, EstadoPagoUncheckedUpdateManyInput>
    /**
     * Filter which EstadoPagos to update
     */
    where?: EstadoPagoWhereInput
    /**
     * Limit how many EstadoPagos to update.
     */
    limit?: number
  }

  /**
   * EstadoPago updateManyAndReturn
   */
  export type EstadoPagoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoPago
     */
    select?: EstadoPagoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoPago
     */
    omit?: EstadoPagoOmit<ExtArgs> | null
    /**
     * The data used to update EstadoPagos.
     */
    data: XOR<EstadoPagoUpdateManyMutationInput, EstadoPagoUncheckedUpdateManyInput>
    /**
     * Filter which EstadoPagos to update
     */
    where?: EstadoPagoWhereInput
    /**
     * Limit how many EstadoPagos to update.
     */
    limit?: number
  }

  /**
   * EstadoPago upsert
   */
  export type EstadoPagoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoPago
     */
    select?: EstadoPagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoPago
     */
    omit?: EstadoPagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoPagoInclude<ExtArgs> | null
    /**
     * The filter to search for the EstadoPago to update in case it exists.
     */
    where: EstadoPagoWhereUniqueInput
    /**
     * In case the EstadoPago found by the `where` argument doesn't exist, create a new EstadoPago with this data.
     */
    create: XOR<EstadoPagoCreateInput, EstadoPagoUncheckedCreateInput>
    /**
     * In case the EstadoPago was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EstadoPagoUpdateInput, EstadoPagoUncheckedUpdateInput>
  }

  /**
   * EstadoPago delete
   */
  export type EstadoPagoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoPago
     */
    select?: EstadoPagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoPago
     */
    omit?: EstadoPagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoPagoInclude<ExtArgs> | null
    /**
     * Filter which EstadoPago to delete.
     */
    where: EstadoPagoWhereUniqueInput
  }

  /**
   * EstadoPago deleteMany
   */
  export type EstadoPagoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EstadoPagos to delete
     */
    where?: EstadoPagoWhereInput
    /**
     * Limit how many EstadoPagos to delete.
     */
    limit?: number
  }

  /**
   * EstadoPago.pagos
   */
  export type EstadoPago$pagosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pago
     */
    omit?: PagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
    where?: PagoWhereInput
    orderBy?: PagoOrderByWithRelationInput | PagoOrderByWithRelationInput[]
    cursor?: PagoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PagoScalarFieldEnum | PagoScalarFieldEnum[]
  }

  /**
   * EstadoPago without action
   */
  export type EstadoPagoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoPago
     */
    select?: EstadoPagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadoPago
     */
    omit?: EstadoPagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadoPagoInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const ClienteScalarFieldEnum: {
    codCliente: 'codCliente',
    nombreCliente: 'nombreCliente',
    dni: 'dni',
    telefono: 'telefono',
    fechaHoraBajaCliente: 'fechaHoraBajaCliente',
    codUsuario: 'codUsuario',
    codListaFavorito: 'codListaFavorito'
  };

  export type ClienteScalarFieldEnum = (typeof ClienteScalarFieldEnum)[keyof typeof ClienteScalarFieldEnum]


  export const UsuarioScalarFieldEnum: {
    codUsuario: 'codUsuario',
    nombreUsuario: 'nombreUsuario',
    contraseñaUsuario: 'contraseñaUsuario',
    emailUsuario: 'emailUsuario',
    fechaRegistroUsuario: 'fechaRegistroUsuario',
    codRolUsuario: 'codRolUsuario'
  };

  export type UsuarioScalarFieldEnum = (typeof UsuarioScalarFieldEnum)[keyof typeof UsuarioScalarFieldEnum]


  export const RolUsuarioScalarFieldEnum: {
    codRolUsuario: 'codRolUsuario',
    nombreRolUsuario: 'nombreRolUsuario',
    fechaHoraBajaRol: 'fechaHoraBajaRol',
    permisoUsuario: 'permisoUsuario',
    activo: 'activo',
    verificado: 'verificado',
    tokenVerificacion: 'tokenVerificacion'
  };

  export type RolUsuarioScalarFieldEnum = (typeof RolUsuarioScalarFieldEnum)[keyof typeof RolUsuarioScalarFieldEnum]


  export const DireccionScalarFieldEnum: {
    codigoDireccion: 'codigoDireccion',
    calle: 'calle',
    ciudad: 'ciudad',
    localidad: 'localidad',
    pais: 'pais',
    codigoPostal: 'codigoPostal',
    codCliente: 'codCliente'
  };

  export type DireccionScalarFieldEnum = (typeof DireccionScalarFieldEnum)[keyof typeof DireccionScalarFieldEnum]


  export const PedidoScalarFieldEnum: {
    codPedido: 'codPedido',
    impuestoSobreVenta: 'impuestoSobreVenta',
    envioGratuito: 'envioGratuito',
    montoTotal: 'montoTotal',
    fechaAltaPedido: 'fechaAltaPedido',
    codCliente: 'codCliente',
    codCarritoCompra: 'codCarritoCompra',
    codEstadoPedido: 'codEstadoPedido'
  };

  export type PedidoScalarFieldEnum = (typeof PedidoScalarFieldEnum)[keyof typeof PedidoScalarFieldEnum]


  export const EstadoPedidoScalarFieldEnum: {
    codEstadoPedido: 'codEstadoPedido',
    nombreEstadoPedido: 'nombreEstadoPedido',
    fechaHoraBajaEP: 'fechaHoraBajaEP'
  };

  export type EstadoPedidoScalarFieldEnum = (typeof EstadoPedidoScalarFieldEnum)[keyof typeof EstadoPedidoScalarFieldEnum]


  export const CarritoComprasScalarFieldEnum: {
    codCarritoCompra: 'codCarritoCompra',
    montoCarritoCompra: 'montoCarritoCompra',
    codPedido: 'codPedido'
  };

  export type CarritoComprasScalarFieldEnum = (typeof CarritoComprasScalarFieldEnum)[keyof typeof CarritoComprasScalarFieldEnum]


  export const ListaFavoritoScalarFieldEnum: {
    codListaFavorito: 'codListaFavorito',
    nombreListaFavorito: 'nombreListaFavorito',
    codCliente: 'codCliente'
  };

  export type ListaFavoritoScalarFieldEnum = (typeof ListaFavoritoScalarFieldEnum)[keyof typeof ListaFavoritoScalarFieldEnum]


  export const ArticuloScalarFieldEnum: {
    codArticulo: 'codArticulo',
    nombreArticulo: 'nombreArticulo',
    descripcion: 'descripcion',
    stock: 'stock',
    precio: 'precio',
    codCategoria: 'codCategoria'
  };

  export type ArticuloScalarFieldEnum = (typeof ArticuloScalarFieldEnum)[keyof typeof ArticuloScalarFieldEnum]


  export const CategoriaScalarFieldEnum: {
    codCategoria: 'codCategoria',
    nombreCategoria: 'nombreCategoria',
    descripcion: 'descripcion',
    fechaBajaCategoria: 'fechaBajaCategoria'
  };

  export type CategoriaScalarFieldEnum = (typeof CategoriaScalarFieldEnum)[keyof typeof CategoriaScalarFieldEnum]


  export const ArticuloPedidoScalarFieldEnum: {
    cantidadArtPed: 'cantidadArtPed',
    nroRenglon: 'nroRenglon',
    montoArticuloPe: 'montoArticuloPe',
    PrecioUnitario: 'PrecioUnitario',
    codPedido: 'codPedido',
    codCarritoCompra: 'codCarritoCompra',
    codArticulo: 'codArticulo'
  };

  export type ArticuloPedidoScalarFieldEnum = (typeof ArticuloPedidoScalarFieldEnum)[keyof typeof ArticuloPedidoScalarFieldEnum]


  export const EnvioPedidoScalarFieldEnum: {
    codEnvio: 'codEnvio',
    empresaEnvio: 'empresaEnvio',
    costoEnvio: 'costoEnvio',
    fechaSalida: 'fechaSalida',
    fechaEntregaEstimada: 'fechaEntregaEstimada',
    fechaEntregaBaja: 'fechaEntregaBaja',
    codEstadoEnvio: 'codEstadoEnvio',
    codigoDireccion: 'codigoDireccion'
  };

  export type EnvioPedidoScalarFieldEnum = (typeof EnvioPedidoScalarFieldEnum)[keyof typeof EnvioPedidoScalarFieldEnum]


  export const EstadoEnvioScalarFieldEnum: {
    codEstadoEnvio: 'codEstadoEnvio',
    nombreEstadoEnvio: 'nombreEstadoEnvio',
    fechaHoraBajaEE: 'fechaHoraBajaEE'
  };

  export type EstadoEnvioScalarFieldEnum = (typeof EstadoEnvioScalarFieldEnum)[keyof typeof EstadoEnvioScalarFieldEnum]


  export const MedioPagoScalarFieldEnum: {
    codMedioPago: 'codMedioPago',
    nombreTipoMedioPago: 'nombreTipoMedioPago',
    fechaHoraBajaMedioPago: 'fechaHoraBajaMedioPago'
  };

  export type MedioPagoScalarFieldEnum = (typeof MedioPagoScalarFieldEnum)[keyof typeof MedioPagoScalarFieldEnum]


  export const PagoScalarFieldEnum: {
    codPago: 'codPago',
    nombreTipoMedioPago: 'nombreTipoMedioPago',
    montoPagado: 'montoPagado',
    transaccionId: 'transaccionId',
    fechaHoraPago: 'fechaHoraPago',
    codMedioPago: 'codMedioPago',
    codEstadoPago: 'codEstadoPago'
  };

  export type PagoScalarFieldEnum = (typeof PagoScalarFieldEnum)[keyof typeof PagoScalarFieldEnum]


  export const EstadoPagoScalarFieldEnum: {
    codEstadoPago: 'codEstadoPago',
    nombreEstadoPago: 'nombreEstadoPago',
    fechaHoraBajaEP: 'fechaHoraBajaEP'
  };

  export type EstadoPagoScalarFieldEnum = (typeof EstadoPagoScalarFieldEnum)[keyof typeof EstadoPagoScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type ClienteWhereInput = {
    AND?: ClienteWhereInput | ClienteWhereInput[]
    OR?: ClienteWhereInput[]
    NOT?: ClienteWhereInput | ClienteWhereInput[]
    codCliente?: IntFilter<"Cliente"> | number
    nombreCliente?: StringFilter<"Cliente"> | string
    dni?: IntFilter<"Cliente"> | number
    telefono?: IntFilter<"Cliente"> | number
    fechaHoraBajaCliente?: DateTimeNullableFilter<"Cliente"> | Date | string | null
    codUsuario?: IntFilter<"Cliente"> | number
    codListaFavorito?: IntNullableFilter<"Cliente"> | number | null
    direccion?: DireccionListRelationFilter
    usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    medioPago?: MedioPagoListRelationFilter
    Pedido?: PedidoListRelationFilter
    listaFav?: XOR<ListaFavoritoNullableScalarRelationFilter, ListaFavoritoWhereInput> | null
  }

  export type ClienteOrderByWithRelationInput = {
    codCliente?: SortOrder
    nombreCliente?: SortOrder
    dni?: SortOrder
    telefono?: SortOrder
    fechaHoraBajaCliente?: SortOrderInput | SortOrder
    codUsuario?: SortOrder
    codListaFavorito?: SortOrderInput | SortOrder
    direccion?: DireccionOrderByRelationAggregateInput
    usuario?: UsuarioOrderByWithRelationInput
    medioPago?: MedioPagoOrderByRelationAggregateInput
    Pedido?: PedidoOrderByRelationAggregateInput
    listaFav?: ListaFavoritoOrderByWithRelationInput
  }

  export type ClienteWhereUniqueInput = Prisma.AtLeast<{
    codCliente?: number
    codUsuario?: number
    codListaFavorito?: number
    AND?: ClienteWhereInput | ClienteWhereInput[]
    OR?: ClienteWhereInput[]
    NOT?: ClienteWhereInput | ClienteWhereInput[]
    nombreCliente?: StringFilter<"Cliente"> | string
    dni?: IntFilter<"Cliente"> | number
    telefono?: IntFilter<"Cliente"> | number
    fechaHoraBajaCliente?: DateTimeNullableFilter<"Cliente"> | Date | string | null
    direccion?: DireccionListRelationFilter
    usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    medioPago?: MedioPagoListRelationFilter
    Pedido?: PedidoListRelationFilter
    listaFav?: XOR<ListaFavoritoNullableScalarRelationFilter, ListaFavoritoWhereInput> | null
  }, "codCliente" | "codUsuario" | "codListaFavorito">

  export type ClienteOrderByWithAggregationInput = {
    codCliente?: SortOrder
    nombreCliente?: SortOrder
    dni?: SortOrder
    telefono?: SortOrder
    fechaHoraBajaCliente?: SortOrderInput | SortOrder
    codUsuario?: SortOrder
    codListaFavorito?: SortOrderInput | SortOrder
    _count?: ClienteCountOrderByAggregateInput
    _avg?: ClienteAvgOrderByAggregateInput
    _max?: ClienteMaxOrderByAggregateInput
    _min?: ClienteMinOrderByAggregateInput
    _sum?: ClienteSumOrderByAggregateInput
  }

  export type ClienteScalarWhereWithAggregatesInput = {
    AND?: ClienteScalarWhereWithAggregatesInput | ClienteScalarWhereWithAggregatesInput[]
    OR?: ClienteScalarWhereWithAggregatesInput[]
    NOT?: ClienteScalarWhereWithAggregatesInput | ClienteScalarWhereWithAggregatesInput[]
    codCliente?: IntWithAggregatesFilter<"Cliente"> | number
    nombreCliente?: StringWithAggregatesFilter<"Cliente"> | string
    dni?: IntWithAggregatesFilter<"Cliente"> | number
    telefono?: IntWithAggregatesFilter<"Cliente"> | number
    fechaHoraBajaCliente?: DateTimeNullableWithAggregatesFilter<"Cliente"> | Date | string | null
    codUsuario?: IntWithAggregatesFilter<"Cliente"> | number
    codListaFavorito?: IntNullableWithAggregatesFilter<"Cliente"> | number | null
  }

  export type UsuarioWhereInput = {
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    codUsuario?: IntFilter<"Usuario"> | number
    nombreUsuario?: StringFilter<"Usuario"> | string
    contraseñaUsuario?: StringFilter<"Usuario"> | string
    emailUsuario?: StringFilter<"Usuario"> | string
    fechaRegistroUsuario?: DateTimeFilter<"Usuario"> | Date | string
    codRolUsuario?: IntFilter<"Usuario"> | number
    rolUsuario?: XOR<RolUsuarioScalarRelationFilter, RolUsuarioWhereInput>
    cliente?: XOR<ClienteNullableScalarRelationFilter, ClienteWhereInput> | null
  }

  export type UsuarioOrderByWithRelationInput = {
    codUsuario?: SortOrder
    nombreUsuario?: SortOrder
    contraseñaUsuario?: SortOrder
    emailUsuario?: SortOrder
    fechaRegistroUsuario?: SortOrder
    codRolUsuario?: SortOrder
    rolUsuario?: RolUsuarioOrderByWithRelationInput
    cliente?: ClienteOrderByWithRelationInput
  }

  export type UsuarioWhereUniqueInput = Prisma.AtLeast<{
    codUsuario?: number
    emailUsuario?: string
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    nombreUsuario?: StringFilter<"Usuario"> | string
    contraseñaUsuario?: StringFilter<"Usuario"> | string
    fechaRegistroUsuario?: DateTimeFilter<"Usuario"> | Date | string
    codRolUsuario?: IntFilter<"Usuario"> | number
    rolUsuario?: XOR<RolUsuarioScalarRelationFilter, RolUsuarioWhereInput>
    cliente?: XOR<ClienteNullableScalarRelationFilter, ClienteWhereInput> | null
  }, "codUsuario" | "emailUsuario">

  export type UsuarioOrderByWithAggregationInput = {
    codUsuario?: SortOrder
    nombreUsuario?: SortOrder
    contraseñaUsuario?: SortOrder
    emailUsuario?: SortOrder
    fechaRegistroUsuario?: SortOrder
    codRolUsuario?: SortOrder
    _count?: UsuarioCountOrderByAggregateInput
    _avg?: UsuarioAvgOrderByAggregateInput
    _max?: UsuarioMaxOrderByAggregateInput
    _min?: UsuarioMinOrderByAggregateInput
    _sum?: UsuarioSumOrderByAggregateInput
  }

  export type UsuarioScalarWhereWithAggregatesInput = {
    AND?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    OR?: UsuarioScalarWhereWithAggregatesInput[]
    NOT?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    codUsuario?: IntWithAggregatesFilter<"Usuario"> | number
    nombreUsuario?: StringWithAggregatesFilter<"Usuario"> | string
    contraseñaUsuario?: StringWithAggregatesFilter<"Usuario"> | string
    emailUsuario?: StringWithAggregatesFilter<"Usuario"> | string
    fechaRegistroUsuario?: DateTimeWithAggregatesFilter<"Usuario"> | Date | string
    codRolUsuario?: IntWithAggregatesFilter<"Usuario"> | number
  }

  export type RolUsuarioWhereInput = {
    AND?: RolUsuarioWhereInput | RolUsuarioWhereInput[]
    OR?: RolUsuarioWhereInput[]
    NOT?: RolUsuarioWhereInput | RolUsuarioWhereInput[]
    codRolUsuario?: IntFilter<"RolUsuario"> | number
    nombreRolUsuario?: StringFilter<"RolUsuario"> | string
    fechaHoraBajaRol?: DateTimeNullableFilter<"RolUsuario"> | Date | string | null
    permisoUsuario?: StringNullableListFilter<"RolUsuario">
    activo?: BoolFilter<"RolUsuario"> | boolean
    verificado?: BoolFilter<"RolUsuario"> | boolean
    tokenVerificacion?: StringFilter<"RolUsuario"> | string
    Usuarios?: UsuarioListRelationFilter
  }

  export type RolUsuarioOrderByWithRelationInput = {
    codRolUsuario?: SortOrder
    nombreRolUsuario?: SortOrder
    fechaHoraBajaRol?: SortOrderInput | SortOrder
    permisoUsuario?: SortOrder
    activo?: SortOrder
    verificado?: SortOrder
    tokenVerificacion?: SortOrder
    Usuarios?: UsuarioOrderByRelationAggregateInput
  }

  export type RolUsuarioWhereUniqueInput = Prisma.AtLeast<{
    codRolUsuario?: number
    AND?: RolUsuarioWhereInput | RolUsuarioWhereInput[]
    OR?: RolUsuarioWhereInput[]
    NOT?: RolUsuarioWhereInput | RolUsuarioWhereInput[]
    nombreRolUsuario?: StringFilter<"RolUsuario"> | string
    fechaHoraBajaRol?: DateTimeNullableFilter<"RolUsuario"> | Date | string | null
    permisoUsuario?: StringNullableListFilter<"RolUsuario">
    activo?: BoolFilter<"RolUsuario"> | boolean
    verificado?: BoolFilter<"RolUsuario"> | boolean
    tokenVerificacion?: StringFilter<"RolUsuario"> | string
    Usuarios?: UsuarioListRelationFilter
  }, "codRolUsuario">

  export type RolUsuarioOrderByWithAggregationInput = {
    codRolUsuario?: SortOrder
    nombreRolUsuario?: SortOrder
    fechaHoraBajaRol?: SortOrderInput | SortOrder
    permisoUsuario?: SortOrder
    activo?: SortOrder
    verificado?: SortOrder
    tokenVerificacion?: SortOrder
    _count?: RolUsuarioCountOrderByAggregateInput
    _avg?: RolUsuarioAvgOrderByAggregateInput
    _max?: RolUsuarioMaxOrderByAggregateInput
    _min?: RolUsuarioMinOrderByAggregateInput
    _sum?: RolUsuarioSumOrderByAggregateInput
  }

  export type RolUsuarioScalarWhereWithAggregatesInput = {
    AND?: RolUsuarioScalarWhereWithAggregatesInput | RolUsuarioScalarWhereWithAggregatesInput[]
    OR?: RolUsuarioScalarWhereWithAggregatesInput[]
    NOT?: RolUsuarioScalarWhereWithAggregatesInput | RolUsuarioScalarWhereWithAggregatesInput[]
    codRolUsuario?: IntWithAggregatesFilter<"RolUsuario"> | number
    nombreRolUsuario?: StringWithAggregatesFilter<"RolUsuario"> | string
    fechaHoraBajaRol?: DateTimeNullableWithAggregatesFilter<"RolUsuario"> | Date | string | null
    permisoUsuario?: StringNullableListFilter<"RolUsuario">
    activo?: BoolWithAggregatesFilter<"RolUsuario"> | boolean
    verificado?: BoolWithAggregatesFilter<"RolUsuario"> | boolean
    tokenVerificacion?: StringWithAggregatesFilter<"RolUsuario"> | string
  }

  export type DireccionWhereInput = {
    AND?: DireccionWhereInput | DireccionWhereInput[]
    OR?: DireccionWhereInput[]
    NOT?: DireccionWhereInput | DireccionWhereInput[]
    codigoDireccion?: IntFilter<"Direccion"> | number
    calle?: StringFilter<"Direccion"> | string
    ciudad?: StringFilter<"Direccion"> | string
    localidad?: StringFilter<"Direccion"> | string
    pais?: StringFilter<"Direccion"> | string
    codigoPostal?: IntFilter<"Direccion"> | number
    codCliente?: IntFilter<"Direccion"> | number
    clienteDir?: XOR<ClienteScalarRelationFilter, ClienteWhereInput>
    envioPedido?: EnvioPedidoListRelationFilter
  }

  export type DireccionOrderByWithRelationInput = {
    codigoDireccion?: SortOrder
    calle?: SortOrder
    ciudad?: SortOrder
    localidad?: SortOrder
    pais?: SortOrder
    codigoPostal?: SortOrder
    codCliente?: SortOrder
    clienteDir?: ClienteOrderByWithRelationInput
    envioPedido?: EnvioPedidoOrderByRelationAggregateInput
  }

  export type DireccionWhereUniqueInput = Prisma.AtLeast<{
    codigoDireccion?: number
    AND?: DireccionWhereInput | DireccionWhereInput[]
    OR?: DireccionWhereInput[]
    NOT?: DireccionWhereInput | DireccionWhereInput[]
    calle?: StringFilter<"Direccion"> | string
    ciudad?: StringFilter<"Direccion"> | string
    localidad?: StringFilter<"Direccion"> | string
    pais?: StringFilter<"Direccion"> | string
    codigoPostal?: IntFilter<"Direccion"> | number
    codCliente?: IntFilter<"Direccion"> | number
    clienteDir?: XOR<ClienteScalarRelationFilter, ClienteWhereInput>
    envioPedido?: EnvioPedidoListRelationFilter
  }, "codigoDireccion">

  export type DireccionOrderByWithAggregationInput = {
    codigoDireccion?: SortOrder
    calle?: SortOrder
    ciudad?: SortOrder
    localidad?: SortOrder
    pais?: SortOrder
    codigoPostal?: SortOrder
    codCliente?: SortOrder
    _count?: DireccionCountOrderByAggregateInput
    _avg?: DireccionAvgOrderByAggregateInput
    _max?: DireccionMaxOrderByAggregateInput
    _min?: DireccionMinOrderByAggregateInput
    _sum?: DireccionSumOrderByAggregateInput
  }

  export type DireccionScalarWhereWithAggregatesInput = {
    AND?: DireccionScalarWhereWithAggregatesInput | DireccionScalarWhereWithAggregatesInput[]
    OR?: DireccionScalarWhereWithAggregatesInput[]
    NOT?: DireccionScalarWhereWithAggregatesInput | DireccionScalarWhereWithAggregatesInput[]
    codigoDireccion?: IntWithAggregatesFilter<"Direccion"> | number
    calle?: StringWithAggregatesFilter<"Direccion"> | string
    ciudad?: StringWithAggregatesFilter<"Direccion"> | string
    localidad?: StringWithAggregatesFilter<"Direccion"> | string
    pais?: StringWithAggregatesFilter<"Direccion"> | string
    codigoPostal?: IntWithAggregatesFilter<"Direccion"> | number
    codCliente?: IntWithAggregatesFilter<"Direccion"> | number
  }

  export type PedidoWhereInput = {
    AND?: PedidoWhereInput | PedidoWhereInput[]
    OR?: PedidoWhereInput[]
    NOT?: PedidoWhereInput | PedidoWhereInput[]
    codPedido?: IntFilter<"Pedido"> | number
    impuestoSobreVenta?: FloatFilter<"Pedido"> | number
    envioGratuito?: BoolFilter<"Pedido"> | boolean
    montoTotal?: FloatFilter<"Pedido"> | number
    fechaAltaPedido?: DateTimeFilter<"Pedido"> | Date | string
    codCliente?: IntFilter<"Pedido"> | number
    codCarritoCompra?: IntFilter<"Pedido"> | number
    codEstadoPedido?: IntFilter<"Pedido"> | number
    cliente?: XOR<ClienteScalarRelationFilter, ClienteWhereInput>
    carritoCompra?: XOR<CarritoComprasScalarRelationFilter, CarritoComprasWhereInput>
    estadoPedido?: XOR<EstadoPedidoScalarRelationFilter, EstadoPedidoWhereInput>
    articuloPedido?: ArticuloPedidoListRelationFilter
  }

  export type PedidoOrderByWithRelationInput = {
    codPedido?: SortOrder
    impuestoSobreVenta?: SortOrder
    envioGratuito?: SortOrder
    montoTotal?: SortOrder
    fechaAltaPedido?: SortOrder
    codCliente?: SortOrder
    codCarritoCompra?: SortOrder
    codEstadoPedido?: SortOrder
    cliente?: ClienteOrderByWithRelationInput
    carritoCompra?: CarritoComprasOrderByWithRelationInput
    estadoPedido?: EstadoPedidoOrderByWithRelationInput
    articuloPedido?: ArticuloPedidoOrderByRelationAggregateInput
  }

  export type PedidoWhereUniqueInput = Prisma.AtLeast<{
    codPedido?: number
    codCarritoCompra?: number
    AND?: PedidoWhereInput | PedidoWhereInput[]
    OR?: PedidoWhereInput[]
    NOT?: PedidoWhereInput | PedidoWhereInput[]
    impuestoSobreVenta?: FloatFilter<"Pedido"> | number
    envioGratuito?: BoolFilter<"Pedido"> | boolean
    montoTotal?: FloatFilter<"Pedido"> | number
    fechaAltaPedido?: DateTimeFilter<"Pedido"> | Date | string
    codCliente?: IntFilter<"Pedido"> | number
    codEstadoPedido?: IntFilter<"Pedido"> | number
    cliente?: XOR<ClienteScalarRelationFilter, ClienteWhereInput>
    carritoCompra?: XOR<CarritoComprasScalarRelationFilter, CarritoComprasWhereInput>
    estadoPedido?: XOR<EstadoPedidoScalarRelationFilter, EstadoPedidoWhereInput>
    articuloPedido?: ArticuloPedidoListRelationFilter
  }, "codPedido" | "codCarritoCompra">

  export type PedidoOrderByWithAggregationInput = {
    codPedido?: SortOrder
    impuestoSobreVenta?: SortOrder
    envioGratuito?: SortOrder
    montoTotal?: SortOrder
    fechaAltaPedido?: SortOrder
    codCliente?: SortOrder
    codCarritoCompra?: SortOrder
    codEstadoPedido?: SortOrder
    _count?: PedidoCountOrderByAggregateInput
    _avg?: PedidoAvgOrderByAggregateInput
    _max?: PedidoMaxOrderByAggregateInput
    _min?: PedidoMinOrderByAggregateInput
    _sum?: PedidoSumOrderByAggregateInput
  }

  export type PedidoScalarWhereWithAggregatesInput = {
    AND?: PedidoScalarWhereWithAggregatesInput | PedidoScalarWhereWithAggregatesInput[]
    OR?: PedidoScalarWhereWithAggregatesInput[]
    NOT?: PedidoScalarWhereWithAggregatesInput | PedidoScalarWhereWithAggregatesInput[]
    codPedido?: IntWithAggregatesFilter<"Pedido"> | number
    impuestoSobreVenta?: FloatWithAggregatesFilter<"Pedido"> | number
    envioGratuito?: BoolWithAggregatesFilter<"Pedido"> | boolean
    montoTotal?: FloatWithAggregatesFilter<"Pedido"> | number
    fechaAltaPedido?: DateTimeWithAggregatesFilter<"Pedido"> | Date | string
    codCliente?: IntWithAggregatesFilter<"Pedido"> | number
    codCarritoCompra?: IntWithAggregatesFilter<"Pedido"> | number
    codEstadoPedido?: IntWithAggregatesFilter<"Pedido"> | number
  }

  export type EstadoPedidoWhereInput = {
    AND?: EstadoPedidoWhereInput | EstadoPedidoWhereInput[]
    OR?: EstadoPedidoWhereInput[]
    NOT?: EstadoPedidoWhereInput | EstadoPedidoWhereInput[]
    codEstadoPedido?: IntFilter<"EstadoPedido"> | number
    nombreEstadoPedido?: StringFilter<"EstadoPedido"> | string
    fechaHoraBajaEP?: DateTimeNullableFilter<"EstadoPedido"> | Date | string | null
    pedidos?: PedidoListRelationFilter
  }

  export type EstadoPedidoOrderByWithRelationInput = {
    codEstadoPedido?: SortOrder
    nombreEstadoPedido?: SortOrder
    fechaHoraBajaEP?: SortOrderInput | SortOrder
    pedidos?: PedidoOrderByRelationAggregateInput
  }

  export type EstadoPedidoWhereUniqueInput = Prisma.AtLeast<{
    codEstadoPedido?: number
    AND?: EstadoPedidoWhereInput | EstadoPedidoWhereInput[]
    OR?: EstadoPedidoWhereInput[]
    NOT?: EstadoPedidoWhereInput | EstadoPedidoWhereInput[]
    nombreEstadoPedido?: StringFilter<"EstadoPedido"> | string
    fechaHoraBajaEP?: DateTimeNullableFilter<"EstadoPedido"> | Date | string | null
    pedidos?: PedidoListRelationFilter
  }, "codEstadoPedido">

  export type EstadoPedidoOrderByWithAggregationInput = {
    codEstadoPedido?: SortOrder
    nombreEstadoPedido?: SortOrder
    fechaHoraBajaEP?: SortOrderInput | SortOrder
    _count?: EstadoPedidoCountOrderByAggregateInput
    _avg?: EstadoPedidoAvgOrderByAggregateInput
    _max?: EstadoPedidoMaxOrderByAggregateInput
    _min?: EstadoPedidoMinOrderByAggregateInput
    _sum?: EstadoPedidoSumOrderByAggregateInput
  }

  export type EstadoPedidoScalarWhereWithAggregatesInput = {
    AND?: EstadoPedidoScalarWhereWithAggregatesInput | EstadoPedidoScalarWhereWithAggregatesInput[]
    OR?: EstadoPedidoScalarWhereWithAggregatesInput[]
    NOT?: EstadoPedidoScalarWhereWithAggregatesInput | EstadoPedidoScalarWhereWithAggregatesInput[]
    codEstadoPedido?: IntWithAggregatesFilter<"EstadoPedido"> | number
    nombreEstadoPedido?: StringWithAggregatesFilter<"EstadoPedido"> | string
    fechaHoraBajaEP?: DateTimeNullableWithAggregatesFilter<"EstadoPedido"> | Date | string | null
  }

  export type CarritoComprasWhereInput = {
    AND?: CarritoComprasWhereInput | CarritoComprasWhereInput[]
    OR?: CarritoComprasWhereInput[]
    NOT?: CarritoComprasWhereInput | CarritoComprasWhereInput[]
    codCarritoCompra?: IntFilter<"CarritoCompras"> | number
    montoCarritoCompra?: FloatFilter<"CarritoCompras"> | number
    codPedido?: IntFilter<"CarritoCompras"> | number
    pedido?: XOR<PedidoNullableScalarRelationFilter, PedidoWhereInput> | null
    articuloPedido?: ArticuloPedidoListRelationFilter
  }

  export type CarritoComprasOrderByWithRelationInput = {
    codCarritoCompra?: SortOrder
    montoCarritoCompra?: SortOrder
    codPedido?: SortOrder
    pedido?: PedidoOrderByWithRelationInput
    articuloPedido?: ArticuloPedidoOrderByRelationAggregateInput
  }

  export type CarritoComprasWhereUniqueInput = Prisma.AtLeast<{
    codCarritoCompra?: number
    codPedido?: number
    AND?: CarritoComprasWhereInput | CarritoComprasWhereInput[]
    OR?: CarritoComprasWhereInput[]
    NOT?: CarritoComprasWhereInput | CarritoComprasWhereInput[]
    montoCarritoCompra?: FloatFilter<"CarritoCompras"> | number
    pedido?: XOR<PedidoNullableScalarRelationFilter, PedidoWhereInput> | null
    articuloPedido?: ArticuloPedidoListRelationFilter
  }, "codCarritoCompra" | "codPedido">

  export type CarritoComprasOrderByWithAggregationInput = {
    codCarritoCompra?: SortOrder
    montoCarritoCompra?: SortOrder
    codPedido?: SortOrder
    _count?: CarritoComprasCountOrderByAggregateInput
    _avg?: CarritoComprasAvgOrderByAggregateInput
    _max?: CarritoComprasMaxOrderByAggregateInput
    _min?: CarritoComprasMinOrderByAggregateInput
    _sum?: CarritoComprasSumOrderByAggregateInput
  }

  export type CarritoComprasScalarWhereWithAggregatesInput = {
    AND?: CarritoComprasScalarWhereWithAggregatesInput | CarritoComprasScalarWhereWithAggregatesInput[]
    OR?: CarritoComprasScalarWhereWithAggregatesInput[]
    NOT?: CarritoComprasScalarWhereWithAggregatesInput | CarritoComprasScalarWhereWithAggregatesInput[]
    codCarritoCompra?: IntWithAggregatesFilter<"CarritoCompras"> | number
    montoCarritoCompra?: FloatWithAggregatesFilter<"CarritoCompras"> | number
    codPedido?: IntWithAggregatesFilter<"CarritoCompras"> | number
  }

  export type ListaFavoritoWhereInput = {
    AND?: ListaFavoritoWhereInput | ListaFavoritoWhereInput[]
    OR?: ListaFavoritoWhereInput[]
    NOT?: ListaFavoritoWhereInput | ListaFavoritoWhereInput[]
    codListaFavorito?: IntFilter<"ListaFavorito"> | number
    nombreListaFavorito?: StringFilter<"ListaFavorito"> | string
    codCliente?: IntFilter<"ListaFavorito"> | number
    cliente?: XOR<ClienteScalarRelationFilter, ClienteWhereInput>
    articulo?: ArticuloListRelationFilter
  }

  export type ListaFavoritoOrderByWithRelationInput = {
    codListaFavorito?: SortOrder
    nombreListaFavorito?: SortOrder
    codCliente?: SortOrder
    cliente?: ClienteOrderByWithRelationInput
    articulo?: ArticuloOrderByRelationAggregateInput
  }

  export type ListaFavoritoWhereUniqueInput = Prisma.AtLeast<{
    codListaFavorito?: number
    codCliente?: number
    AND?: ListaFavoritoWhereInput | ListaFavoritoWhereInput[]
    OR?: ListaFavoritoWhereInput[]
    NOT?: ListaFavoritoWhereInput | ListaFavoritoWhereInput[]
    nombreListaFavorito?: StringFilter<"ListaFavorito"> | string
    cliente?: XOR<ClienteScalarRelationFilter, ClienteWhereInput>
    articulo?: ArticuloListRelationFilter
  }, "codListaFavorito" | "codCliente">

  export type ListaFavoritoOrderByWithAggregationInput = {
    codListaFavorito?: SortOrder
    nombreListaFavorito?: SortOrder
    codCliente?: SortOrder
    _count?: ListaFavoritoCountOrderByAggregateInput
    _avg?: ListaFavoritoAvgOrderByAggregateInput
    _max?: ListaFavoritoMaxOrderByAggregateInput
    _min?: ListaFavoritoMinOrderByAggregateInput
    _sum?: ListaFavoritoSumOrderByAggregateInput
  }

  export type ListaFavoritoScalarWhereWithAggregatesInput = {
    AND?: ListaFavoritoScalarWhereWithAggregatesInput | ListaFavoritoScalarWhereWithAggregatesInput[]
    OR?: ListaFavoritoScalarWhereWithAggregatesInput[]
    NOT?: ListaFavoritoScalarWhereWithAggregatesInput | ListaFavoritoScalarWhereWithAggregatesInput[]
    codListaFavorito?: IntWithAggregatesFilter<"ListaFavorito"> | number
    nombreListaFavorito?: StringWithAggregatesFilter<"ListaFavorito"> | string
    codCliente?: IntWithAggregatesFilter<"ListaFavorito"> | number
  }

  export type ArticuloWhereInput = {
    AND?: ArticuloWhereInput | ArticuloWhereInput[]
    OR?: ArticuloWhereInput[]
    NOT?: ArticuloWhereInput | ArticuloWhereInput[]
    codArticulo?: IntFilter<"Articulo"> | number
    nombreArticulo?: StringFilter<"Articulo"> | string
    descripcion?: StringFilter<"Articulo"> | string
    stock?: IntFilter<"Articulo"> | number
    precio?: FloatFilter<"Articulo"> | number
    codCategoria?: IntFilter<"Articulo"> | number
    articuloPedido?: ArticuloPedidoListRelationFilter
    listaFav?: ListaFavoritoListRelationFilter
    categorias?: CategoriaListRelationFilter
  }

  export type ArticuloOrderByWithRelationInput = {
    codArticulo?: SortOrder
    nombreArticulo?: SortOrder
    descripcion?: SortOrder
    stock?: SortOrder
    precio?: SortOrder
    codCategoria?: SortOrder
    articuloPedido?: ArticuloPedidoOrderByRelationAggregateInput
    listaFav?: ListaFavoritoOrderByRelationAggregateInput
    categorias?: CategoriaOrderByRelationAggregateInput
  }

  export type ArticuloWhereUniqueInput = Prisma.AtLeast<{
    codArticulo?: number
    AND?: ArticuloWhereInput | ArticuloWhereInput[]
    OR?: ArticuloWhereInput[]
    NOT?: ArticuloWhereInput | ArticuloWhereInput[]
    nombreArticulo?: StringFilter<"Articulo"> | string
    descripcion?: StringFilter<"Articulo"> | string
    stock?: IntFilter<"Articulo"> | number
    precio?: FloatFilter<"Articulo"> | number
    codCategoria?: IntFilter<"Articulo"> | number
    articuloPedido?: ArticuloPedidoListRelationFilter
    listaFav?: ListaFavoritoListRelationFilter
    categorias?: CategoriaListRelationFilter
  }, "codArticulo">

  export type ArticuloOrderByWithAggregationInput = {
    codArticulo?: SortOrder
    nombreArticulo?: SortOrder
    descripcion?: SortOrder
    stock?: SortOrder
    precio?: SortOrder
    codCategoria?: SortOrder
    _count?: ArticuloCountOrderByAggregateInput
    _avg?: ArticuloAvgOrderByAggregateInput
    _max?: ArticuloMaxOrderByAggregateInput
    _min?: ArticuloMinOrderByAggregateInput
    _sum?: ArticuloSumOrderByAggregateInput
  }

  export type ArticuloScalarWhereWithAggregatesInput = {
    AND?: ArticuloScalarWhereWithAggregatesInput | ArticuloScalarWhereWithAggregatesInput[]
    OR?: ArticuloScalarWhereWithAggregatesInput[]
    NOT?: ArticuloScalarWhereWithAggregatesInput | ArticuloScalarWhereWithAggregatesInput[]
    codArticulo?: IntWithAggregatesFilter<"Articulo"> | number
    nombreArticulo?: StringWithAggregatesFilter<"Articulo"> | string
    descripcion?: StringWithAggregatesFilter<"Articulo"> | string
    stock?: IntWithAggregatesFilter<"Articulo"> | number
    precio?: FloatWithAggregatesFilter<"Articulo"> | number
    codCategoria?: IntWithAggregatesFilter<"Articulo"> | number
  }

  export type CategoriaWhereInput = {
    AND?: CategoriaWhereInput | CategoriaWhereInput[]
    OR?: CategoriaWhereInput[]
    NOT?: CategoriaWhereInput | CategoriaWhereInput[]
    codCategoria?: IntFilter<"Categoria"> | number
    nombreCategoria?: StringFilter<"Categoria"> | string
    descripcion?: StringFilter<"Categoria"> | string
    fechaBajaCategoria?: DateTimeNullableFilter<"Categoria"> | Date | string | null
    articulos?: ArticuloListRelationFilter
  }

  export type CategoriaOrderByWithRelationInput = {
    codCategoria?: SortOrder
    nombreCategoria?: SortOrder
    descripcion?: SortOrder
    fechaBajaCategoria?: SortOrderInput | SortOrder
    articulos?: ArticuloOrderByRelationAggregateInput
  }

  export type CategoriaWhereUniqueInput = Prisma.AtLeast<{
    codCategoria?: number
    AND?: CategoriaWhereInput | CategoriaWhereInput[]
    OR?: CategoriaWhereInput[]
    NOT?: CategoriaWhereInput | CategoriaWhereInput[]
    nombreCategoria?: StringFilter<"Categoria"> | string
    descripcion?: StringFilter<"Categoria"> | string
    fechaBajaCategoria?: DateTimeNullableFilter<"Categoria"> | Date | string | null
    articulos?: ArticuloListRelationFilter
  }, "codCategoria">

  export type CategoriaOrderByWithAggregationInput = {
    codCategoria?: SortOrder
    nombreCategoria?: SortOrder
    descripcion?: SortOrder
    fechaBajaCategoria?: SortOrderInput | SortOrder
    _count?: CategoriaCountOrderByAggregateInput
    _avg?: CategoriaAvgOrderByAggregateInput
    _max?: CategoriaMaxOrderByAggregateInput
    _min?: CategoriaMinOrderByAggregateInput
    _sum?: CategoriaSumOrderByAggregateInput
  }

  export type CategoriaScalarWhereWithAggregatesInput = {
    AND?: CategoriaScalarWhereWithAggregatesInput | CategoriaScalarWhereWithAggregatesInput[]
    OR?: CategoriaScalarWhereWithAggregatesInput[]
    NOT?: CategoriaScalarWhereWithAggregatesInput | CategoriaScalarWhereWithAggregatesInput[]
    codCategoria?: IntWithAggregatesFilter<"Categoria"> | number
    nombreCategoria?: StringWithAggregatesFilter<"Categoria"> | string
    descripcion?: StringWithAggregatesFilter<"Categoria"> | string
    fechaBajaCategoria?: DateTimeNullableWithAggregatesFilter<"Categoria"> | Date | string | null
  }

  export type ArticuloPedidoWhereInput = {
    AND?: ArticuloPedidoWhereInput | ArticuloPedidoWhereInput[]
    OR?: ArticuloPedidoWhereInput[]
    NOT?: ArticuloPedidoWhereInput | ArticuloPedidoWhereInput[]
    cantidadArtPed?: IntFilter<"ArticuloPedido"> | number
    nroRenglon?: IntFilter<"ArticuloPedido"> | number
    montoArticuloPe?: FloatFilter<"ArticuloPedido"> | number
    PrecioUnitario?: FloatFilter<"ArticuloPedido"> | number
    codPedido?: IntFilter<"ArticuloPedido"> | number
    codCarritoCompra?: IntFilter<"ArticuloPedido"> | number
    codArticulo?: IntFilter<"ArticuloPedido"> | number
    pedido?: XOR<PedidoScalarRelationFilter, PedidoWhereInput>
    carritoCompra?: XOR<CarritoComprasScalarRelationFilter, CarritoComprasWhereInput>
    articulo?: XOR<ArticuloScalarRelationFilter, ArticuloWhereInput>
  }

  export type ArticuloPedidoOrderByWithRelationInput = {
    cantidadArtPed?: SortOrder
    nroRenglon?: SortOrder
    montoArticuloPe?: SortOrder
    PrecioUnitario?: SortOrder
    codPedido?: SortOrder
    codCarritoCompra?: SortOrder
    codArticulo?: SortOrder
    pedido?: PedidoOrderByWithRelationInput
    carritoCompra?: CarritoComprasOrderByWithRelationInput
    articulo?: ArticuloOrderByWithRelationInput
  }

  export type ArticuloPedidoWhereUniqueInput = Prisma.AtLeast<{
    nroRenglon?: number
    AND?: ArticuloPedidoWhereInput | ArticuloPedidoWhereInput[]
    OR?: ArticuloPedidoWhereInput[]
    NOT?: ArticuloPedidoWhereInput | ArticuloPedidoWhereInput[]
    cantidadArtPed?: IntFilter<"ArticuloPedido"> | number
    montoArticuloPe?: FloatFilter<"ArticuloPedido"> | number
    PrecioUnitario?: FloatFilter<"ArticuloPedido"> | number
    codPedido?: IntFilter<"ArticuloPedido"> | number
    codCarritoCompra?: IntFilter<"ArticuloPedido"> | number
    codArticulo?: IntFilter<"ArticuloPedido"> | number
    pedido?: XOR<PedidoScalarRelationFilter, PedidoWhereInput>
    carritoCompra?: XOR<CarritoComprasScalarRelationFilter, CarritoComprasWhereInput>
    articulo?: XOR<ArticuloScalarRelationFilter, ArticuloWhereInput>
  }, "nroRenglon">

  export type ArticuloPedidoOrderByWithAggregationInput = {
    cantidadArtPed?: SortOrder
    nroRenglon?: SortOrder
    montoArticuloPe?: SortOrder
    PrecioUnitario?: SortOrder
    codPedido?: SortOrder
    codCarritoCompra?: SortOrder
    codArticulo?: SortOrder
    _count?: ArticuloPedidoCountOrderByAggregateInput
    _avg?: ArticuloPedidoAvgOrderByAggregateInput
    _max?: ArticuloPedidoMaxOrderByAggregateInput
    _min?: ArticuloPedidoMinOrderByAggregateInput
    _sum?: ArticuloPedidoSumOrderByAggregateInput
  }

  export type ArticuloPedidoScalarWhereWithAggregatesInput = {
    AND?: ArticuloPedidoScalarWhereWithAggregatesInput | ArticuloPedidoScalarWhereWithAggregatesInput[]
    OR?: ArticuloPedidoScalarWhereWithAggregatesInput[]
    NOT?: ArticuloPedidoScalarWhereWithAggregatesInput | ArticuloPedidoScalarWhereWithAggregatesInput[]
    cantidadArtPed?: IntWithAggregatesFilter<"ArticuloPedido"> | number
    nroRenglon?: IntWithAggregatesFilter<"ArticuloPedido"> | number
    montoArticuloPe?: FloatWithAggregatesFilter<"ArticuloPedido"> | number
    PrecioUnitario?: FloatWithAggregatesFilter<"ArticuloPedido"> | number
    codPedido?: IntWithAggregatesFilter<"ArticuloPedido"> | number
    codCarritoCompra?: IntWithAggregatesFilter<"ArticuloPedido"> | number
    codArticulo?: IntWithAggregatesFilter<"ArticuloPedido"> | number
  }

  export type EnvioPedidoWhereInput = {
    AND?: EnvioPedidoWhereInput | EnvioPedidoWhereInput[]
    OR?: EnvioPedidoWhereInput[]
    NOT?: EnvioPedidoWhereInput | EnvioPedidoWhereInput[]
    codEnvio?: IntFilter<"EnvioPedido"> | number
    empresaEnvio?: StringFilter<"EnvioPedido"> | string
    costoEnvio?: FloatFilter<"EnvioPedido"> | number
    fechaSalida?: DateTimeNullableFilter<"EnvioPedido"> | Date | string | null
    fechaEntregaEstimada?: DateTimeFilter<"EnvioPedido"> | Date | string
    fechaEntregaBaja?: DateTimeNullableFilter<"EnvioPedido"> | Date | string | null
    codEstadoEnvio?: IntFilter<"EnvioPedido"> | number
    codigoDireccion?: IntFilter<"EnvioPedido"> | number
    estadoEnvio?: XOR<EstadoEnvioScalarRelationFilter, EstadoEnvioWhereInput>
    direccion?: XOR<DireccionScalarRelationFilter, DireccionWhereInput>
  }

  export type EnvioPedidoOrderByWithRelationInput = {
    codEnvio?: SortOrder
    empresaEnvio?: SortOrder
    costoEnvio?: SortOrder
    fechaSalida?: SortOrderInput | SortOrder
    fechaEntregaEstimada?: SortOrder
    fechaEntregaBaja?: SortOrderInput | SortOrder
    codEstadoEnvio?: SortOrder
    codigoDireccion?: SortOrder
    estadoEnvio?: EstadoEnvioOrderByWithRelationInput
    direccion?: DireccionOrderByWithRelationInput
  }

  export type EnvioPedidoWhereUniqueInput = Prisma.AtLeast<{
    codEnvio?: number
    AND?: EnvioPedidoWhereInput | EnvioPedidoWhereInput[]
    OR?: EnvioPedidoWhereInput[]
    NOT?: EnvioPedidoWhereInput | EnvioPedidoWhereInput[]
    empresaEnvio?: StringFilter<"EnvioPedido"> | string
    costoEnvio?: FloatFilter<"EnvioPedido"> | number
    fechaSalida?: DateTimeNullableFilter<"EnvioPedido"> | Date | string | null
    fechaEntregaEstimada?: DateTimeFilter<"EnvioPedido"> | Date | string
    fechaEntregaBaja?: DateTimeNullableFilter<"EnvioPedido"> | Date | string | null
    codEstadoEnvio?: IntFilter<"EnvioPedido"> | number
    codigoDireccion?: IntFilter<"EnvioPedido"> | number
    estadoEnvio?: XOR<EstadoEnvioScalarRelationFilter, EstadoEnvioWhereInput>
    direccion?: XOR<DireccionScalarRelationFilter, DireccionWhereInput>
  }, "codEnvio">

  export type EnvioPedidoOrderByWithAggregationInput = {
    codEnvio?: SortOrder
    empresaEnvio?: SortOrder
    costoEnvio?: SortOrder
    fechaSalida?: SortOrderInput | SortOrder
    fechaEntregaEstimada?: SortOrder
    fechaEntregaBaja?: SortOrderInput | SortOrder
    codEstadoEnvio?: SortOrder
    codigoDireccion?: SortOrder
    _count?: EnvioPedidoCountOrderByAggregateInput
    _avg?: EnvioPedidoAvgOrderByAggregateInput
    _max?: EnvioPedidoMaxOrderByAggregateInput
    _min?: EnvioPedidoMinOrderByAggregateInput
    _sum?: EnvioPedidoSumOrderByAggregateInput
  }

  export type EnvioPedidoScalarWhereWithAggregatesInput = {
    AND?: EnvioPedidoScalarWhereWithAggregatesInput | EnvioPedidoScalarWhereWithAggregatesInput[]
    OR?: EnvioPedidoScalarWhereWithAggregatesInput[]
    NOT?: EnvioPedidoScalarWhereWithAggregatesInput | EnvioPedidoScalarWhereWithAggregatesInput[]
    codEnvio?: IntWithAggregatesFilter<"EnvioPedido"> | number
    empresaEnvio?: StringWithAggregatesFilter<"EnvioPedido"> | string
    costoEnvio?: FloatWithAggregatesFilter<"EnvioPedido"> | number
    fechaSalida?: DateTimeNullableWithAggregatesFilter<"EnvioPedido"> | Date | string | null
    fechaEntregaEstimada?: DateTimeWithAggregatesFilter<"EnvioPedido"> | Date | string
    fechaEntregaBaja?: DateTimeNullableWithAggregatesFilter<"EnvioPedido"> | Date | string | null
    codEstadoEnvio?: IntWithAggregatesFilter<"EnvioPedido"> | number
    codigoDireccion?: IntWithAggregatesFilter<"EnvioPedido"> | number
  }

  export type EstadoEnvioWhereInput = {
    AND?: EstadoEnvioWhereInput | EstadoEnvioWhereInput[]
    OR?: EstadoEnvioWhereInput[]
    NOT?: EstadoEnvioWhereInput | EstadoEnvioWhereInput[]
    codEstadoEnvio?: IntFilter<"EstadoEnvio"> | number
    nombreEstadoEnvio?: StringFilter<"EstadoEnvio"> | string
    fechaHoraBajaEE?: DateTimeNullableFilter<"EstadoEnvio"> | Date | string | null
    envioPedido?: EnvioPedidoListRelationFilter
  }

  export type EstadoEnvioOrderByWithRelationInput = {
    codEstadoEnvio?: SortOrder
    nombreEstadoEnvio?: SortOrder
    fechaHoraBajaEE?: SortOrderInput | SortOrder
    envioPedido?: EnvioPedidoOrderByRelationAggregateInput
  }

  export type EstadoEnvioWhereUniqueInput = Prisma.AtLeast<{
    codEstadoEnvio?: number
    AND?: EstadoEnvioWhereInput | EstadoEnvioWhereInput[]
    OR?: EstadoEnvioWhereInput[]
    NOT?: EstadoEnvioWhereInput | EstadoEnvioWhereInput[]
    nombreEstadoEnvio?: StringFilter<"EstadoEnvio"> | string
    fechaHoraBajaEE?: DateTimeNullableFilter<"EstadoEnvio"> | Date | string | null
    envioPedido?: EnvioPedidoListRelationFilter
  }, "codEstadoEnvio">

  export type EstadoEnvioOrderByWithAggregationInput = {
    codEstadoEnvio?: SortOrder
    nombreEstadoEnvio?: SortOrder
    fechaHoraBajaEE?: SortOrderInput | SortOrder
    _count?: EstadoEnvioCountOrderByAggregateInput
    _avg?: EstadoEnvioAvgOrderByAggregateInput
    _max?: EstadoEnvioMaxOrderByAggregateInput
    _min?: EstadoEnvioMinOrderByAggregateInput
    _sum?: EstadoEnvioSumOrderByAggregateInput
  }

  export type EstadoEnvioScalarWhereWithAggregatesInput = {
    AND?: EstadoEnvioScalarWhereWithAggregatesInput | EstadoEnvioScalarWhereWithAggregatesInput[]
    OR?: EstadoEnvioScalarWhereWithAggregatesInput[]
    NOT?: EstadoEnvioScalarWhereWithAggregatesInput | EstadoEnvioScalarWhereWithAggregatesInput[]
    codEstadoEnvio?: IntWithAggregatesFilter<"EstadoEnvio"> | number
    nombreEstadoEnvio?: StringWithAggregatesFilter<"EstadoEnvio"> | string
    fechaHoraBajaEE?: DateTimeNullableWithAggregatesFilter<"EstadoEnvio"> | Date | string | null
  }

  export type MedioPagoWhereInput = {
    AND?: MedioPagoWhereInput | MedioPagoWhereInput[]
    OR?: MedioPagoWhereInput[]
    NOT?: MedioPagoWhereInput | MedioPagoWhereInput[]
    codMedioPago?: IntFilter<"MedioPago"> | number
    nombreTipoMedioPago?: StringFilter<"MedioPago"> | string
    fechaHoraBajaMedioPago?: DateTimeNullableFilter<"MedioPago"> | Date | string | null
    clientes?: ClienteListRelationFilter
    Pago?: PagoListRelationFilter
  }

  export type MedioPagoOrderByWithRelationInput = {
    codMedioPago?: SortOrder
    nombreTipoMedioPago?: SortOrder
    fechaHoraBajaMedioPago?: SortOrderInput | SortOrder
    clientes?: ClienteOrderByRelationAggregateInput
    Pago?: PagoOrderByRelationAggregateInput
  }

  export type MedioPagoWhereUniqueInput = Prisma.AtLeast<{
    codMedioPago?: number
    AND?: MedioPagoWhereInput | MedioPagoWhereInput[]
    OR?: MedioPagoWhereInput[]
    NOT?: MedioPagoWhereInput | MedioPagoWhereInput[]
    nombreTipoMedioPago?: StringFilter<"MedioPago"> | string
    fechaHoraBajaMedioPago?: DateTimeNullableFilter<"MedioPago"> | Date | string | null
    clientes?: ClienteListRelationFilter
    Pago?: PagoListRelationFilter
  }, "codMedioPago">

  export type MedioPagoOrderByWithAggregationInput = {
    codMedioPago?: SortOrder
    nombreTipoMedioPago?: SortOrder
    fechaHoraBajaMedioPago?: SortOrderInput | SortOrder
    _count?: MedioPagoCountOrderByAggregateInput
    _avg?: MedioPagoAvgOrderByAggregateInput
    _max?: MedioPagoMaxOrderByAggregateInput
    _min?: MedioPagoMinOrderByAggregateInput
    _sum?: MedioPagoSumOrderByAggregateInput
  }

  export type MedioPagoScalarWhereWithAggregatesInput = {
    AND?: MedioPagoScalarWhereWithAggregatesInput | MedioPagoScalarWhereWithAggregatesInput[]
    OR?: MedioPagoScalarWhereWithAggregatesInput[]
    NOT?: MedioPagoScalarWhereWithAggregatesInput | MedioPagoScalarWhereWithAggregatesInput[]
    codMedioPago?: IntWithAggregatesFilter<"MedioPago"> | number
    nombreTipoMedioPago?: StringWithAggregatesFilter<"MedioPago"> | string
    fechaHoraBajaMedioPago?: DateTimeNullableWithAggregatesFilter<"MedioPago"> | Date | string | null
  }

  export type PagoWhereInput = {
    AND?: PagoWhereInput | PagoWhereInput[]
    OR?: PagoWhereInput[]
    NOT?: PagoWhereInput | PagoWhereInput[]
    codPago?: IntFilter<"Pago"> | number
    nombreTipoMedioPago?: StringFilter<"Pago"> | string
    montoPagado?: FloatFilter<"Pago"> | number
    transaccionId?: IntFilter<"Pago"> | number
    fechaHoraPago?: DateTimeNullableFilter<"Pago"> | Date | string | null
    codMedioPago?: IntFilter<"Pago"> | number
    codEstadoPago?: IntFilter<"Pago"> | number
    medioPago?: XOR<MedioPagoScalarRelationFilter, MedioPagoWhereInput>
    estadoPago?: XOR<EstadoPagoScalarRelationFilter, EstadoPagoWhereInput>
  }

  export type PagoOrderByWithRelationInput = {
    codPago?: SortOrder
    nombreTipoMedioPago?: SortOrder
    montoPagado?: SortOrder
    transaccionId?: SortOrder
    fechaHoraPago?: SortOrderInput | SortOrder
    codMedioPago?: SortOrder
    codEstadoPago?: SortOrder
    medioPago?: MedioPagoOrderByWithRelationInput
    estadoPago?: EstadoPagoOrderByWithRelationInput
  }

  export type PagoWhereUniqueInput = Prisma.AtLeast<{
    codPago?: number
    AND?: PagoWhereInput | PagoWhereInput[]
    OR?: PagoWhereInput[]
    NOT?: PagoWhereInput | PagoWhereInput[]
    nombreTipoMedioPago?: StringFilter<"Pago"> | string
    montoPagado?: FloatFilter<"Pago"> | number
    transaccionId?: IntFilter<"Pago"> | number
    fechaHoraPago?: DateTimeNullableFilter<"Pago"> | Date | string | null
    codMedioPago?: IntFilter<"Pago"> | number
    codEstadoPago?: IntFilter<"Pago"> | number
    medioPago?: XOR<MedioPagoScalarRelationFilter, MedioPagoWhereInput>
    estadoPago?: XOR<EstadoPagoScalarRelationFilter, EstadoPagoWhereInput>
  }, "codPago">

  export type PagoOrderByWithAggregationInput = {
    codPago?: SortOrder
    nombreTipoMedioPago?: SortOrder
    montoPagado?: SortOrder
    transaccionId?: SortOrder
    fechaHoraPago?: SortOrderInput | SortOrder
    codMedioPago?: SortOrder
    codEstadoPago?: SortOrder
    _count?: PagoCountOrderByAggregateInput
    _avg?: PagoAvgOrderByAggregateInput
    _max?: PagoMaxOrderByAggregateInput
    _min?: PagoMinOrderByAggregateInput
    _sum?: PagoSumOrderByAggregateInput
  }

  export type PagoScalarWhereWithAggregatesInput = {
    AND?: PagoScalarWhereWithAggregatesInput | PagoScalarWhereWithAggregatesInput[]
    OR?: PagoScalarWhereWithAggregatesInput[]
    NOT?: PagoScalarWhereWithAggregatesInput | PagoScalarWhereWithAggregatesInput[]
    codPago?: IntWithAggregatesFilter<"Pago"> | number
    nombreTipoMedioPago?: StringWithAggregatesFilter<"Pago"> | string
    montoPagado?: FloatWithAggregatesFilter<"Pago"> | number
    transaccionId?: IntWithAggregatesFilter<"Pago"> | number
    fechaHoraPago?: DateTimeNullableWithAggregatesFilter<"Pago"> | Date | string | null
    codMedioPago?: IntWithAggregatesFilter<"Pago"> | number
    codEstadoPago?: IntWithAggregatesFilter<"Pago"> | number
  }

  export type EstadoPagoWhereInput = {
    AND?: EstadoPagoWhereInput | EstadoPagoWhereInput[]
    OR?: EstadoPagoWhereInput[]
    NOT?: EstadoPagoWhereInput | EstadoPagoWhereInput[]
    codEstadoPago?: IntFilter<"EstadoPago"> | number
    nombreEstadoPago?: StringFilter<"EstadoPago"> | string
    fechaHoraBajaEP?: DateTimeNullableFilter<"EstadoPago"> | Date | string | null
    pagos?: PagoListRelationFilter
  }

  export type EstadoPagoOrderByWithRelationInput = {
    codEstadoPago?: SortOrder
    nombreEstadoPago?: SortOrder
    fechaHoraBajaEP?: SortOrderInput | SortOrder
    pagos?: PagoOrderByRelationAggregateInput
  }

  export type EstadoPagoWhereUniqueInput = Prisma.AtLeast<{
    codEstadoPago?: number
    AND?: EstadoPagoWhereInput | EstadoPagoWhereInput[]
    OR?: EstadoPagoWhereInput[]
    NOT?: EstadoPagoWhereInput | EstadoPagoWhereInput[]
    nombreEstadoPago?: StringFilter<"EstadoPago"> | string
    fechaHoraBajaEP?: DateTimeNullableFilter<"EstadoPago"> | Date | string | null
    pagos?: PagoListRelationFilter
  }, "codEstadoPago">

  export type EstadoPagoOrderByWithAggregationInput = {
    codEstadoPago?: SortOrder
    nombreEstadoPago?: SortOrder
    fechaHoraBajaEP?: SortOrderInput | SortOrder
    _count?: EstadoPagoCountOrderByAggregateInput
    _avg?: EstadoPagoAvgOrderByAggregateInput
    _max?: EstadoPagoMaxOrderByAggregateInput
    _min?: EstadoPagoMinOrderByAggregateInput
    _sum?: EstadoPagoSumOrderByAggregateInput
  }

  export type EstadoPagoScalarWhereWithAggregatesInput = {
    AND?: EstadoPagoScalarWhereWithAggregatesInput | EstadoPagoScalarWhereWithAggregatesInput[]
    OR?: EstadoPagoScalarWhereWithAggregatesInput[]
    NOT?: EstadoPagoScalarWhereWithAggregatesInput | EstadoPagoScalarWhereWithAggregatesInput[]
    codEstadoPago?: IntWithAggregatesFilter<"EstadoPago"> | number
    nombreEstadoPago?: StringWithAggregatesFilter<"EstadoPago"> | string
    fechaHoraBajaEP?: DateTimeNullableWithAggregatesFilter<"EstadoPago"> | Date | string | null
  }

  export type ClienteCreateInput = {
    nombreCliente: string
    dni: number
    telefono: number
    fechaHoraBajaCliente?: Date | string | null
    codListaFavorito?: number | null
    direccion?: DireccionCreateNestedManyWithoutClienteDirInput
    usuario: UsuarioCreateNestedOneWithoutClienteInput
    medioPago?: MedioPagoCreateNestedManyWithoutClientesInput
    Pedido?: PedidoCreateNestedManyWithoutClienteInput
    listaFav?: ListaFavoritoCreateNestedOneWithoutClienteInput
  }

  export type ClienteUncheckedCreateInput = {
    codCliente?: number
    nombreCliente: string
    dni: number
    telefono: number
    fechaHoraBajaCliente?: Date | string | null
    codUsuario: number
    codListaFavorito?: number | null
    direccion?: DireccionUncheckedCreateNestedManyWithoutClienteDirInput
    medioPago?: MedioPagoUncheckedCreateNestedManyWithoutClientesInput
    Pedido?: PedidoUncheckedCreateNestedManyWithoutClienteInput
    listaFav?: ListaFavoritoUncheckedCreateNestedOneWithoutClienteInput
  }

  export type ClienteUpdateInput = {
    nombreCliente?: StringFieldUpdateOperationsInput | string
    dni?: IntFieldUpdateOperationsInput | number
    telefono?: IntFieldUpdateOperationsInput | number
    fechaHoraBajaCliente?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    codListaFavorito?: NullableIntFieldUpdateOperationsInput | number | null
    direccion?: DireccionUpdateManyWithoutClienteDirNestedInput
    usuario?: UsuarioUpdateOneRequiredWithoutClienteNestedInput
    medioPago?: MedioPagoUpdateManyWithoutClientesNestedInput
    Pedido?: PedidoUpdateManyWithoutClienteNestedInput
    listaFav?: ListaFavoritoUpdateOneWithoutClienteNestedInput
  }

  export type ClienteUncheckedUpdateInput = {
    codCliente?: IntFieldUpdateOperationsInput | number
    nombreCliente?: StringFieldUpdateOperationsInput | string
    dni?: IntFieldUpdateOperationsInput | number
    telefono?: IntFieldUpdateOperationsInput | number
    fechaHoraBajaCliente?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    codUsuario?: IntFieldUpdateOperationsInput | number
    codListaFavorito?: NullableIntFieldUpdateOperationsInput | number | null
    direccion?: DireccionUncheckedUpdateManyWithoutClienteDirNestedInput
    medioPago?: MedioPagoUncheckedUpdateManyWithoutClientesNestedInput
    Pedido?: PedidoUncheckedUpdateManyWithoutClienteNestedInput
    listaFav?: ListaFavoritoUncheckedUpdateOneWithoutClienteNestedInput
  }

  export type ClienteCreateManyInput = {
    codCliente?: number
    nombreCliente: string
    dni: number
    telefono: number
    fechaHoraBajaCliente?: Date | string | null
    codUsuario: number
    codListaFavorito?: number | null
  }

  export type ClienteUpdateManyMutationInput = {
    nombreCliente?: StringFieldUpdateOperationsInput | string
    dni?: IntFieldUpdateOperationsInput | number
    telefono?: IntFieldUpdateOperationsInput | number
    fechaHoraBajaCliente?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    codListaFavorito?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ClienteUncheckedUpdateManyInput = {
    codCliente?: IntFieldUpdateOperationsInput | number
    nombreCliente?: StringFieldUpdateOperationsInput | string
    dni?: IntFieldUpdateOperationsInput | number
    telefono?: IntFieldUpdateOperationsInput | number
    fechaHoraBajaCliente?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    codUsuario?: IntFieldUpdateOperationsInput | number
    codListaFavorito?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type UsuarioCreateInput = {
    nombreUsuario: string
    contraseñaUsuario: string
    emailUsuario: string
    fechaRegistroUsuario?: Date | string
    rolUsuario: RolUsuarioCreateNestedOneWithoutUsuariosInput
    cliente?: ClienteCreateNestedOneWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateInput = {
    codUsuario?: number
    nombreUsuario: string
    contraseñaUsuario: string
    emailUsuario: string
    fechaRegistroUsuario?: Date | string
    codRolUsuario: number
    cliente?: ClienteUncheckedCreateNestedOneWithoutUsuarioInput
  }

  export type UsuarioUpdateInput = {
    nombreUsuario?: StringFieldUpdateOperationsInput | string
    contraseñaUsuario?: StringFieldUpdateOperationsInput | string
    emailUsuario?: StringFieldUpdateOperationsInput | string
    fechaRegistroUsuario?: DateTimeFieldUpdateOperationsInput | Date | string
    rolUsuario?: RolUsuarioUpdateOneRequiredWithoutUsuariosNestedInput
    cliente?: ClienteUpdateOneWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateInput = {
    codUsuario?: IntFieldUpdateOperationsInput | number
    nombreUsuario?: StringFieldUpdateOperationsInput | string
    contraseñaUsuario?: StringFieldUpdateOperationsInput | string
    emailUsuario?: StringFieldUpdateOperationsInput | string
    fechaRegistroUsuario?: DateTimeFieldUpdateOperationsInput | Date | string
    codRolUsuario?: IntFieldUpdateOperationsInput | number
    cliente?: ClienteUncheckedUpdateOneWithoutUsuarioNestedInput
  }

  export type UsuarioCreateManyInput = {
    codUsuario?: number
    nombreUsuario: string
    contraseñaUsuario: string
    emailUsuario: string
    fechaRegistroUsuario?: Date | string
    codRolUsuario: number
  }

  export type UsuarioUpdateManyMutationInput = {
    nombreUsuario?: StringFieldUpdateOperationsInput | string
    contraseñaUsuario?: StringFieldUpdateOperationsInput | string
    emailUsuario?: StringFieldUpdateOperationsInput | string
    fechaRegistroUsuario?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsuarioUncheckedUpdateManyInput = {
    codUsuario?: IntFieldUpdateOperationsInput | number
    nombreUsuario?: StringFieldUpdateOperationsInput | string
    contraseñaUsuario?: StringFieldUpdateOperationsInput | string
    emailUsuario?: StringFieldUpdateOperationsInput | string
    fechaRegistroUsuario?: DateTimeFieldUpdateOperationsInput | Date | string
    codRolUsuario?: IntFieldUpdateOperationsInput | number
  }

  export type RolUsuarioCreateInput = {
    nombreRolUsuario: string
    fechaHoraBajaRol?: Date | string | null
    permisoUsuario?: RolUsuarioCreatepermisoUsuarioInput | string[]
    activo: boolean
    verificado: boolean
    tokenVerificacion: string
    Usuarios?: UsuarioCreateNestedManyWithoutRolUsuarioInput
  }

  export type RolUsuarioUncheckedCreateInput = {
    codRolUsuario?: number
    nombreRolUsuario: string
    fechaHoraBajaRol?: Date | string | null
    permisoUsuario?: RolUsuarioCreatepermisoUsuarioInput | string[]
    activo: boolean
    verificado: boolean
    tokenVerificacion: string
    Usuarios?: UsuarioUncheckedCreateNestedManyWithoutRolUsuarioInput
  }

  export type RolUsuarioUpdateInput = {
    nombreRolUsuario?: StringFieldUpdateOperationsInput | string
    fechaHoraBajaRol?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    permisoUsuario?: RolUsuarioUpdatepermisoUsuarioInput | string[]
    activo?: BoolFieldUpdateOperationsInput | boolean
    verificado?: BoolFieldUpdateOperationsInput | boolean
    tokenVerificacion?: StringFieldUpdateOperationsInput | string
    Usuarios?: UsuarioUpdateManyWithoutRolUsuarioNestedInput
  }

  export type RolUsuarioUncheckedUpdateInput = {
    codRolUsuario?: IntFieldUpdateOperationsInput | number
    nombreRolUsuario?: StringFieldUpdateOperationsInput | string
    fechaHoraBajaRol?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    permisoUsuario?: RolUsuarioUpdatepermisoUsuarioInput | string[]
    activo?: BoolFieldUpdateOperationsInput | boolean
    verificado?: BoolFieldUpdateOperationsInput | boolean
    tokenVerificacion?: StringFieldUpdateOperationsInput | string
    Usuarios?: UsuarioUncheckedUpdateManyWithoutRolUsuarioNestedInput
  }

  export type RolUsuarioCreateManyInput = {
    codRolUsuario?: number
    nombreRolUsuario: string
    fechaHoraBajaRol?: Date | string | null
    permisoUsuario?: RolUsuarioCreatepermisoUsuarioInput | string[]
    activo: boolean
    verificado: boolean
    tokenVerificacion: string
  }

  export type RolUsuarioUpdateManyMutationInput = {
    nombreRolUsuario?: StringFieldUpdateOperationsInput | string
    fechaHoraBajaRol?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    permisoUsuario?: RolUsuarioUpdatepermisoUsuarioInput | string[]
    activo?: BoolFieldUpdateOperationsInput | boolean
    verificado?: BoolFieldUpdateOperationsInput | boolean
    tokenVerificacion?: StringFieldUpdateOperationsInput | string
  }

  export type RolUsuarioUncheckedUpdateManyInput = {
    codRolUsuario?: IntFieldUpdateOperationsInput | number
    nombreRolUsuario?: StringFieldUpdateOperationsInput | string
    fechaHoraBajaRol?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    permisoUsuario?: RolUsuarioUpdatepermisoUsuarioInput | string[]
    activo?: BoolFieldUpdateOperationsInput | boolean
    verificado?: BoolFieldUpdateOperationsInput | boolean
    tokenVerificacion?: StringFieldUpdateOperationsInput | string
  }

  export type DireccionCreateInput = {
    calle: string
    ciudad: string
    localidad: string
    pais: string
    codigoPostal: number
    clienteDir: ClienteCreateNestedOneWithoutDireccionInput
    envioPedido?: EnvioPedidoCreateNestedManyWithoutDireccionInput
  }

  export type DireccionUncheckedCreateInput = {
    codigoDireccion?: number
    calle: string
    ciudad: string
    localidad: string
    pais: string
    codigoPostal: number
    codCliente: number
    envioPedido?: EnvioPedidoUncheckedCreateNestedManyWithoutDireccionInput
  }

  export type DireccionUpdateInput = {
    calle?: StringFieldUpdateOperationsInput | string
    ciudad?: StringFieldUpdateOperationsInput | string
    localidad?: StringFieldUpdateOperationsInput | string
    pais?: StringFieldUpdateOperationsInput | string
    codigoPostal?: IntFieldUpdateOperationsInput | number
    clienteDir?: ClienteUpdateOneRequiredWithoutDireccionNestedInput
    envioPedido?: EnvioPedidoUpdateManyWithoutDireccionNestedInput
  }

  export type DireccionUncheckedUpdateInput = {
    codigoDireccion?: IntFieldUpdateOperationsInput | number
    calle?: StringFieldUpdateOperationsInput | string
    ciudad?: StringFieldUpdateOperationsInput | string
    localidad?: StringFieldUpdateOperationsInput | string
    pais?: StringFieldUpdateOperationsInput | string
    codigoPostal?: IntFieldUpdateOperationsInput | number
    codCliente?: IntFieldUpdateOperationsInput | number
    envioPedido?: EnvioPedidoUncheckedUpdateManyWithoutDireccionNestedInput
  }

  export type DireccionCreateManyInput = {
    codigoDireccion?: number
    calle: string
    ciudad: string
    localidad: string
    pais: string
    codigoPostal: number
    codCliente: number
  }

  export type DireccionUpdateManyMutationInput = {
    calle?: StringFieldUpdateOperationsInput | string
    ciudad?: StringFieldUpdateOperationsInput | string
    localidad?: StringFieldUpdateOperationsInput | string
    pais?: StringFieldUpdateOperationsInput | string
    codigoPostal?: IntFieldUpdateOperationsInput | number
  }

  export type DireccionUncheckedUpdateManyInput = {
    codigoDireccion?: IntFieldUpdateOperationsInput | number
    calle?: StringFieldUpdateOperationsInput | string
    ciudad?: StringFieldUpdateOperationsInput | string
    localidad?: StringFieldUpdateOperationsInput | string
    pais?: StringFieldUpdateOperationsInput | string
    codigoPostal?: IntFieldUpdateOperationsInput | number
    codCliente?: IntFieldUpdateOperationsInput | number
  }

  export type PedidoCreateInput = {
    impuestoSobreVenta: number
    envioGratuito: boolean
    montoTotal: number
    fechaAltaPedido?: Date | string
    cliente: ClienteCreateNestedOneWithoutPedidoInput
    carritoCompra: CarritoComprasCreateNestedOneWithoutPedidoInput
    estadoPedido: EstadoPedidoCreateNestedOneWithoutPedidosInput
    articuloPedido?: ArticuloPedidoCreateNestedManyWithoutPedidoInput
  }

  export type PedidoUncheckedCreateInput = {
    codPedido?: number
    impuestoSobreVenta: number
    envioGratuito: boolean
    montoTotal: number
    fechaAltaPedido?: Date | string
    codCliente: number
    codCarritoCompra: number
    codEstadoPedido: number
    articuloPedido?: ArticuloPedidoUncheckedCreateNestedManyWithoutPedidoInput
  }

  export type PedidoUpdateInput = {
    impuestoSobreVenta?: FloatFieldUpdateOperationsInput | number
    envioGratuito?: BoolFieldUpdateOperationsInput | boolean
    montoTotal?: FloatFieldUpdateOperationsInput | number
    fechaAltaPedido?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: ClienteUpdateOneRequiredWithoutPedidoNestedInput
    carritoCompra?: CarritoComprasUpdateOneRequiredWithoutPedidoNestedInput
    estadoPedido?: EstadoPedidoUpdateOneRequiredWithoutPedidosNestedInput
    articuloPedido?: ArticuloPedidoUpdateManyWithoutPedidoNestedInput
  }

  export type PedidoUncheckedUpdateInput = {
    codPedido?: IntFieldUpdateOperationsInput | number
    impuestoSobreVenta?: FloatFieldUpdateOperationsInput | number
    envioGratuito?: BoolFieldUpdateOperationsInput | boolean
    montoTotal?: FloatFieldUpdateOperationsInput | number
    fechaAltaPedido?: DateTimeFieldUpdateOperationsInput | Date | string
    codCliente?: IntFieldUpdateOperationsInput | number
    codCarritoCompra?: IntFieldUpdateOperationsInput | number
    codEstadoPedido?: IntFieldUpdateOperationsInput | number
    articuloPedido?: ArticuloPedidoUncheckedUpdateManyWithoutPedidoNestedInput
  }

  export type PedidoCreateManyInput = {
    codPedido?: number
    impuestoSobreVenta: number
    envioGratuito: boolean
    montoTotal: number
    fechaAltaPedido?: Date | string
    codCliente: number
    codCarritoCompra: number
    codEstadoPedido: number
  }

  export type PedidoUpdateManyMutationInput = {
    impuestoSobreVenta?: FloatFieldUpdateOperationsInput | number
    envioGratuito?: BoolFieldUpdateOperationsInput | boolean
    montoTotal?: FloatFieldUpdateOperationsInput | number
    fechaAltaPedido?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PedidoUncheckedUpdateManyInput = {
    codPedido?: IntFieldUpdateOperationsInput | number
    impuestoSobreVenta?: FloatFieldUpdateOperationsInput | number
    envioGratuito?: BoolFieldUpdateOperationsInput | boolean
    montoTotal?: FloatFieldUpdateOperationsInput | number
    fechaAltaPedido?: DateTimeFieldUpdateOperationsInput | Date | string
    codCliente?: IntFieldUpdateOperationsInput | number
    codCarritoCompra?: IntFieldUpdateOperationsInput | number
    codEstadoPedido?: IntFieldUpdateOperationsInput | number
  }

  export type EstadoPedidoCreateInput = {
    nombreEstadoPedido: string
    fechaHoraBajaEP?: Date | string | null
    pedidos?: PedidoCreateNestedManyWithoutEstadoPedidoInput
  }

  export type EstadoPedidoUncheckedCreateInput = {
    codEstadoPedido?: number
    nombreEstadoPedido: string
    fechaHoraBajaEP?: Date | string | null
    pedidos?: PedidoUncheckedCreateNestedManyWithoutEstadoPedidoInput
  }

  export type EstadoPedidoUpdateInput = {
    nombreEstadoPedido?: StringFieldUpdateOperationsInput | string
    fechaHoraBajaEP?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pedidos?: PedidoUpdateManyWithoutEstadoPedidoNestedInput
  }

  export type EstadoPedidoUncheckedUpdateInput = {
    codEstadoPedido?: IntFieldUpdateOperationsInput | number
    nombreEstadoPedido?: StringFieldUpdateOperationsInput | string
    fechaHoraBajaEP?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pedidos?: PedidoUncheckedUpdateManyWithoutEstadoPedidoNestedInput
  }

  export type EstadoPedidoCreateManyInput = {
    codEstadoPedido?: number
    nombreEstadoPedido: string
    fechaHoraBajaEP?: Date | string | null
  }

  export type EstadoPedidoUpdateManyMutationInput = {
    nombreEstadoPedido?: StringFieldUpdateOperationsInput | string
    fechaHoraBajaEP?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type EstadoPedidoUncheckedUpdateManyInput = {
    codEstadoPedido?: IntFieldUpdateOperationsInput | number
    nombreEstadoPedido?: StringFieldUpdateOperationsInput | string
    fechaHoraBajaEP?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CarritoComprasCreateInput = {
    montoCarritoCompra: number
    codPedido: number
    pedido?: PedidoCreateNestedOneWithoutCarritoCompraInput
    articuloPedido?: ArticuloPedidoCreateNestedManyWithoutCarritoCompraInput
  }

  export type CarritoComprasUncheckedCreateInput = {
    codCarritoCompra?: number
    montoCarritoCompra: number
    codPedido: number
    pedido?: PedidoUncheckedCreateNestedOneWithoutCarritoCompraInput
    articuloPedido?: ArticuloPedidoUncheckedCreateNestedManyWithoutCarritoCompraInput
  }

  export type CarritoComprasUpdateInput = {
    montoCarritoCompra?: FloatFieldUpdateOperationsInput | number
    codPedido?: IntFieldUpdateOperationsInput | number
    pedido?: PedidoUpdateOneWithoutCarritoCompraNestedInput
    articuloPedido?: ArticuloPedidoUpdateManyWithoutCarritoCompraNestedInput
  }

  export type CarritoComprasUncheckedUpdateInput = {
    codCarritoCompra?: IntFieldUpdateOperationsInput | number
    montoCarritoCompra?: FloatFieldUpdateOperationsInput | number
    codPedido?: IntFieldUpdateOperationsInput | number
    pedido?: PedidoUncheckedUpdateOneWithoutCarritoCompraNestedInput
    articuloPedido?: ArticuloPedidoUncheckedUpdateManyWithoutCarritoCompraNestedInput
  }

  export type CarritoComprasCreateManyInput = {
    codCarritoCompra?: number
    montoCarritoCompra: number
    codPedido: number
  }

  export type CarritoComprasUpdateManyMutationInput = {
    montoCarritoCompra?: FloatFieldUpdateOperationsInput | number
    codPedido?: IntFieldUpdateOperationsInput | number
  }

  export type CarritoComprasUncheckedUpdateManyInput = {
    codCarritoCompra?: IntFieldUpdateOperationsInput | number
    montoCarritoCompra?: FloatFieldUpdateOperationsInput | number
    codPedido?: IntFieldUpdateOperationsInput | number
  }

  export type ListaFavoritoCreateInput = {
    nombreListaFavorito: string
    cliente: ClienteCreateNestedOneWithoutListaFavInput
    articulo?: ArticuloCreateNestedManyWithoutListaFavInput
  }

  export type ListaFavoritoUncheckedCreateInput = {
    codListaFavorito?: number
    nombreListaFavorito: string
    codCliente: number
    articulo?: ArticuloUncheckedCreateNestedManyWithoutListaFavInput
  }

  export type ListaFavoritoUpdateInput = {
    nombreListaFavorito?: StringFieldUpdateOperationsInput | string
    cliente?: ClienteUpdateOneRequiredWithoutListaFavNestedInput
    articulo?: ArticuloUpdateManyWithoutListaFavNestedInput
  }

  export type ListaFavoritoUncheckedUpdateInput = {
    codListaFavorito?: IntFieldUpdateOperationsInput | number
    nombreListaFavorito?: StringFieldUpdateOperationsInput | string
    codCliente?: IntFieldUpdateOperationsInput | number
    articulo?: ArticuloUncheckedUpdateManyWithoutListaFavNestedInput
  }

  export type ListaFavoritoCreateManyInput = {
    codListaFavorito?: number
    nombreListaFavorito: string
    codCliente: number
  }

  export type ListaFavoritoUpdateManyMutationInput = {
    nombreListaFavorito?: StringFieldUpdateOperationsInput | string
  }

  export type ListaFavoritoUncheckedUpdateManyInput = {
    codListaFavorito?: IntFieldUpdateOperationsInput | number
    nombreListaFavorito?: StringFieldUpdateOperationsInput | string
    codCliente?: IntFieldUpdateOperationsInput | number
  }

  export type ArticuloCreateInput = {
    nombreArticulo: string
    descripcion: string
    stock: number
    precio: number
    codCategoria: number
    articuloPedido?: ArticuloPedidoCreateNestedManyWithoutArticuloInput
    listaFav?: ListaFavoritoCreateNestedManyWithoutArticuloInput
    categorias?: CategoriaCreateNestedManyWithoutArticulosInput
  }

  export type ArticuloUncheckedCreateInput = {
    codArticulo?: number
    nombreArticulo: string
    descripcion: string
    stock: number
    precio: number
    codCategoria: number
    articuloPedido?: ArticuloPedidoUncheckedCreateNestedManyWithoutArticuloInput
    listaFav?: ListaFavoritoUncheckedCreateNestedManyWithoutArticuloInput
    categorias?: CategoriaUncheckedCreateNestedManyWithoutArticulosInput
  }

  export type ArticuloUpdateInput = {
    nombreArticulo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    stock?: IntFieldUpdateOperationsInput | number
    precio?: FloatFieldUpdateOperationsInput | number
    codCategoria?: IntFieldUpdateOperationsInput | number
    articuloPedido?: ArticuloPedidoUpdateManyWithoutArticuloNestedInput
    listaFav?: ListaFavoritoUpdateManyWithoutArticuloNestedInput
    categorias?: CategoriaUpdateManyWithoutArticulosNestedInput
  }

  export type ArticuloUncheckedUpdateInput = {
    codArticulo?: IntFieldUpdateOperationsInput | number
    nombreArticulo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    stock?: IntFieldUpdateOperationsInput | number
    precio?: FloatFieldUpdateOperationsInput | number
    codCategoria?: IntFieldUpdateOperationsInput | number
    articuloPedido?: ArticuloPedidoUncheckedUpdateManyWithoutArticuloNestedInput
    listaFav?: ListaFavoritoUncheckedUpdateManyWithoutArticuloNestedInput
    categorias?: CategoriaUncheckedUpdateManyWithoutArticulosNestedInput
  }

  export type ArticuloCreateManyInput = {
    codArticulo?: number
    nombreArticulo: string
    descripcion: string
    stock: number
    precio: number
    codCategoria: number
  }

  export type ArticuloUpdateManyMutationInput = {
    nombreArticulo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    stock?: IntFieldUpdateOperationsInput | number
    precio?: FloatFieldUpdateOperationsInput | number
    codCategoria?: IntFieldUpdateOperationsInput | number
  }

  export type ArticuloUncheckedUpdateManyInput = {
    codArticulo?: IntFieldUpdateOperationsInput | number
    nombreArticulo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    stock?: IntFieldUpdateOperationsInput | number
    precio?: FloatFieldUpdateOperationsInput | number
    codCategoria?: IntFieldUpdateOperationsInput | number
  }

  export type CategoriaCreateInput = {
    nombreCategoria: string
    descripcion: string
    fechaBajaCategoria?: Date | string | null
    articulos?: ArticuloCreateNestedManyWithoutCategoriasInput
  }

  export type CategoriaUncheckedCreateInput = {
    codCategoria?: number
    nombreCategoria: string
    descripcion: string
    fechaBajaCategoria?: Date | string | null
    articulos?: ArticuloUncheckedCreateNestedManyWithoutCategoriasInput
  }

  export type CategoriaUpdateInput = {
    nombreCategoria?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fechaBajaCategoria?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    articulos?: ArticuloUpdateManyWithoutCategoriasNestedInput
  }

  export type CategoriaUncheckedUpdateInput = {
    codCategoria?: IntFieldUpdateOperationsInput | number
    nombreCategoria?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fechaBajaCategoria?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    articulos?: ArticuloUncheckedUpdateManyWithoutCategoriasNestedInput
  }

  export type CategoriaCreateManyInput = {
    codCategoria?: number
    nombreCategoria: string
    descripcion: string
    fechaBajaCategoria?: Date | string | null
  }

  export type CategoriaUpdateManyMutationInput = {
    nombreCategoria?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fechaBajaCategoria?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CategoriaUncheckedUpdateManyInput = {
    codCategoria?: IntFieldUpdateOperationsInput | number
    nombreCategoria?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fechaBajaCategoria?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ArticuloPedidoCreateInput = {
    cantidadArtPed: number
    montoArticuloPe: number
    PrecioUnitario: number
    pedido: PedidoCreateNestedOneWithoutArticuloPedidoInput
    carritoCompra: CarritoComprasCreateNestedOneWithoutArticuloPedidoInput
    articulo: ArticuloCreateNestedOneWithoutArticuloPedidoInput
  }

  export type ArticuloPedidoUncheckedCreateInput = {
    cantidadArtPed: number
    nroRenglon?: number
    montoArticuloPe: number
    PrecioUnitario: number
    codPedido: number
    codCarritoCompra: number
    codArticulo: number
  }

  export type ArticuloPedidoUpdateInput = {
    cantidadArtPed?: IntFieldUpdateOperationsInput | number
    montoArticuloPe?: FloatFieldUpdateOperationsInput | number
    PrecioUnitario?: FloatFieldUpdateOperationsInput | number
    pedido?: PedidoUpdateOneRequiredWithoutArticuloPedidoNestedInput
    carritoCompra?: CarritoComprasUpdateOneRequiredWithoutArticuloPedidoNestedInput
    articulo?: ArticuloUpdateOneRequiredWithoutArticuloPedidoNestedInput
  }

  export type ArticuloPedidoUncheckedUpdateInput = {
    cantidadArtPed?: IntFieldUpdateOperationsInput | number
    nroRenglon?: IntFieldUpdateOperationsInput | number
    montoArticuloPe?: FloatFieldUpdateOperationsInput | number
    PrecioUnitario?: FloatFieldUpdateOperationsInput | number
    codPedido?: IntFieldUpdateOperationsInput | number
    codCarritoCompra?: IntFieldUpdateOperationsInput | number
    codArticulo?: IntFieldUpdateOperationsInput | number
  }

  export type ArticuloPedidoCreateManyInput = {
    cantidadArtPed: number
    nroRenglon?: number
    montoArticuloPe: number
    PrecioUnitario: number
    codPedido: number
    codCarritoCompra: number
    codArticulo: number
  }

  export type ArticuloPedidoUpdateManyMutationInput = {
    cantidadArtPed?: IntFieldUpdateOperationsInput | number
    montoArticuloPe?: FloatFieldUpdateOperationsInput | number
    PrecioUnitario?: FloatFieldUpdateOperationsInput | number
  }

  export type ArticuloPedidoUncheckedUpdateManyInput = {
    cantidadArtPed?: IntFieldUpdateOperationsInput | number
    nroRenglon?: IntFieldUpdateOperationsInput | number
    montoArticuloPe?: FloatFieldUpdateOperationsInput | number
    PrecioUnitario?: FloatFieldUpdateOperationsInput | number
    codPedido?: IntFieldUpdateOperationsInput | number
    codCarritoCompra?: IntFieldUpdateOperationsInput | number
    codArticulo?: IntFieldUpdateOperationsInput | number
  }

  export type EnvioPedidoCreateInput = {
    empresaEnvio: string
    costoEnvio: number
    fechaSalida?: Date | string | null
    fechaEntregaEstimada: Date | string
    fechaEntregaBaja?: Date | string | null
    estadoEnvio: EstadoEnvioCreateNestedOneWithoutEnvioPedidoInput
    direccion: DireccionCreateNestedOneWithoutEnvioPedidoInput
  }

  export type EnvioPedidoUncheckedCreateInput = {
    codEnvio?: number
    empresaEnvio: string
    costoEnvio: number
    fechaSalida?: Date | string | null
    fechaEntregaEstimada: Date | string
    fechaEntregaBaja?: Date | string | null
    codEstadoEnvio: number
    codigoDireccion: number
  }

  export type EnvioPedidoUpdateInput = {
    empresaEnvio?: StringFieldUpdateOperationsInput | string
    costoEnvio?: FloatFieldUpdateOperationsInput | number
    fechaSalida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaEntregaEstimada?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaEntregaBaja?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estadoEnvio?: EstadoEnvioUpdateOneRequiredWithoutEnvioPedidoNestedInput
    direccion?: DireccionUpdateOneRequiredWithoutEnvioPedidoNestedInput
  }

  export type EnvioPedidoUncheckedUpdateInput = {
    codEnvio?: IntFieldUpdateOperationsInput | number
    empresaEnvio?: StringFieldUpdateOperationsInput | string
    costoEnvio?: FloatFieldUpdateOperationsInput | number
    fechaSalida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaEntregaEstimada?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaEntregaBaja?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    codEstadoEnvio?: IntFieldUpdateOperationsInput | number
    codigoDireccion?: IntFieldUpdateOperationsInput | number
  }

  export type EnvioPedidoCreateManyInput = {
    codEnvio?: number
    empresaEnvio: string
    costoEnvio: number
    fechaSalida?: Date | string | null
    fechaEntregaEstimada: Date | string
    fechaEntregaBaja?: Date | string | null
    codEstadoEnvio: number
    codigoDireccion: number
  }

  export type EnvioPedidoUpdateManyMutationInput = {
    empresaEnvio?: StringFieldUpdateOperationsInput | string
    costoEnvio?: FloatFieldUpdateOperationsInput | number
    fechaSalida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaEntregaEstimada?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaEntregaBaja?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type EnvioPedidoUncheckedUpdateManyInput = {
    codEnvio?: IntFieldUpdateOperationsInput | number
    empresaEnvio?: StringFieldUpdateOperationsInput | string
    costoEnvio?: FloatFieldUpdateOperationsInput | number
    fechaSalida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaEntregaEstimada?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaEntregaBaja?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    codEstadoEnvio?: IntFieldUpdateOperationsInput | number
    codigoDireccion?: IntFieldUpdateOperationsInput | number
  }

  export type EstadoEnvioCreateInput = {
    nombreEstadoEnvio: string
    fechaHoraBajaEE?: Date | string | null
    envioPedido?: EnvioPedidoCreateNestedManyWithoutEstadoEnvioInput
  }

  export type EstadoEnvioUncheckedCreateInput = {
    codEstadoEnvio?: number
    nombreEstadoEnvio: string
    fechaHoraBajaEE?: Date | string | null
    envioPedido?: EnvioPedidoUncheckedCreateNestedManyWithoutEstadoEnvioInput
  }

  export type EstadoEnvioUpdateInput = {
    nombreEstadoEnvio?: StringFieldUpdateOperationsInput | string
    fechaHoraBajaEE?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    envioPedido?: EnvioPedidoUpdateManyWithoutEstadoEnvioNestedInput
  }

  export type EstadoEnvioUncheckedUpdateInput = {
    codEstadoEnvio?: IntFieldUpdateOperationsInput | number
    nombreEstadoEnvio?: StringFieldUpdateOperationsInput | string
    fechaHoraBajaEE?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    envioPedido?: EnvioPedidoUncheckedUpdateManyWithoutEstadoEnvioNestedInput
  }

  export type EstadoEnvioCreateManyInput = {
    codEstadoEnvio?: number
    nombreEstadoEnvio: string
    fechaHoraBajaEE?: Date | string | null
  }

  export type EstadoEnvioUpdateManyMutationInput = {
    nombreEstadoEnvio?: StringFieldUpdateOperationsInput | string
    fechaHoraBajaEE?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type EstadoEnvioUncheckedUpdateManyInput = {
    codEstadoEnvio?: IntFieldUpdateOperationsInput | number
    nombreEstadoEnvio?: StringFieldUpdateOperationsInput | string
    fechaHoraBajaEE?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MedioPagoCreateInput = {
    nombreTipoMedioPago: string
    fechaHoraBajaMedioPago?: Date | string | null
    clientes?: ClienteCreateNestedManyWithoutMedioPagoInput
    Pago?: PagoCreateNestedManyWithoutMedioPagoInput
  }

  export type MedioPagoUncheckedCreateInput = {
    codMedioPago?: number
    nombreTipoMedioPago: string
    fechaHoraBajaMedioPago?: Date | string | null
    clientes?: ClienteUncheckedCreateNestedManyWithoutMedioPagoInput
    Pago?: PagoUncheckedCreateNestedManyWithoutMedioPagoInput
  }

  export type MedioPagoUpdateInput = {
    nombreTipoMedioPago?: StringFieldUpdateOperationsInput | string
    fechaHoraBajaMedioPago?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientes?: ClienteUpdateManyWithoutMedioPagoNestedInput
    Pago?: PagoUpdateManyWithoutMedioPagoNestedInput
  }

  export type MedioPagoUncheckedUpdateInput = {
    codMedioPago?: IntFieldUpdateOperationsInput | number
    nombreTipoMedioPago?: StringFieldUpdateOperationsInput | string
    fechaHoraBajaMedioPago?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientes?: ClienteUncheckedUpdateManyWithoutMedioPagoNestedInput
    Pago?: PagoUncheckedUpdateManyWithoutMedioPagoNestedInput
  }

  export type MedioPagoCreateManyInput = {
    codMedioPago?: number
    nombreTipoMedioPago: string
    fechaHoraBajaMedioPago?: Date | string | null
  }

  export type MedioPagoUpdateManyMutationInput = {
    nombreTipoMedioPago?: StringFieldUpdateOperationsInput | string
    fechaHoraBajaMedioPago?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MedioPagoUncheckedUpdateManyInput = {
    codMedioPago?: IntFieldUpdateOperationsInput | number
    nombreTipoMedioPago?: StringFieldUpdateOperationsInput | string
    fechaHoraBajaMedioPago?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PagoCreateInput = {
    nombreTipoMedioPago: string
    montoPagado: number
    transaccionId: number
    fechaHoraPago?: Date | string | null
    medioPago: MedioPagoCreateNestedOneWithoutPagoInput
    estadoPago: EstadoPagoCreateNestedOneWithoutPagosInput
  }

  export type PagoUncheckedCreateInput = {
    codPago?: number
    nombreTipoMedioPago: string
    montoPagado: number
    transaccionId: number
    fechaHoraPago?: Date | string | null
    codMedioPago: number
    codEstadoPago: number
  }

  export type PagoUpdateInput = {
    nombreTipoMedioPago?: StringFieldUpdateOperationsInput | string
    montoPagado?: FloatFieldUpdateOperationsInput | number
    transaccionId?: IntFieldUpdateOperationsInput | number
    fechaHoraPago?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    medioPago?: MedioPagoUpdateOneRequiredWithoutPagoNestedInput
    estadoPago?: EstadoPagoUpdateOneRequiredWithoutPagosNestedInput
  }

  export type PagoUncheckedUpdateInput = {
    codPago?: IntFieldUpdateOperationsInput | number
    nombreTipoMedioPago?: StringFieldUpdateOperationsInput | string
    montoPagado?: FloatFieldUpdateOperationsInput | number
    transaccionId?: IntFieldUpdateOperationsInput | number
    fechaHoraPago?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    codMedioPago?: IntFieldUpdateOperationsInput | number
    codEstadoPago?: IntFieldUpdateOperationsInput | number
  }

  export type PagoCreateManyInput = {
    codPago?: number
    nombreTipoMedioPago: string
    montoPagado: number
    transaccionId: number
    fechaHoraPago?: Date | string | null
    codMedioPago: number
    codEstadoPago: number
  }

  export type PagoUpdateManyMutationInput = {
    nombreTipoMedioPago?: StringFieldUpdateOperationsInput | string
    montoPagado?: FloatFieldUpdateOperationsInput | number
    transaccionId?: IntFieldUpdateOperationsInput | number
    fechaHoraPago?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PagoUncheckedUpdateManyInput = {
    codPago?: IntFieldUpdateOperationsInput | number
    nombreTipoMedioPago?: StringFieldUpdateOperationsInput | string
    montoPagado?: FloatFieldUpdateOperationsInput | number
    transaccionId?: IntFieldUpdateOperationsInput | number
    fechaHoraPago?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    codMedioPago?: IntFieldUpdateOperationsInput | number
    codEstadoPago?: IntFieldUpdateOperationsInput | number
  }

  export type EstadoPagoCreateInput = {
    nombreEstadoPago: string
    fechaHoraBajaEP?: Date | string | null
    pagos?: PagoCreateNestedManyWithoutEstadoPagoInput
  }

  export type EstadoPagoUncheckedCreateInput = {
    codEstadoPago?: number
    nombreEstadoPago: string
    fechaHoraBajaEP?: Date | string | null
    pagos?: PagoUncheckedCreateNestedManyWithoutEstadoPagoInput
  }

  export type EstadoPagoUpdateInput = {
    nombreEstadoPago?: StringFieldUpdateOperationsInput | string
    fechaHoraBajaEP?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pagos?: PagoUpdateManyWithoutEstadoPagoNestedInput
  }

  export type EstadoPagoUncheckedUpdateInput = {
    codEstadoPago?: IntFieldUpdateOperationsInput | number
    nombreEstadoPago?: StringFieldUpdateOperationsInput | string
    fechaHoraBajaEP?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pagos?: PagoUncheckedUpdateManyWithoutEstadoPagoNestedInput
  }

  export type EstadoPagoCreateManyInput = {
    codEstadoPago?: number
    nombreEstadoPago: string
    fechaHoraBajaEP?: Date | string | null
  }

  export type EstadoPagoUpdateManyMutationInput = {
    nombreEstadoPago?: StringFieldUpdateOperationsInput | string
    fechaHoraBajaEP?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type EstadoPagoUncheckedUpdateManyInput = {
    codEstadoPago?: IntFieldUpdateOperationsInput | number
    nombreEstadoPago?: StringFieldUpdateOperationsInput | string
    fechaHoraBajaEP?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type DireccionListRelationFilter = {
    every?: DireccionWhereInput
    some?: DireccionWhereInput
    none?: DireccionWhereInput
  }

  export type UsuarioScalarRelationFilter = {
    is?: UsuarioWhereInput
    isNot?: UsuarioWhereInput
  }

  export type MedioPagoListRelationFilter = {
    every?: MedioPagoWhereInput
    some?: MedioPagoWhereInput
    none?: MedioPagoWhereInput
  }

  export type PedidoListRelationFilter = {
    every?: PedidoWhereInput
    some?: PedidoWhereInput
    none?: PedidoWhereInput
  }

  export type ListaFavoritoNullableScalarRelationFilter = {
    is?: ListaFavoritoWhereInput | null
    isNot?: ListaFavoritoWhereInput | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type DireccionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MedioPagoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PedidoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ClienteCountOrderByAggregateInput = {
    codCliente?: SortOrder
    nombreCliente?: SortOrder
    dni?: SortOrder
    telefono?: SortOrder
    fechaHoraBajaCliente?: SortOrder
    codUsuario?: SortOrder
    codListaFavorito?: SortOrder
  }

  export type ClienteAvgOrderByAggregateInput = {
    codCliente?: SortOrder
    dni?: SortOrder
    telefono?: SortOrder
    codUsuario?: SortOrder
    codListaFavorito?: SortOrder
  }

  export type ClienteMaxOrderByAggregateInput = {
    codCliente?: SortOrder
    nombreCliente?: SortOrder
    dni?: SortOrder
    telefono?: SortOrder
    fechaHoraBajaCliente?: SortOrder
    codUsuario?: SortOrder
    codListaFavorito?: SortOrder
  }

  export type ClienteMinOrderByAggregateInput = {
    codCliente?: SortOrder
    nombreCliente?: SortOrder
    dni?: SortOrder
    telefono?: SortOrder
    fechaHoraBajaCliente?: SortOrder
    codUsuario?: SortOrder
    codListaFavorito?: SortOrder
  }

  export type ClienteSumOrderByAggregateInput = {
    codCliente?: SortOrder
    dni?: SortOrder
    telefono?: SortOrder
    codUsuario?: SortOrder
    codListaFavorito?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type RolUsuarioScalarRelationFilter = {
    is?: RolUsuarioWhereInput
    isNot?: RolUsuarioWhereInput
  }

  export type ClienteNullableScalarRelationFilter = {
    is?: ClienteWhereInput | null
    isNot?: ClienteWhereInput | null
  }

  export type UsuarioCountOrderByAggregateInput = {
    codUsuario?: SortOrder
    nombreUsuario?: SortOrder
    contraseñaUsuario?: SortOrder
    emailUsuario?: SortOrder
    fechaRegistroUsuario?: SortOrder
    codRolUsuario?: SortOrder
  }

  export type UsuarioAvgOrderByAggregateInput = {
    codUsuario?: SortOrder
    codRolUsuario?: SortOrder
  }

  export type UsuarioMaxOrderByAggregateInput = {
    codUsuario?: SortOrder
    nombreUsuario?: SortOrder
    contraseñaUsuario?: SortOrder
    emailUsuario?: SortOrder
    fechaRegistroUsuario?: SortOrder
    codRolUsuario?: SortOrder
  }

  export type UsuarioMinOrderByAggregateInput = {
    codUsuario?: SortOrder
    nombreUsuario?: SortOrder
    contraseñaUsuario?: SortOrder
    emailUsuario?: SortOrder
    fechaRegistroUsuario?: SortOrder
    codRolUsuario?: SortOrder
  }

  export type UsuarioSumOrderByAggregateInput = {
    codUsuario?: SortOrder
    codRolUsuario?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type StringNullableListFilter<$PrismaModel = never> = {
    equals?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    has?: string | StringFieldRefInput<$PrismaModel> | null
    hasEvery?: string[] | ListStringFieldRefInput<$PrismaModel>
    hasSome?: string[] | ListStringFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type UsuarioListRelationFilter = {
    every?: UsuarioWhereInput
    some?: UsuarioWhereInput
    none?: UsuarioWhereInput
  }

  export type UsuarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RolUsuarioCountOrderByAggregateInput = {
    codRolUsuario?: SortOrder
    nombreRolUsuario?: SortOrder
    fechaHoraBajaRol?: SortOrder
    permisoUsuario?: SortOrder
    activo?: SortOrder
    verificado?: SortOrder
    tokenVerificacion?: SortOrder
  }

  export type RolUsuarioAvgOrderByAggregateInput = {
    codRolUsuario?: SortOrder
  }

  export type RolUsuarioMaxOrderByAggregateInput = {
    codRolUsuario?: SortOrder
    nombreRolUsuario?: SortOrder
    fechaHoraBajaRol?: SortOrder
    activo?: SortOrder
    verificado?: SortOrder
    tokenVerificacion?: SortOrder
  }

  export type RolUsuarioMinOrderByAggregateInput = {
    codRolUsuario?: SortOrder
    nombreRolUsuario?: SortOrder
    fechaHoraBajaRol?: SortOrder
    activo?: SortOrder
    verificado?: SortOrder
    tokenVerificacion?: SortOrder
  }

  export type RolUsuarioSumOrderByAggregateInput = {
    codRolUsuario?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type ClienteScalarRelationFilter = {
    is?: ClienteWhereInput
    isNot?: ClienteWhereInput
  }

  export type EnvioPedidoListRelationFilter = {
    every?: EnvioPedidoWhereInput
    some?: EnvioPedidoWhereInput
    none?: EnvioPedidoWhereInput
  }

  export type EnvioPedidoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DireccionCountOrderByAggregateInput = {
    codigoDireccion?: SortOrder
    calle?: SortOrder
    ciudad?: SortOrder
    localidad?: SortOrder
    pais?: SortOrder
    codigoPostal?: SortOrder
    codCliente?: SortOrder
  }

  export type DireccionAvgOrderByAggregateInput = {
    codigoDireccion?: SortOrder
    codigoPostal?: SortOrder
    codCliente?: SortOrder
  }

  export type DireccionMaxOrderByAggregateInput = {
    codigoDireccion?: SortOrder
    calle?: SortOrder
    ciudad?: SortOrder
    localidad?: SortOrder
    pais?: SortOrder
    codigoPostal?: SortOrder
    codCliente?: SortOrder
  }

  export type DireccionMinOrderByAggregateInput = {
    codigoDireccion?: SortOrder
    calle?: SortOrder
    ciudad?: SortOrder
    localidad?: SortOrder
    pais?: SortOrder
    codigoPostal?: SortOrder
    codCliente?: SortOrder
  }

  export type DireccionSumOrderByAggregateInput = {
    codigoDireccion?: SortOrder
    codigoPostal?: SortOrder
    codCliente?: SortOrder
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type CarritoComprasScalarRelationFilter = {
    is?: CarritoComprasWhereInput
    isNot?: CarritoComprasWhereInput
  }

  export type EstadoPedidoScalarRelationFilter = {
    is?: EstadoPedidoWhereInput
    isNot?: EstadoPedidoWhereInput
  }

  export type ArticuloPedidoListRelationFilter = {
    every?: ArticuloPedidoWhereInput
    some?: ArticuloPedidoWhereInput
    none?: ArticuloPedidoWhereInput
  }

  export type ArticuloPedidoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PedidoCountOrderByAggregateInput = {
    codPedido?: SortOrder
    impuestoSobreVenta?: SortOrder
    envioGratuito?: SortOrder
    montoTotal?: SortOrder
    fechaAltaPedido?: SortOrder
    codCliente?: SortOrder
    codCarritoCompra?: SortOrder
    codEstadoPedido?: SortOrder
  }

  export type PedidoAvgOrderByAggregateInput = {
    codPedido?: SortOrder
    impuestoSobreVenta?: SortOrder
    montoTotal?: SortOrder
    codCliente?: SortOrder
    codCarritoCompra?: SortOrder
    codEstadoPedido?: SortOrder
  }

  export type PedidoMaxOrderByAggregateInput = {
    codPedido?: SortOrder
    impuestoSobreVenta?: SortOrder
    envioGratuito?: SortOrder
    montoTotal?: SortOrder
    fechaAltaPedido?: SortOrder
    codCliente?: SortOrder
    codCarritoCompra?: SortOrder
    codEstadoPedido?: SortOrder
  }

  export type PedidoMinOrderByAggregateInput = {
    codPedido?: SortOrder
    impuestoSobreVenta?: SortOrder
    envioGratuito?: SortOrder
    montoTotal?: SortOrder
    fechaAltaPedido?: SortOrder
    codCliente?: SortOrder
    codCarritoCompra?: SortOrder
    codEstadoPedido?: SortOrder
  }

  export type PedidoSumOrderByAggregateInput = {
    codPedido?: SortOrder
    impuestoSobreVenta?: SortOrder
    montoTotal?: SortOrder
    codCliente?: SortOrder
    codCarritoCompra?: SortOrder
    codEstadoPedido?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type EstadoPedidoCountOrderByAggregateInput = {
    codEstadoPedido?: SortOrder
    nombreEstadoPedido?: SortOrder
    fechaHoraBajaEP?: SortOrder
  }

  export type EstadoPedidoAvgOrderByAggregateInput = {
    codEstadoPedido?: SortOrder
  }

  export type EstadoPedidoMaxOrderByAggregateInput = {
    codEstadoPedido?: SortOrder
    nombreEstadoPedido?: SortOrder
    fechaHoraBajaEP?: SortOrder
  }

  export type EstadoPedidoMinOrderByAggregateInput = {
    codEstadoPedido?: SortOrder
    nombreEstadoPedido?: SortOrder
    fechaHoraBajaEP?: SortOrder
  }

  export type EstadoPedidoSumOrderByAggregateInput = {
    codEstadoPedido?: SortOrder
  }

  export type PedidoNullableScalarRelationFilter = {
    is?: PedidoWhereInput | null
    isNot?: PedidoWhereInput | null
  }

  export type CarritoComprasCountOrderByAggregateInput = {
    codCarritoCompra?: SortOrder
    montoCarritoCompra?: SortOrder
    codPedido?: SortOrder
  }

  export type CarritoComprasAvgOrderByAggregateInput = {
    codCarritoCompra?: SortOrder
    montoCarritoCompra?: SortOrder
    codPedido?: SortOrder
  }

  export type CarritoComprasMaxOrderByAggregateInput = {
    codCarritoCompra?: SortOrder
    montoCarritoCompra?: SortOrder
    codPedido?: SortOrder
  }

  export type CarritoComprasMinOrderByAggregateInput = {
    codCarritoCompra?: SortOrder
    montoCarritoCompra?: SortOrder
    codPedido?: SortOrder
  }

  export type CarritoComprasSumOrderByAggregateInput = {
    codCarritoCompra?: SortOrder
    montoCarritoCompra?: SortOrder
    codPedido?: SortOrder
  }

  export type ArticuloListRelationFilter = {
    every?: ArticuloWhereInput
    some?: ArticuloWhereInput
    none?: ArticuloWhereInput
  }

  export type ArticuloOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ListaFavoritoCountOrderByAggregateInput = {
    codListaFavorito?: SortOrder
    nombreListaFavorito?: SortOrder
    codCliente?: SortOrder
  }

  export type ListaFavoritoAvgOrderByAggregateInput = {
    codListaFavorito?: SortOrder
    codCliente?: SortOrder
  }

  export type ListaFavoritoMaxOrderByAggregateInput = {
    codListaFavorito?: SortOrder
    nombreListaFavorito?: SortOrder
    codCliente?: SortOrder
  }

  export type ListaFavoritoMinOrderByAggregateInput = {
    codListaFavorito?: SortOrder
    nombreListaFavorito?: SortOrder
    codCliente?: SortOrder
  }

  export type ListaFavoritoSumOrderByAggregateInput = {
    codListaFavorito?: SortOrder
    codCliente?: SortOrder
  }

  export type ListaFavoritoListRelationFilter = {
    every?: ListaFavoritoWhereInput
    some?: ListaFavoritoWhereInput
    none?: ListaFavoritoWhereInput
  }

  export type CategoriaListRelationFilter = {
    every?: CategoriaWhereInput
    some?: CategoriaWhereInput
    none?: CategoriaWhereInput
  }

  export type ListaFavoritoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CategoriaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ArticuloCountOrderByAggregateInput = {
    codArticulo?: SortOrder
    nombreArticulo?: SortOrder
    descripcion?: SortOrder
    stock?: SortOrder
    precio?: SortOrder
    codCategoria?: SortOrder
  }

  export type ArticuloAvgOrderByAggregateInput = {
    codArticulo?: SortOrder
    stock?: SortOrder
    precio?: SortOrder
    codCategoria?: SortOrder
  }

  export type ArticuloMaxOrderByAggregateInput = {
    codArticulo?: SortOrder
    nombreArticulo?: SortOrder
    descripcion?: SortOrder
    stock?: SortOrder
    precio?: SortOrder
    codCategoria?: SortOrder
  }

  export type ArticuloMinOrderByAggregateInput = {
    codArticulo?: SortOrder
    nombreArticulo?: SortOrder
    descripcion?: SortOrder
    stock?: SortOrder
    precio?: SortOrder
    codCategoria?: SortOrder
  }

  export type ArticuloSumOrderByAggregateInput = {
    codArticulo?: SortOrder
    stock?: SortOrder
    precio?: SortOrder
    codCategoria?: SortOrder
  }

  export type CategoriaCountOrderByAggregateInput = {
    codCategoria?: SortOrder
    nombreCategoria?: SortOrder
    descripcion?: SortOrder
    fechaBajaCategoria?: SortOrder
  }

  export type CategoriaAvgOrderByAggregateInput = {
    codCategoria?: SortOrder
  }

  export type CategoriaMaxOrderByAggregateInput = {
    codCategoria?: SortOrder
    nombreCategoria?: SortOrder
    descripcion?: SortOrder
    fechaBajaCategoria?: SortOrder
  }

  export type CategoriaMinOrderByAggregateInput = {
    codCategoria?: SortOrder
    nombreCategoria?: SortOrder
    descripcion?: SortOrder
    fechaBajaCategoria?: SortOrder
  }

  export type CategoriaSumOrderByAggregateInput = {
    codCategoria?: SortOrder
  }

  export type PedidoScalarRelationFilter = {
    is?: PedidoWhereInput
    isNot?: PedidoWhereInput
  }

  export type ArticuloScalarRelationFilter = {
    is?: ArticuloWhereInput
    isNot?: ArticuloWhereInput
  }

  export type ArticuloPedidoCountOrderByAggregateInput = {
    cantidadArtPed?: SortOrder
    nroRenglon?: SortOrder
    montoArticuloPe?: SortOrder
    PrecioUnitario?: SortOrder
    codPedido?: SortOrder
    codCarritoCompra?: SortOrder
    codArticulo?: SortOrder
  }

  export type ArticuloPedidoAvgOrderByAggregateInput = {
    cantidadArtPed?: SortOrder
    nroRenglon?: SortOrder
    montoArticuloPe?: SortOrder
    PrecioUnitario?: SortOrder
    codPedido?: SortOrder
    codCarritoCompra?: SortOrder
    codArticulo?: SortOrder
  }

  export type ArticuloPedidoMaxOrderByAggregateInput = {
    cantidadArtPed?: SortOrder
    nroRenglon?: SortOrder
    montoArticuloPe?: SortOrder
    PrecioUnitario?: SortOrder
    codPedido?: SortOrder
    codCarritoCompra?: SortOrder
    codArticulo?: SortOrder
  }

  export type ArticuloPedidoMinOrderByAggregateInput = {
    cantidadArtPed?: SortOrder
    nroRenglon?: SortOrder
    montoArticuloPe?: SortOrder
    PrecioUnitario?: SortOrder
    codPedido?: SortOrder
    codCarritoCompra?: SortOrder
    codArticulo?: SortOrder
  }

  export type ArticuloPedidoSumOrderByAggregateInput = {
    cantidadArtPed?: SortOrder
    nroRenglon?: SortOrder
    montoArticuloPe?: SortOrder
    PrecioUnitario?: SortOrder
    codPedido?: SortOrder
    codCarritoCompra?: SortOrder
    codArticulo?: SortOrder
  }

  export type EstadoEnvioScalarRelationFilter = {
    is?: EstadoEnvioWhereInput
    isNot?: EstadoEnvioWhereInput
  }

  export type DireccionScalarRelationFilter = {
    is?: DireccionWhereInput
    isNot?: DireccionWhereInput
  }

  export type EnvioPedidoCountOrderByAggregateInput = {
    codEnvio?: SortOrder
    empresaEnvio?: SortOrder
    costoEnvio?: SortOrder
    fechaSalida?: SortOrder
    fechaEntregaEstimada?: SortOrder
    fechaEntregaBaja?: SortOrder
    codEstadoEnvio?: SortOrder
    codigoDireccion?: SortOrder
  }

  export type EnvioPedidoAvgOrderByAggregateInput = {
    codEnvio?: SortOrder
    costoEnvio?: SortOrder
    codEstadoEnvio?: SortOrder
    codigoDireccion?: SortOrder
  }

  export type EnvioPedidoMaxOrderByAggregateInput = {
    codEnvio?: SortOrder
    empresaEnvio?: SortOrder
    costoEnvio?: SortOrder
    fechaSalida?: SortOrder
    fechaEntregaEstimada?: SortOrder
    fechaEntregaBaja?: SortOrder
    codEstadoEnvio?: SortOrder
    codigoDireccion?: SortOrder
  }

  export type EnvioPedidoMinOrderByAggregateInput = {
    codEnvio?: SortOrder
    empresaEnvio?: SortOrder
    costoEnvio?: SortOrder
    fechaSalida?: SortOrder
    fechaEntregaEstimada?: SortOrder
    fechaEntregaBaja?: SortOrder
    codEstadoEnvio?: SortOrder
    codigoDireccion?: SortOrder
  }

  export type EnvioPedidoSumOrderByAggregateInput = {
    codEnvio?: SortOrder
    costoEnvio?: SortOrder
    codEstadoEnvio?: SortOrder
    codigoDireccion?: SortOrder
  }

  export type EstadoEnvioCountOrderByAggregateInput = {
    codEstadoEnvio?: SortOrder
    nombreEstadoEnvio?: SortOrder
    fechaHoraBajaEE?: SortOrder
  }

  export type EstadoEnvioAvgOrderByAggregateInput = {
    codEstadoEnvio?: SortOrder
  }

  export type EstadoEnvioMaxOrderByAggregateInput = {
    codEstadoEnvio?: SortOrder
    nombreEstadoEnvio?: SortOrder
    fechaHoraBajaEE?: SortOrder
  }

  export type EstadoEnvioMinOrderByAggregateInput = {
    codEstadoEnvio?: SortOrder
    nombreEstadoEnvio?: SortOrder
    fechaHoraBajaEE?: SortOrder
  }

  export type EstadoEnvioSumOrderByAggregateInput = {
    codEstadoEnvio?: SortOrder
  }

  export type ClienteListRelationFilter = {
    every?: ClienteWhereInput
    some?: ClienteWhereInput
    none?: ClienteWhereInput
  }

  export type PagoListRelationFilter = {
    every?: PagoWhereInput
    some?: PagoWhereInput
    none?: PagoWhereInput
  }

  export type ClienteOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PagoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MedioPagoCountOrderByAggregateInput = {
    codMedioPago?: SortOrder
    nombreTipoMedioPago?: SortOrder
    fechaHoraBajaMedioPago?: SortOrder
  }

  export type MedioPagoAvgOrderByAggregateInput = {
    codMedioPago?: SortOrder
  }

  export type MedioPagoMaxOrderByAggregateInput = {
    codMedioPago?: SortOrder
    nombreTipoMedioPago?: SortOrder
    fechaHoraBajaMedioPago?: SortOrder
  }

  export type MedioPagoMinOrderByAggregateInput = {
    codMedioPago?: SortOrder
    nombreTipoMedioPago?: SortOrder
    fechaHoraBajaMedioPago?: SortOrder
  }

  export type MedioPagoSumOrderByAggregateInput = {
    codMedioPago?: SortOrder
  }

  export type MedioPagoScalarRelationFilter = {
    is?: MedioPagoWhereInput
    isNot?: MedioPagoWhereInput
  }

  export type EstadoPagoScalarRelationFilter = {
    is?: EstadoPagoWhereInput
    isNot?: EstadoPagoWhereInput
  }

  export type PagoCountOrderByAggregateInput = {
    codPago?: SortOrder
    nombreTipoMedioPago?: SortOrder
    montoPagado?: SortOrder
    transaccionId?: SortOrder
    fechaHoraPago?: SortOrder
    codMedioPago?: SortOrder
    codEstadoPago?: SortOrder
  }

  export type PagoAvgOrderByAggregateInput = {
    codPago?: SortOrder
    montoPagado?: SortOrder
    transaccionId?: SortOrder
    codMedioPago?: SortOrder
    codEstadoPago?: SortOrder
  }

  export type PagoMaxOrderByAggregateInput = {
    codPago?: SortOrder
    nombreTipoMedioPago?: SortOrder
    montoPagado?: SortOrder
    transaccionId?: SortOrder
    fechaHoraPago?: SortOrder
    codMedioPago?: SortOrder
    codEstadoPago?: SortOrder
  }

  export type PagoMinOrderByAggregateInput = {
    codPago?: SortOrder
    nombreTipoMedioPago?: SortOrder
    montoPagado?: SortOrder
    transaccionId?: SortOrder
    fechaHoraPago?: SortOrder
    codMedioPago?: SortOrder
    codEstadoPago?: SortOrder
  }

  export type PagoSumOrderByAggregateInput = {
    codPago?: SortOrder
    montoPagado?: SortOrder
    transaccionId?: SortOrder
    codMedioPago?: SortOrder
    codEstadoPago?: SortOrder
  }

  export type EstadoPagoCountOrderByAggregateInput = {
    codEstadoPago?: SortOrder
    nombreEstadoPago?: SortOrder
    fechaHoraBajaEP?: SortOrder
  }

  export type EstadoPagoAvgOrderByAggregateInput = {
    codEstadoPago?: SortOrder
  }

  export type EstadoPagoMaxOrderByAggregateInput = {
    codEstadoPago?: SortOrder
    nombreEstadoPago?: SortOrder
    fechaHoraBajaEP?: SortOrder
  }

  export type EstadoPagoMinOrderByAggregateInput = {
    codEstadoPago?: SortOrder
    nombreEstadoPago?: SortOrder
    fechaHoraBajaEP?: SortOrder
  }

  export type EstadoPagoSumOrderByAggregateInput = {
    codEstadoPago?: SortOrder
  }

  export type DireccionCreateNestedManyWithoutClienteDirInput = {
    create?: XOR<DireccionCreateWithoutClienteDirInput, DireccionUncheckedCreateWithoutClienteDirInput> | DireccionCreateWithoutClienteDirInput[] | DireccionUncheckedCreateWithoutClienteDirInput[]
    connectOrCreate?: DireccionCreateOrConnectWithoutClienteDirInput | DireccionCreateOrConnectWithoutClienteDirInput[]
    createMany?: DireccionCreateManyClienteDirInputEnvelope
    connect?: DireccionWhereUniqueInput | DireccionWhereUniqueInput[]
  }

  export type UsuarioCreateNestedOneWithoutClienteInput = {
    create?: XOR<UsuarioCreateWithoutClienteInput, UsuarioUncheckedCreateWithoutClienteInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutClienteInput
    connect?: UsuarioWhereUniqueInput
  }

  export type MedioPagoCreateNestedManyWithoutClientesInput = {
    create?: XOR<MedioPagoCreateWithoutClientesInput, MedioPagoUncheckedCreateWithoutClientesInput> | MedioPagoCreateWithoutClientesInput[] | MedioPagoUncheckedCreateWithoutClientesInput[]
    connectOrCreate?: MedioPagoCreateOrConnectWithoutClientesInput | MedioPagoCreateOrConnectWithoutClientesInput[]
    connect?: MedioPagoWhereUniqueInput | MedioPagoWhereUniqueInput[]
  }

  export type PedidoCreateNestedManyWithoutClienteInput = {
    create?: XOR<PedidoCreateWithoutClienteInput, PedidoUncheckedCreateWithoutClienteInput> | PedidoCreateWithoutClienteInput[] | PedidoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: PedidoCreateOrConnectWithoutClienteInput | PedidoCreateOrConnectWithoutClienteInput[]
    createMany?: PedidoCreateManyClienteInputEnvelope
    connect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
  }

  export type ListaFavoritoCreateNestedOneWithoutClienteInput = {
    create?: XOR<ListaFavoritoCreateWithoutClienteInput, ListaFavoritoUncheckedCreateWithoutClienteInput>
    connectOrCreate?: ListaFavoritoCreateOrConnectWithoutClienteInput
    connect?: ListaFavoritoWhereUniqueInput
  }

  export type DireccionUncheckedCreateNestedManyWithoutClienteDirInput = {
    create?: XOR<DireccionCreateWithoutClienteDirInput, DireccionUncheckedCreateWithoutClienteDirInput> | DireccionCreateWithoutClienteDirInput[] | DireccionUncheckedCreateWithoutClienteDirInput[]
    connectOrCreate?: DireccionCreateOrConnectWithoutClienteDirInput | DireccionCreateOrConnectWithoutClienteDirInput[]
    createMany?: DireccionCreateManyClienteDirInputEnvelope
    connect?: DireccionWhereUniqueInput | DireccionWhereUniqueInput[]
  }

  export type MedioPagoUncheckedCreateNestedManyWithoutClientesInput = {
    create?: XOR<MedioPagoCreateWithoutClientesInput, MedioPagoUncheckedCreateWithoutClientesInput> | MedioPagoCreateWithoutClientesInput[] | MedioPagoUncheckedCreateWithoutClientesInput[]
    connectOrCreate?: MedioPagoCreateOrConnectWithoutClientesInput | MedioPagoCreateOrConnectWithoutClientesInput[]
    connect?: MedioPagoWhereUniqueInput | MedioPagoWhereUniqueInput[]
  }

  export type PedidoUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<PedidoCreateWithoutClienteInput, PedidoUncheckedCreateWithoutClienteInput> | PedidoCreateWithoutClienteInput[] | PedidoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: PedidoCreateOrConnectWithoutClienteInput | PedidoCreateOrConnectWithoutClienteInput[]
    createMany?: PedidoCreateManyClienteInputEnvelope
    connect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
  }

  export type ListaFavoritoUncheckedCreateNestedOneWithoutClienteInput = {
    create?: XOR<ListaFavoritoCreateWithoutClienteInput, ListaFavoritoUncheckedCreateWithoutClienteInput>
    connectOrCreate?: ListaFavoritoCreateOrConnectWithoutClienteInput
    connect?: ListaFavoritoWhereUniqueInput
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type DireccionUpdateManyWithoutClienteDirNestedInput = {
    create?: XOR<DireccionCreateWithoutClienteDirInput, DireccionUncheckedCreateWithoutClienteDirInput> | DireccionCreateWithoutClienteDirInput[] | DireccionUncheckedCreateWithoutClienteDirInput[]
    connectOrCreate?: DireccionCreateOrConnectWithoutClienteDirInput | DireccionCreateOrConnectWithoutClienteDirInput[]
    upsert?: DireccionUpsertWithWhereUniqueWithoutClienteDirInput | DireccionUpsertWithWhereUniqueWithoutClienteDirInput[]
    createMany?: DireccionCreateManyClienteDirInputEnvelope
    set?: DireccionWhereUniqueInput | DireccionWhereUniqueInput[]
    disconnect?: DireccionWhereUniqueInput | DireccionWhereUniqueInput[]
    delete?: DireccionWhereUniqueInput | DireccionWhereUniqueInput[]
    connect?: DireccionWhereUniqueInput | DireccionWhereUniqueInput[]
    update?: DireccionUpdateWithWhereUniqueWithoutClienteDirInput | DireccionUpdateWithWhereUniqueWithoutClienteDirInput[]
    updateMany?: DireccionUpdateManyWithWhereWithoutClienteDirInput | DireccionUpdateManyWithWhereWithoutClienteDirInput[]
    deleteMany?: DireccionScalarWhereInput | DireccionScalarWhereInput[]
  }

  export type UsuarioUpdateOneRequiredWithoutClienteNestedInput = {
    create?: XOR<UsuarioCreateWithoutClienteInput, UsuarioUncheckedCreateWithoutClienteInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutClienteInput
    upsert?: UsuarioUpsertWithoutClienteInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutClienteInput, UsuarioUpdateWithoutClienteInput>, UsuarioUncheckedUpdateWithoutClienteInput>
  }

  export type MedioPagoUpdateManyWithoutClientesNestedInput = {
    create?: XOR<MedioPagoCreateWithoutClientesInput, MedioPagoUncheckedCreateWithoutClientesInput> | MedioPagoCreateWithoutClientesInput[] | MedioPagoUncheckedCreateWithoutClientesInput[]
    connectOrCreate?: MedioPagoCreateOrConnectWithoutClientesInput | MedioPagoCreateOrConnectWithoutClientesInput[]
    upsert?: MedioPagoUpsertWithWhereUniqueWithoutClientesInput | MedioPagoUpsertWithWhereUniqueWithoutClientesInput[]
    set?: MedioPagoWhereUniqueInput | MedioPagoWhereUniqueInput[]
    disconnect?: MedioPagoWhereUniqueInput | MedioPagoWhereUniqueInput[]
    delete?: MedioPagoWhereUniqueInput | MedioPagoWhereUniqueInput[]
    connect?: MedioPagoWhereUniqueInput | MedioPagoWhereUniqueInput[]
    update?: MedioPagoUpdateWithWhereUniqueWithoutClientesInput | MedioPagoUpdateWithWhereUniqueWithoutClientesInput[]
    updateMany?: MedioPagoUpdateManyWithWhereWithoutClientesInput | MedioPagoUpdateManyWithWhereWithoutClientesInput[]
    deleteMany?: MedioPagoScalarWhereInput | MedioPagoScalarWhereInput[]
  }

  export type PedidoUpdateManyWithoutClienteNestedInput = {
    create?: XOR<PedidoCreateWithoutClienteInput, PedidoUncheckedCreateWithoutClienteInput> | PedidoCreateWithoutClienteInput[] | PedidoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: PedidoCreateOrConnectWithoutClienteInput | PedidoCreateOrConnectWithoutClienteInput[]
    upsert?: PedidoUpsertWithWhereUniqueWithoutClienteInput | PedidoUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: PedidoCreateManyClienteInputEnvelope
    set?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    disconnect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    delete?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    connect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    update?: PedidoUpdateWithWhereUniqueWithoutClienteInput | PedidoUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: PedidoUpdateManyWithWhereWithoutClienteInput | PedidoUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: PedidoScalarWhereInput | PedidoScalarWhereInput[]
  }

  export type ListaFavoritoUpdateOneWithoutClienteNestedInput = {
    create?: XOR<ListaFavoritoCreateWithoutClienteInput, ListaFavoritoUncheckedCreateWithoutClienteInput>
    connectOrCreate?: ListaFavoritoCreateOrConnectWithoutClienteInput
    upsert?: ListaFavoritoUpsertWithoutClienteInput
    disconnect?: ListaFavoritoWhereInput | boolean
    delete?: ListaFavoritoWhereInput | boolean
    connect?: ListaFavoritoWhereUniqueInput
    update?: XOR<XOR<ListaFavoritoUpdateToOneWithWhereWithoutClienteInput, ListaFavoritoUpdateWithoutClienteInput>, ListaFavoritoUncheckedUpdateWithoutClienteInput>
  }

  export type DireccionUncheckedUpdateManyWithoutClienteDirNestedInput = {
    create?: XOR<DireccionCreateWithoutClienteDirInput, DireccionUncheckedCreateWithoutClienteDirInput> | DireccionCreateWithoutClienteDirInput[] | DireccionUncheckedCreateWithoutClienteDirInput[]
    connectOrCreate?: DireccionCreateOrConnectWithoutClienteDirInput | DireccionCreateOrConnectWithoutClienteDirInput[]
    upsert?: DireccionUpsertWithWhereUniqueWithoutClienteDirInput | DireccionUpsertWithWhereUniqueWithoutClienteDirInput[]
    createMany?: DireccionCreateManyClienteDirInputEnvelope
    set?: DireccionWhereUniqueInput | DireccionWhereUniqueInput[]
    disconnect?: DireccionWhereUniqueInput | DireccionWhereUniqueInput[]
    delete?: DireccionWhereUniqueInput | DireccionWhereUniqueInput[]
    connect?: DireccionWhereUniqueInput | DireccionWhereUniqueInput[]
    update?: DireccionUpdateWithWhereUniqueWithoutClienteDirInput | DireccionUpdateWithWhereUniqueWithoutClienteDirInput[]
    updateMany?: DireccionUpdateManyWithWhereWithoutClienteDirInput | DireccionUpdateManyWithWhereWithoutClienteDirInput[]
    deleteMany?: DireccionScalarWhereInput | DireccionScalarWhereInput[]
  }

  export type MedioPagoUncheckedUpdateManyWithoutClientesNestedInput = {
    create?: XOR<MedioPagoCreateWithoutClientesInput, MedioPagoUncheckedCreateWithoutClientesInput> | MedioPagoCreateWithoutClientesInput[] | MedioPagoUncheckedCreateWithoutClientesInput[]
    connectOrCreate?: MedioPagoCreateOrConnectWithoutClientesInput | MedioPagoCreateOrConnectWithoutClientesInput[]
    upsert?: MedioPagoUpsertWithWhereUniqueWithoutClientesInput | MedioPagoUpsertWithWhereUniqueWithoutClientesInput[]
    set?: MedioPagoWhereUniqueInput | MedioPagoWhereUniqueInput[]
    disconnect?: MedioPagoWhereUniqueInput | MedioPagoWhereUniqueInput[]
    delete?: MedioPagoWhereUniqueInput | MedioPagoWhereUniqueInput[]
    connect?: MedioPagoWhereUniqueInput | MedioPagoWhereUniqueInput[]
    update?: MedioPagoUpdateWithWhereUniqueWithoutClientesInput | MedioPagoUpdateWithWhereUniqueWithoutClientesInput[]
    updateMany?: MedioPagoUpdateManyWithWhereWithoutClientesInput | MedioPagoUpdateManyWithWhereWithoutClientesInput[]
    deleteMany?: MedioPagoScalarWhereInput | MedioPagoScalarWhereInput[]
  }

  export type PedidoUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<PedidoCreateWithoutClienteInput, PedidoUncheckedCreateWithoutClienteInput> | PedidoCreateWithoutClienteInput[] | PedidoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: PedidoCreateOrConnectWithoutClienteInput | PedidoCreateOrConnectWithoutClienteInput[]
    upsert?: PedidoUpsertWithWhereUniqueWithoutClienteInput | PedidoUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: PedidoCreateManyClienteInputEnvelope
    set?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    disconnect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    delete?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    connect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    update?: PedidoUpdateWithWhereUniqueWithoutClienteInput | PedidoUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: PedidoUpdateManyWithWhereWithoutClienteInput | PedidoUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: PedidoScalarWhereInput | PedidoScalarWhereInput[]
  }

  export type ListaFavoritoUncheckedUpdateOneWithoutClienteNestedInput = {
    create?: XOR<ListaFavoritoCreateWithoutClienteInput, ListaFavoritoUncheckedCreateWithoutClienteInput>
    connectOrCreate?: ListaFavoritoCreateOrConnectWithoutClienteInput
    upsert?: ListaFavoritoUpsertWithoutClienteInput
    disconnect?: ListaFavoritoWhereInput | boolean
    delete?: ListaFavoritoWhereInput | boolean
    connect?: ListaFavoritoWhereUniqueInput
    update?: XOR<XOR<ListaFavoritoUpdateToOneWithWhereWithoutClienteInput, ListaFavoritoUpdateWithoutClienteInput>, ListaFavoritoUncheckedUpdateWithoutClienteInput>
  }

  export type RolUsuarioCreateNestedOneWithoutUsuariosInput = {
    create?: XOR<RolUsuarioCreateWithoutUsuariosInput, RolUsuarioUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: RolUsuarioCreateOrConnectWithoutUsuariosInput
    connect?: RolUsuarioWhereUniqueInput
  }

  export type ClienteCreateNestedOneWithoutUsuarioInput = {
    create?: XOR<ClienteCreateWithoutUsuarioInput, ClienteUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutUsuarioInput
    connect?: ClienteWhereUniqueInput
  }

  export type ClienteUncheckedCreateNestedOneWithoutUsuarioInput = {
    create?: XOR<ClienteCreateWithoutUsuarioInput, ClienteUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutUsuarioInput
    connect?: ClienteWhereUniqueInput
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type RolUsuarioUpdateOneRequiredWithoutUsuariosNestedInput = {
    create?: XOR<RolUsuarioCreateWithoutUsuariosInput, RolUsuarioUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: RolUsuarioCreateOrConnectWithoutUsuariosInput
    upsert?: RolUsuarioUpsertWithoutUsuariosInput
    connect?: RolUsuarioWhereUniqueInput
    update?: XOR<XOR<RolUsuarioUpdateToOneWithWhereWithoutUsuariosInput, RolUsuarioUpdateWithoutUsuariosInput>, RolUsuarioUncheckedUpdateWithoutUsuariosInput>
  }

  export type ClienteUpdateOneWithoutUsuarioNestedInput = {
    create?: XOR<ClienteCreateWithoutUsuarioInput, ClienteUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutUsuarioInput
    upsert?: ClienteUpsertWithoutUsuarioInput
    disconnect?: ClienteWhereInput | boolean
    delete?: ClienteWhereInput | boolean
    connect?: ClienteWhereUniqueInput
    update?: XOR<XOR<ClienteUpdateToOneWithWhereWithoutUsuarioInput, ClienteUpdateWithoutUsuarioInput>, ClienteUncheckedUpdateWithoutUsuarioInput>
  }

  export type ClienteUncheckedUpdateOneWithoutUsuarioNestedInput = {
    create?: XOR<ClienteCreateWithoutUsuarioInput, ClienteUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutUsuarioInput
    upsert?: ClienteUpsertWithoutUsuarioInput
    disconnect?: ClienteWhereInput | boolean
    delete?: ClienteWhereInput | boolean
    connect?: ClienteWhereUniqueInput
    update?: XOR<XOR<ClienteUpdateToOneWithWhereWithoutUsuarioInput, ClienteUpdateWithoutUsuarioInput>, ClienteUncheckedUpdateWithoutUsuarioInput>
  }

  export type RolUsuarioCreatepermisoUsuarioInput = {
    set: string[]
  }

  export type UsuarioCreateNestedManyWithoutRolUsuarioInput = {
    create?: XOR<UsuarioCreateWithoutRolUsuarioInput, UsuarioUncheckedCreateWithoutRolUsuarioInput> | UsuarioCreateWithoutRolUsuarioInput[] | UsuarioUncheckedCreateWithoutRolUsuarioInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutRolUsuarioInput | UsuarioCreateOrConnectWithoutRolUsuarioInput[]
    createMany?: UsuarioCreateManyRolUsuarioInputEnvelope
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
  }

  export type UsuarioUncheckedCreateNestedManyWithoutRolUsuarioInput = {
    create?: XOR<UsuarioCreateWithoutRolUsuarioInput, UsuarioUncheckedCreateWithoutRolUsuarioInput> | UsuarioCreateWithoutRolUsuarioInput[] | UsuarioUncheckedCreateWithoutRolUsuarioInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutRolUsuarioInput | UsuarioCreateOrConnectWithoutRolUsuarioInput[]
    createMany?: UsuarioCreateManyRolUsuarioInputEnvelope
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
  }

  export type RolUsuarioUpdatepermisoUsuarioInput = {
    set?: string[]
    push?: string | string[]
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type UsuarioUpdateManyWithoutRolUsuarioNestedInput = {
    create?: XOR<UsuarioCreateWithoutRolUsuarioInput, UsuarioUncheckedCreateWithoutRolUsuarioInput> | UsuarioCreateWithoutRolUsuarioInput[] | UsuarioUncheckedCreateWithoutRolUsuarioInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutRolUsuarioInput | UsuarioCreateOrConnectWithoutRolUsuarioInput[]
    upsert?: UsuarioUpsertWithWhereUniqueWithoutRolUsuarioInput | UsuarioUpsertWithWhereUniqueWithoutRolUsuarioInput[]
    createMany?: UsuarioCreateManyRolUsuarioInputEnvelope
    set?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    disconnect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    delete?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    update?: UsuarioUpdateWithWhereUniqueWithoutRolUsuarioInput | UsuarioUpdateWithWhereUniqueWithoutRolUsuarioInput[]
    updateMany?: UsuarioUpdateManyWithWhereWithoutRolUsuarioInput | UsuarioUpdateManyWithWhereWithoutRolUsuarioInput[]
    deleteMany?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
  }

  export type UsuarioUncheckedUpdateManyWithoutRolUsuarioNestedInput = {
    create?: XOR<UsuarioCreateWithoutRolUsuarioInput, UsuarioUncheckedCreateWithoutRolUsuarioInput> | UsuarioCreateWithoutRolUsuarioInput[] | UsuarioUncheckedCreateWithoutRolUsuarioInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutRolUsuarioInput | UsuarioCreateOrConnectWithoutRolUsuarioInput[]
    upsert?: UsuarioUpsertWithWhereUniqueWithoutRolUsuarioInput | UsuarioUpsertWithWhereUniqueWithoutRolUsuarioInput[]
    createMany?: UsuarioCreateManyRolUsuarioInputEnvelope
    set?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    disconnect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    delete?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    update?: UsuarioUpdateWithWhereUniqueWithoutRolUsuarioInput | UsuarioUpdateWithWhereUniqueWithoutRolUsuarioInput[]
    updateMany?: UsuarioUpdateManyWithWhereWithoutRolUsuarioInput | UsuarioUpdateManyWithWhereWithoutRolUsuarioInput[]
    deleteMany?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
  }

  export type ClienteCreateNestedOneWithoutDireccionInput = {
    create?: XOR<ClienteCreateWithoutDireccionInput, ClienteUncheckedCreateWithoutDireccionInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutDireccionInput
    connect?: ClienteWhereUniqueInput
  }

  export type EnvioPedidoCreateNestedManyWithoutDireccionInput = {
    create?: XOR<EnvioPedidoCreateWithoutDireccionInput, EnvioPedidoUncheckedCreateWithoutDireccionInput> | EnvioPedidoCreateWithoutDireccionInput[] | EnvioPedidoUncheckedCreateWithoutDireccionInput[]
    connectOrCreate?: EnvioPedidoCreateOrConnectWithoutDireccionInput | EnvioPedidoCreateOrConnectWithoutDireccionInput[]
    createMany?: EnvioPedidoCreateManyDireccionInputEnvelope
    connect?: EnvioPedidoWhereUniqueInput | EnvioPedidoWhereUniqueInput[]
  }

  export type EnvioPedidoUncheckedCreateNestedManyWithoutDireccionInput = {
    create?: XOR<EnvioPedidoCreateWithoutDireccionInput, EnvioPedidoUncheckedCreateWithoutDireccionInput> | EnvioPedidoCreateWithoutDireccionInput[] | EnvioPedidoUncheckedCreateWithoutDireccionInput[]
    connectOrCreate?: EnvioPedidoCreateOrConnectWithoutDireccionInput | EnvioPedidoCreateOrConnectWithoutDireccionInput[]
    createMany?: EnvioPedidoCreateManyDireccionInputEnvelope
    connect?: EnvioPedidoWhereUniqueInput | EnvioPedidoWhereUniqueInput[]
  }

  export type ClienteUpdateOneRequiredWithoutDireccionNestedInput = {
    create?: XOR<ClienteCreateWithoutDireccionInput, ClienteUncheckedCreateWithoutDireccionInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutDireccionInput
    upsert?: ClienteUpsertWithoutDireccionInput
    connect?: ClienteWhereUniqueInput
    update?: XOR<XOR<ClienteUpdateToOneWithWhereWithoutDireccionInput, ClienteUpdateWithoutDireccionInput>, ClienteUncheckedUpdateWithoutDireccionInput>
  }

  export type EnvioPedidoUpdateManyWithoutDireccionNestedInput = {
    create?: XOR<EnvioPedidoCreateWithoutDireccionInput, EnvioPedidoUncheckedCreateWithoutDireccionInput> | EnvioPedidoCreateWithoutDireccionInput[] | EnvioPedidoUncheckedCreateWithoutDireccionInput[]
    connectOrCreate?: EnvioPedidoCreateOrConnectWithoutDireccionInput | EnvioPedidoCreateOrConnectWithoutDireccionInput[]
    upsert?: EnvioPedidoUpsertWithWhereUniqueWithoutDireccionInput | EnvioPedidoUpsertWithWhereUniqueWithoutDireccionInput[]
    createMany?: EnvioPedidoCreateManyDireccionInputEnvelope
    set?: EnvioPedidoWhereUniqueInput | EnvioPedidoWhereUniqueInput[]
    disconnect?: EnvioPedidoWhereUniqueInput | EnvioPedidoWhereUniqueInput[]
    delete?: EnvioPedidoWhereUniqueInput | EnvioPedidoWhereUniqueInput[]
    connect?: EnvioPedidoWhereUniqueInput | EnvioPedidoWhereUniqueInput[]
    update?: EnvioPedidoUpdateWithWhereUniqueWithoutDireccionInput | EnvioPedidoUpdateWithWhereUniqueWithoutDireccionInput[]
    updateMany?: EnvioPedidoUpdateManyWithWhereWithoutDireccionInput | EnvioPedidoUpdateManyWithWhereWithoutDireccionInput[]
    deleteMany?: EnvioPedidoScalarWhereInput | EnvioPedidoScalarWhereInput[]
  }

  export type EnvioPedidoUncheckedUpdateManyWithoutDireccionNestedInput = {
    create?: XOR<EnvioPedidoCreateWithoutDireccionInput, EnvioPedidoUncheckedCreateWithoutDireccionInput> | EnvioPedidoCreateWithoutDireccionInput[] | EnvioPedidoUncheckedCreateWithoutDireccionInput[]
    connectOrCreate?: EnvioPedidoCreateOrConnectWithoutDireccionInput | EnvioPedidoCreateOrConnectWithoutDireccionInput[]
    upsert?: EnvioPedidoUpsertWithWhereUniqueWithoutDireccionInput | EnvioPedidoUpsertWithWhereUniqueWithoutDireccionInput[]
    createMany?: EnvioPedidoCreateManyDireccionInputEnvelope
    set?: EnvioPedidoWhereUniqueInput | EnvioPedidoWhereUniqueInput[]
    disconnect?: EnvioPedidoWhereUniqueInput | EnvioPedidoWhereUniqueInput[]
    delete?: EnvioPedidoWhereUniqueInput | EnvioPedidoWhereUniqueInput[]
    connect?: EnvioPedidoWhereUniqueInput | EnvioPedidoWhereUniqueInput[]
    update?: EnvioPedidoUpdateWithWhereUniqueWithoutDireccionInput | EnvioPedidoUpdateWithWhereUniqueWithoutDireccionInput[]
    updateMany?: EnvioPedidoUpdateManyWithWhereWithoutDireccionInput | EnvioPedidoUpdateManyWithWhereWithoutDireccionInput[]
    deleteMany?: EnvioPedidoScalarWhereInput | EnvioPedidoScalarWhereInput[]
  }

  export type ClienteCreateNestedOneWithoutPedidoInput = {
    create?: XOR<ClienteCreateWithoutPedidoInput, ClienteUncheckedCreateWithoutPedidoInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutPedidoInput
    connect?: ClienteWhereUniqueInput
  }

  export type CarritoComprasCreateNestedOneWithoutPedidoInput = {
    create?: XOR<CarritoComprasCreateWithoutPedidoInput, CarritoComprasUncheckedCreateWithoutPedidoInput>
    connectOrCreate?: CarritoComprasCreateOrConnectWithoutPedidoInput
    connect?: CarritoComprasWhereUniqueInput
  }

  export type EstadoPedidoCreateNestedOneWithoutPedidosInput = {
    create?: XOR<EstadoPedidoCreateWithoutPedidosInput, EstadoPedidoUncheckedCreateWithoutPedidosInput>
    connectOrCreate?: EstadoPedidoCreateOrConnectWithoutPedidosInput
    connect?: EstadoPedidoWhereUniqueInput
  }

  export type ArticuloPedidoCreateNestedManyWithoutPedidoInput = {
    create?: XOR<ArticuloPedidoCreateWithoutPedidoInput, ArticuloPedidoUncheckedCreateWithoutPedidoInput> | ArticuloPedidoCreateWithoutPedidoInput[] | ArticuloPedidoUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: ArticuloPedidoCreateOrConnectWithoutPedidoInput | ArticuloPedidoCreateOrConnectWithoutPedidoInput[]
    createMany?: ArticuloPedidoCreateManyPedidoInputEnvelope
    connect?: ArticuloPedidoWhereUniqueInput | ArticuloPedidoWhereUniqueInput[]
  }

  export type ArticuloPedidoUncheckedCreateNestedManyWithoutPedidoInput = {
    create?: XOR<ArticuloPedidoCreateWithoutPedidoInput, ArticuloPedidoUncheckedCreateWithoutPedidoInput> | ArticuloPedidoCreateWithoutPedidoInput[] | ArticuloPedidoUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: ArticuloPedidoCreateOrConnectWithoutPedidoInput | ArticuloPedidoCreateOrConnectWithoutPedidoInput[]
    createMany?: ArticuloPedidoCreateManyPedidoInputEnvelope
    connect?: ArticuloPedidoWhereUniqueInput | ArticuloPedidoWhereUniqueInput[]
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type ClienteUpdateOneRequiredWithoutPedidoNestedInput = {
    create?: XOR<ClienteCreateWithoutPedidoInput, ClienteUncheckedCreateWithoutPedidoInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutPedidoInput
    upsert?: ClienteUpsertWithoutPedidoInput
    connect?: ClienteWhereUniqueInput
    update?: XOR<XOR<ClienteUpdateToOneWithWhereWithoutPedidoInput, ClienteUpdateWithoutPedidoInput>, ClienteUncheckedUpdateWithoutPedidoInput>
  }

  export type CarritoComprasUpdateOneRequiredWithoutPedidoNestedInput = {
    create?: XOR<CarritoComprasCreateWithoutPedidoInput, CarritoComprasUncheckedCreateWithoutPedidoInput>
    connectOrCreate?: CarritoComprasCreateOrConnectWithoutPedidoInput
    upsert?: CarritoComprasUpsertWithoutPedidoInput
    connect?: CarritoComprasWhereUniqueInput
    update?: XOR<XOR<CarritoComprasUpdateToOneWithWhereWithoutPedidoInput, CarritoComprasUpdateWithoutPedidoInput>, CarritoComprasUncheckedUpdateWithoutPedidoInput>
  }

  export type EstadoPedidoUpdateOneRequiredWithoutPedidosNestedInput = {
    create?: XOR<EstadoPedidoCreateWithoutPedidosInput, EstadoPedidoUncheckedCreateWithoutPedidosInput>
    connectOrCreate?: EstadoPedidoCreateOrConnectWithoutPedidosInput
    upsert?: EstadoPedidoUpsertWithoutPedidosInput
    connect?: EstadoPedidoWhereUniqueInput
    update?: XOR<XOR<EstadoPedidoUpdateToOneWithWhereWithoutPedidosInput, EstadoPedidoUpdateWithoutPedidosInput>, EstadoPedidoUncheckedUpdateWithoutPedidosInput>
  }

  export type ArticuloPedidoUpdateManyWithoutPedidoNestedInput = {
    create?: XOR<ArticuloPedidoCreateWithoutPedidoInput, ArticuloPedidoUncheckedCreateWithoutPedidoInput> | ArticuloPedidoCreateWithoutPedidoInput[] | ArticuloPedidoUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: ArticuloPedidoCreateOrConnectWithoutPedidoInput | ArticuloPedidoCreateOrConnectWithoutPedidoInput[]
    upsert?: ArticuloPedidoUpsertWithWhereUniqueWithoutPedidoInput | ArticuloPedidoUpsertWithWhereUniqueWithoutPedidoInput[]
    createMany?: ArticuloPedidoCreateManyPedidoInputEnvelope
    set?: ArticuloPedidoWhereUniqueInput | ArticuloPedidoWhereUniqueInput[]
    disconnect?: ArticuloPedidoWhereUniqueInput | ArticuloPedidoWhereUniqueInput[]
    delete?: ArticuloPedidoWhereUniqueInput | ArticuloPedidoWhereUniqueInput[]
    connect?: ArticuloPedidoWhereUniqueInput | ArticuloPedidoWhereUniqueInput[]
    update?: ArticuloPedidoUpdateWithWhereUniqueWithoutPedidoInput | ArticuloPedidoUpdateWithWhereUniqueWithoutPedidoInput[]
    updateMany?: ArticuloPedidoUpdateManyWithWhereWithoutPedidoInput | ArticuloPedidoUpdateManyWithWhereWithoutPedidoInput[]
    deleteMany?: ArticuloPedidoScalarWhereInput | ArticuloPedidoScalarWhereInput[]
  }

  export type ArticuloPedidoUncheckedUpdateManyWithoutPedidoNestedInput = {
    create?: XOR<ArticuloPedidoCreateWithoutPedidoInput, ArticuloPedidoUncheckedCreateWithoutPedidoInput> | ArticuloPedidoCreateWithoutPedidoInput[] | ArticuloPedidoUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: ArticuloPedidoCreateOrConnectWithoutPedidoInput | ArticuloPedidoCreateOrConnectWithoutPedidoInput[]
    upsert?: ArticuloPedidoUpsertWithWhereUniqueWithoutPedidoInput | ArticuloPedidoUpsertWithWhereUniqueWithoutPedidoInput[]
    createMany?: ArticuloPedidoCreateManyPedidoInputEnvelope
    set?: ArticuloPedidoWhereUniqueInput | ArticuloPedidoWhereUniqueInput[]
    disconnect?: ArticuloPedidoWhereUniqueInput | ArticuloPedidoWhereUniqueInput[]
    delete?: ArticuloPedidoWhereUniqueInput | ArticuloPedidoWhereUniqueInput[]
    connect?: ArticuloPedidoWhereUniqueInput | ArticuloPedidoWhereUniqueInput[]
    update?: ArticuloPedidoUpdateWithWhereUniqueWithoutPedidoInput | ArticuloPedidoUpdateWithWhereUniqueWithoutPedidoInput[]
    updateMany?: ArticuloPedidoUpdateManyWithWhereWithoutPedidoInput | ArticuloPedidoUpdateManyWithWhereWithoutPedidoInput[]
    deleteMany?: ArticuloPedidoScalarWhereInput | ArticuloPedidoScalarWhereInput[]
  }

  export type PedidoCreateNestedManyWithoutEstadoPedidoInput = {
    create?: XOR<PedidoCreateWithoutEstadoPedidoInput, PedidoUncheckedCreateWithoutEstadoPedidoInput> | PedidoCreateWithoutEstadoPedidoInput[] | PedidoUncheckedCreateWithoutEstadoPedidoInput[]
    connectOrCreate?: PedidoCreateOrConnectWithoutEstadoPedidoInput | PedidoCreateOrConnectWithoutEstadoPedidoInput[]
    createMany?: PedidoCreateManyEstadoPedidoInputEnvelope
    connect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
  }

  export type PedidoUncheckedCreateNestedManyWithoutEstadoPedidoInput = {
    create?: XOR<PedidoCreateWithoutEstadoPedidoInput, PedidoUncheckedCreateWithoutEstadoPedidoInput> | PedidoCreateWithoutEstadoPedidoInput[] | PedidoUncheckedCreateWithoutEstadoPedidoInput[]
    connectOrCreate?: PedidoCreateOrConnectWithoutEstadoPedidoInput | PedidoCreateOrConnectWithoutEstadoPedidoInput[]
    createMany?: PedidoCreateManyEstadoPedidoInputEnvelope
    connect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
  }

  export type PedidoUpdateManyWithoutEstadoPedidoNestedInput = {
    create?: XOR<PedidoCreateWithoutEstadoPedidoInput, PedidoUncheckedCreateWithoutEstadoPedidoInput> | PedidoCreateWithoutEstadoPedidoInput[] | PedidoUncheckedCreateWithoutEstadoPedidoInput[]
    connectOrCreate?: PedidoCreateOrConnectWithoutEstadoPedidoInput | PedidoCreateOrConnectWithoutEstadoPedidoInput[]
    upsert?: PedidoUpsertWithWhereUniqueWithoutEstadoPedidoInput | PedidoUpsertWithWhereUniqueWithoutEstadoPedidoInput[]
    createMany?: PedidoCreateManyEstadoPedidoInputEnvelope
    set?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    disconnect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    delete?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    connect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    update?: PedidoUpdateWithWhereUniqueWithoutEstadoPedidoInput | PedidoUpdateWithWhereUniqueWithoutEstadoPedidoInput[]
    updateMany?: PedidoUpdateManyWithWhereWithoutEstadoPedidoInput | PedidoUpdateManyWithWhereWithoutEstadoPedidoInput[]
    deleteMany?: PedidoScalarWhereInput | PedidoScalarWhereInput[]
  }

  export type PedidoUncheckedUpdateManyWithoutEstadoPedidoNestedInput = {
    create?: XOR<PedidoCreateWithoutEstadoPedidoInput, PedidoUncheckedCreateWithoutEstadoPedidoInput> | PedidoCreateWithoutEstadoPedidoInput[] | PedidoUncheckedCreateWithoutEstadoPedidoInput[]
    connectOrCreate?: PedidoCreateOrConnectWithoutEstadoPedidoInput | PedidoCreateOrConnectWithoutEstadoPedidoInput[]
    upsert?: PedidoUpsertWithWhereUniqueWithoutEstadoPedidoInput | PedidoUpsertWithWhereUniqueWithoutEstadoPedidoInput[]
    createMany?: PedidoCreateManyEstadoPedidoInputEnvelope
    set?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    disconnect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    delete?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    connect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    update?: PedidoUpdateWithWhereUniqueWithoutEstadoPedidoInput | PedidoUpdateWithWhereUniqueWithoutEstadoPedidoInput[]
    updateMany?: PedidoUpdateManyWithWhereWithoutEstadoPedidoInput | PedidoUpdateManyWithWhereWithoutEstadoPedidoInput[]
    deleteMany?: PedidoScalarWhereInput | PedidoScalarWhereInput[]
  }

  export type PedidoCreateNestedOneWithoutCarritoCompraInput = {
    create?: XOR<PedidoCreateWithoutCarritoCompraInput, PedidoUncheckedCreateWithoutCarritoCompraInput>
    connectOrCreate?: PedidoCreateOrConnectWithoutCarritoCompraInput
    connect?: PedidoWhereUniqueInput
  }

  export type ArticuloPedidoCreateNestedManyWithoutCarritoCompraInput = {
    create?: XOR<ArticuloPedidoCreateWithoutCarritoCompraInput, ArticuloPedidoUncheckedCreateWithoutCarritoCompraInput> | ArticuloPedidoCreateWithoutCarritoCompraInput[] | ArticuloPedidoUncheckedCreateWithoutCarritoCompraInput[]
    connectOrCreate?: ArticuloPedidoCreateOrConnectWithoutCarritoCompraInput | ArticuloPedidoCreateOrConnectWithoutCarritoCompraInput[]
    createMany?: ArticuloPedidoCreateManyCarritoCompraInputEnvelope
    connect?: ArticuloPedidoWhereUniqueInput | ArticuloPedidoWhereUniqueInput[]
  }

  export type PedidoUncheckedCreateNestedOneWithoutCarritoCompraInput = {
    create?: XOR<PedidoCreateWithoutCarritoCompraInput, PedidoUncheckedCreateWithoutCarritoCompraInput>
    connectOrCreate?: PedidoCreateOrConnectWithoutCarritoCompraInput
    connect?: PedidoWhereUniqueInput
  }

  export type ArticuloPedidoUncheckedCreateNestedManyWithoutCarritoCompraInput = {
    create?: XOR<ArticuloPedidoCreateWithoutCarritoCompraInput, ArticuloPedidoUncheckedCreateWithoutCarritoCompraInput> | ArticuloPedidoCreateWithoutCarritoCompraInput[] | ArticuloPedidoUncheckedCreateWithoutCarritoCompraInput[]
    connectOrCreate?: ArticuloPedidoCreateOrConnectWithoutCarritoCompraInput | ArticuloPedidoCreateOrConnectWithoutCarritoCompraInput[]
    createMany?: ArticuloPedidoCreateManyCarritoCompraInputEnvelope
    connect?: ArticuloPedidoWhereUniqueInput | ArticuloPedidoWhereUniqueInput[]
  }

  export type PedidoUpdateOneWithoutCarritoCompraNestedInput = {
    create?: XOR<PedidoCreateWithoutCarritoCompraInput, PedidoUncheckedCreateWithoutCarritoCompraInput>
    connectOrCreate?: PedidoCreateOrConnectWithoutCarritoCompraInput
    upsert?: PedidoUpsertWithoutCarritoCompraInput
    disconnect?: PedidoWhereInput | boolean
    delete?: PedidoWhereInput | boolean
    connect?: PedidoWhereUniqueInput
    update?: XOR<XOR<PedidoUpdateToOneWithWhereWithoutCarritoCompraInput, PedidoUpdateWithoutCarritoCompraInput>, PedidoUncheckedUpdateWithoutCarritoCompraInput>
  }

  export type ArticuloPedidoUpdateManyWithoutCarritoCompraNestedInput = {
    create?: XOR<ArticuloPedidoCreateWithoutCarritoCompraInput, ArticuloPedidoUncheckedCreateWithoutCarritoCompraInput> | ArticuloPedidoCreateWithoutCarritoCompraInput[] | ArticuloPedidoUncheckedCreateWithoutCarritoCompraInput[]
    connectOrCreate?: ArticuloPedidoCreateOrConnectWithoutCarritoCompraInput | ArticuloPedidoCreateOrConnectWithoutCarritoCompraInput[]
    upsert?: ArticuloPedidoUpsertWithWhereUniqueWithoutCarritoCompraInput | ArticuloPedidoUpsertWithWhereUniqueWithoutCarritoCompraInput[]
    createMany?: ArticuloPedidoCreateManyCarritoCompraInputEnvelope
    set?: ArticuloPedidoWhereUniqueInput | ArticuloPedidoWhereUniqueInput[]
    disconnect?: ArticuloPedidoWhereUniqueInput | ArticuloPedidoWhereUniqueInput[]
    delete?: ArticuloPedidoWhereUniqueInput | ArticuloPedidoWhereUniqueInput[]
    connect?: ArticuloPedidoWhereUniqueInput | ArticuloPedidoWhereUniqueInput[]
    update?: ArticuloPedidoUpdateWithWhereUniqueWithoutCarritoCompraInput | ArticuloPedidoUpdateWithWhereUniqueWithoutCarritoCompraInput[]
    updateMany?: ArticuloPedidoUpdateManyWithWhereWithoutCarritoCompraInput | ArticuloPedidoUpdateManyWithWhereWithoutCarritoCompraInput[]
    deleteMany?: ArticuloPedidoScalarWhereInput | ArticuloPedidoScalarWhereInput[]
  }

  export type PedidoUncheckedUpdateOneWithoutCarritoCompraNestedInput = {
    create?: XOR<PedidoCreateWithoutCarritoCompraInput, PedidoUncheckedCreateWithoutCarritoCompraInput>
    connectOrCreate?: PedidoCreateOrConnectWithoutCarritoCompraInput
    upsert?: PedidoUpsertWithoutCarritoCompraInput
    disconnect?: PedidoWhereInput | boolean
    delete?: PedidoWhereInput | boolean
    connect?: PedidoWhereUniqueInput
    update?: XOR<XOR<PedidoUpdateToOneWithWhereWithoutCarritoCompraInput, PedidoUpdateWithoutCarritoCompraInput>, PedidoUncheckedUpdateWithoutCarritoCompraInput>
  }

  export type ArticuloPedidoUncheckedUpdateManyWithoutCarritoCompraNestedInput = {
    create?: XOR<ArticuloPedidoCreateWithoutCarritoCompraInput, ArticuloPedidoUncheckedCreateWithoutCarritoCompraInput> | ArticuloPedidoCreateWithoutCarritoCompraInput[] | ArticuloPedidoUncheckedCreateWithoutCarritoCompraInput[]
    connectOrCreate?: ArticuloPedidoCreateOrConnectWithoutCarritoCompraInput | ArticuloPedidoCreateOrConnectWithoutCarritoCompraInput[]
    upsert?: ArticuloPedidoUpsertWithWhereUniqueWithoutCarritoCompraInput | ArticuloPedidoUpsertWithWhereUniqueWithoutCarritoCompraInput[]
    createMany?: ArticuloPedidoCreateManyCarritoCompraInputEnvelope
    set?: ArticuloPedidoWhereUniqueInput | ArticuloPedidoWhereUniqueInput[]
    disconnect?: ArticuloPedidoWhereUniqueInput | ArticuloPedidoWhereUniqueInput[]
    delete?: ArticuloPedidoWhereUniqueInput | ArticuloPedidoWhereUniqueInput[]
    connect?: ArticuloPedidoWhereUniqueInput | ArticuloPedidoWhereUniqueInput[]
    update?: ArticuloPedidoUpdateWithWhereUniqueWithoutCarritoCompraInput | ArticuloPedidoUpdateWithWhereUniqueWithoutCarritoCompraInput[]
    updateMany?: ArticuloPedidoUpdateManyWithWhereWithoutCarritoCompraInput | ArticuloPedidoUpdateManyWithWhereWithoutCarritoCompraInput[]
    deleteMany?: ArticuloPedidoScalarWhereInput | ArticuloPedidoScalarWhereInput[]
  }

  export type ClienteCreateNestedOneWithoutListaFavInput = {
    create?: XOR<ClienteCreateWithoutListaFavInput, ClienteUncheckedCreateWithoutListaFavInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutListaFavInput
    connect?: ClienteWhereUniqueInput
  }

  export type ArticuloCreateNestedManyWithoutListaFavInput = {
    create?: XOR<ArticuloCreateWithoutListaFavInput, ArticuloUncheckedCreateWithoutListaFavInput> | ArticuloCreateWithoutListaFavInput[] | ArticuloUncheckedCreateWithoutListaFavInput[]
    connectOrCreate?: ArticuloCreateOrConnectWithoutListaFavInput | ArticuloCreateOrConnectWithoutListaFavInput[]
    connect?: ArticuloWhereUniqueInput | ArticuloWhereUniqueInput[]
  }

  export type ArticuloUncheckedCreateNestedManyWithoutListaFavInput = {
    create?: XOR<ArticuloCreateWithoutListaFavInput, ArticuloUncheckedCreateWithoutListaFavInput> | ArticuloCreateWithoutListaFavInput[] | ArticuloUncheckedCreateWithoutListaFavInput[]
    connectOrCreate?: ArticuloCreateOrConnectWithoutListaFavInput | ArticuloCreateOrConnectWithoutListaFavInput[]
    connect?: ArticuloWhereUniqueInput | ArticuloWhereUniqueInput[]
  }

  export type ClienteUpdateOneRequiredWithoutListaFavNestedInput = {
    create?: XOR<ClienteCreateWithoutListaFavInput, ClienteUncheckedCreateWithoutListaFavInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutListaFavInput
    upsert?: ClienteUpsertWithoutListaFavInput
    connect?: ClienteWhereUniqueInput
    update?: XOR<XOR<ClienteUpdateToOneWithWhereWithoutListaFavInput, ClienteUpdateWithoutListaFavInput>, ClienteUncheckedUpdateWithoutListaFavInput>
  }

  export type ArticuloUpdateManyWithoutListaFavNestedInput = {
    create?: XOR<ArticuloCreateWithoutListaFavInput, ArticuloUncheckedCreateWithoutListaFavInput> | ArticuloCreateWithoutListaFavInput[] | ArticuloUncheckedCreateWithoutListaFavInput[]
    connectOrCreate?: ArticuloCreateOrConnectWithoutListaFavInput | ArticuloCreateOrConnectWithoutListaFavInput[]
    upsert?: ArticuloUpsertWithWhereUniqueWithoutListaFavInput | ArticuloUpsertWithWhereUniqueWithoutListaFavInput[]
    set?: ArticuloWhereUniqueInput | ArticuloWhereUniqueInput[]
    disconnect?: ArticuloWhereUniqueInput | ArticuloWhereUniqueInput[]
    delete?: ArticuloWhereUniqueInput | ArticuloWhereUniqueInput[]
    connect?: ArticuloWhereUniqueInput | ArticuloWhereUniqueInput[]
    update?: ArticuloUpdateWithWhereUniqueWithoutListaFavInput | ArticuloUpdateWithWhereUniqueWithoutListaFavInput[]
    updateMany?: ArticuloUpdateManyWithWhereWithoutListaFavInput | ArticuloUpdateManyWithWhereWithoutListaFavInput[]
    deleteMany?: ArticuloScalarWhereInput | ArticuloScalarWhereInput[]
  }

  export type ArticuloUncheckedUpdateManyWithoutListaFavNestedInput = {
    create?: XOR<ArticuloCreateWithoutListaFavInput, ArticuloUncheckedCreateWithoutListaFavInput> | ArticuloCreateWithoutListaFavInput[] | ArticuloUncheckedCreateWithoutListaFavInput[]
    connectOrCreate?: ArticuloCreateOrConnectWithoutListaFavInput | ArticuloCreateOrConnectWithoutListaFavInput[]
    upsert?: ArticuloUpsertWithWhereUniqueWithoutListaFavInput | ArticuloUpsertWithWhereUniqueWithoutListaFavInput[]
    set?: ArticuloWhereUniqueInput | ArticuloWhereUniqueInput[]
    disconnect?: ArticuloWhereUniqueInput | ArticuloWhereUniqueInput[]
    delete?: ArticuloWhereUniqueInput | ArticuloWhereUniqueInput[]
    connect?: ArticuloWhereUniqueInput | ArticuloWhereUniqueInput[]
    update?: ArticuloUpdateWithWhereUniqueWithoutListaFavInput | ArticuloUpdateWithWhereUniqueWithoutListaFavInput[]
    updateMany?: ArticuloUpdateManyWithWhereWithoutListaFavInput | ArticuloUpdateManyWithWhereWithoutListaFavInput[]
    deleteMany?: ArticuloScalarWhereInput | ArticuloScalarWhereInput[]
  }

  export type ArticuloPedidoCreateNestedManyWithoutArticuloInput = {
    create?: XOR<ArticuloPedidoCreateWithoutArticuloInput, ArticuloPedidoUncheckedCreateWithoutArticuloInput> | ArticuloPedidoCreateWithoutArticuloInput[] | ArticuloPedidoUncheckedCreateWithoutArticuloInput[]
    connectOrCreate?: ArticuloPedidoCreateOrConnectWithoutArticuloInput | ArticuloPedidoCreateOrConnectWithoutArticuloInput[]
    createMany?: ArticuloPedidoCreateManyArticuloInputEnvelope
    connect?: ArticuloPedidoWhereUniqueInput | ArticuloPedidoWhereUniqueInput[]
  }

  export type ListaFavoritoCreateNestedManyWithoutArticuloInput = {
    create?: XOR<ListaFavoritoCreateWithoutArticuloInput, ListaFavoritoUncheckedCreateWithoutArticuloInput> | ListaFavoritoCreateWithoutArticuloInput[] | ListaFavoritoUncheckedCreateWithoutArticuloInput[]
    connectOrCreate?: ListaFavoritoCreateOrConnectWithoutArticuloInput | ListaFavoritoCreateOrConnectWithoutArticuloInput[]
    connect?: ListaFavoritoWhereUniqueInput | ListaFavoritoWhereUniqueInput[]
  }

  export type CategoriaCreateNestedManyWithoutArticulosInput = {
    create?: XOR<CategoriaCreateWithoutArticulosInput, CategoriaUncheckedCreateWithoutArticulosInput> | CategoriaCreateWithoutArticulosInput[] | CategoriaUncheckedCreateWithoutArticulosInput[]
    connectOrCreate?: CategoriaCreateOrConnectWithoutArticulosInput | CategoriaCreateOrConnectWithoutArticulosInput[]
    connect?: CategoriaWhereUniqueInput | CategoriaWhereUniqueInput[]
  }

  export type ArticuloPedidoUncheckedCreateNestedManyWithoutArticuloInput = {
    create?: XOR<ArticuloPedidoCreateWithoutArticuloInput, ArticuloPedidoUncheckedCreateWithoutArticuloInput> | ArticuloPedidoCreateWithoutArticuloInput[] | ArticuloPedidoUncheckedCreateWithoutArticuloInput[]
    connectOrCreate?: ArticuloPedidoCreateOrConnectWithoutArticuloInput | ArticuloPedidoCreateOrConnectWithoutArticuloInput[]
    createMany?: ArticuloPedidoCreateManyArticuloInputEnvelope
    connect?: ArticuloPedidoWhereUniqueInput | ArticuloPedidoWhereUniqueInput[]
  }

  export type ListaFavoritoUncheckedCreateNestedManyWithoutArticuloInput = {
    create?: XOR<ListaFavoritoCreateWithoutArticuloInput, ListaFavoritoUncheckedCreateWithoutArticuloInput> | ListaFavoritoCreateWithoutArticuloInput[] | ListaFavoritoUncheckedCreateWithoutArticuloInput[]
    connectOrCreate?: ListaFavoritoCreateOrConnectWithoutArticuloInput | ListaFavoritoCreateOrConnectWithoutArticuloInput[]
    connect?: ListaFavoritoWhereUniqueInput | ListaFavoritoWhereUniqueInput[]
  }

  export type CategoriaUncheckedCreateNestedManyWithoutArticulosInput = {
    create?: XOR<CategoriaCreateWithoutArticulosInput, CategoriaUncheckedCreateWithoutArticulosInput> | CategoriaCreateWithoutArticulosInput[] | CategoriaUncheckedCreateWithoutArticulosInput[]
    connectOrCreate?: CategoriaCreateOrConnectWithoutArticulosInput | CategoriaCreateOrConnectWithoutArticulosInput[]
    connect?: CategoriaWhereUniqueInput | CategoriaWhereUniqueInput[]
  }

  export type ArticuloPedidoUpdateManyWithoutArticuloNestedInput = {
    create?: XOR<ArticuloPedidoCreateWithoutArticuloInput, ArticuloPedidoUncheckedCreateWithoutArticuloInput> | ArticuloPedidoCreateWithoutArticuloInput[] | ArticuloPedidoUncheckedCreateWithoutArticuloInput[]
    connectOrCreate?: ArticuloPedidoCreateOrConnectWithoutArticuloInput | ArticuloPedidoCreateOrConnectWithoutArticuloInput[]
    upsert?: ArticuloPedidoUpsertWithWhereUniqueWithoutArticuloInput | ArticuloPedidoUpsertWithWhereUniqueWithoutArticuloInput[]
    createMany?: ArticuloPedidoCreateManyArticuloInputEnvelope
    set?: ArticuloPedidoWhereUniqueInput | ArticuloPedidoWhereUniqueInput[]
    disconnect?: ArticuloPedidoWhereUniqueInput | ArticuloPedidoWhereUniqueInput[]
    delete?: ArticuloPedidoWhereUniqueInput | ArticuloPedidoWhereUniqueInput[]
    connect?: ArticuloPedidoWhereUniqueInput | ArticuloPedidoWhereUniqueInput[]
    update?: ArticuloPedidoUpdateWithWhereUniqueWithoutArticuloInput | ArticuloPedidoUpdateWithWhereUniqueWithoutArticuloInput[]
    updateMany?: ArticuloPedidoUpdateManyWithWhereWithoutArticuloInput | ArticuloPedidoUpdateManyWithWhereWithoutArticuloInput[]
    deleteMany?: ArticuloPedidoScalarWhereInput | ArticuloPedidoScalarWhereInput[]
  }

  export type ListaFavoritoUpdateManyWithoutArticuloNestedInput = {
    create?: XOR<ListaFavoritoCreateWithoutArticuloInput, ListaFavoritoUncheckedCreateWithoutArticuloInput> | ListaFavoritoCreateWithoutArticuloInput[] | ListaFavoritoUncheckedCreateWithoutArticuloInput[]
    connectOrCreate?: ListaFavoritoCreateOrConnectWithoutArticuloInput | ListaFavoritoCreateOrConnectWithoutArticuloInput[]
    upsert?: ListaFavoritoUpsertWithWhereUniqueWithoutArticuloInput | ListaFavoritoUpsertWithWhereUniqueWithoutArticuloInput[]
    set?: ListaFavoritoWhereUniqueInput | ListaFavoritoWhereUniqueInput[]
    disconnect?: ListaFavoritoWhereUniqueInput | ListaFavoritoWhereUniqueInput[]
    delete?: ListaFavoritoWhereUniqueInput | ListaFavoritoWhereUniqueInput[]
    connect?: ListaFavoritoWhereUniqueInput | ListaFavoritoWhereUniqueInput[]
    update?: ListaFavoritoUpdateWithWhereUniqueWithoutArticuloInput | ListaFavoritoUpdateWithWhereUniqueWithoutArticuloInput[]
    updateMany?: ListaFavoritoUpdateManyWithWhereWithoutArticuloInput | ListaFavoritoUpdateManyWithWhereWithoutArticuloInput[]
    deleteMany?: ListaFavoritoScalarWhereInput | ListaFavoritoScalarWhereInput[]
  }

  export type CategoriaUpdateManyWithoutArticulosNestedInput = {
    create?: XOR<CategoriaCreateWithoutArticulosInput, CategoriaUncheckedCreateWithoutArticulosInput> | CategoriaCreateWithoutArticulosInput[] | CategoriaUncheckedCreateWithoutArticulosInput[]
    connectOrCreate?: CategoriaCreateOrConnectWithoutArticulosInput | CategoriaCreateOrConnectWithoutArticulosInput[]
    upsert?: CategoriaUpsertWithWhereUniqueWithoutArticulosInput | CategoriaUpsertWithWhereUniqueWithoutArticulosInput[]
    set?: CategoriaWhereUniqueInput | CategoriaWhereUniqueInput[]
    disconnect?: CategoriaWhereUniqueInput | CategoriaWhereUniqueInput[]
    delete?: CategoriaWhereUniqueInput | CategoriaWhereUniqueInput[]
    connect?: CategoriaWhereUniqueInput | CategoriaWhereUniqueInput[]
    update?: CategoriaUpdateWithWhereUniqueWithoutArticulosInput | CategoriaUpdateWithWhereUniqueWithoutArticulosInput[]
    updateMany?: CategoriaUpdateManyWithWhereWithoutArticulosInput | CategoriaUpdateManyWithWhereWithoutArticulosInput[]
    deleteMany?: CategoriaScalarWhereInput | CategoriaScalarWhereInput[]
  }

  export type ArticuloPedidoUncheckedUpdateManyWithoutArticuloNestedInput = {
    create?: XOR<ArticuloPedidoCreateWithoutArticuloInput, ArticuloPedidoUncheckedCreateWithoutArticuloInput> | ArticuloPedidoCreateWithoutArticuloInput[] | ArticuloPedidoUncheckedCreateWithoutArticuloInput[]
    connectOrCreate?: ArticuloPedidoCreateOrConnectWithoutArticuloInput | ArticuloPedidoCreateOrConnectWithoutArticuloInput[]
    upsert?: ArticuloPedidoUpsertWithWhereUniqueWithoutArticuloInput | ArticuloPedidoUpsertWithWhereUniqueWithoutArticuloInput[]
    createMany?: ArticuloPedidoCreateManyArticuloInputEnvelope
    set?: ArticuloPedidoWhereUniqueInput | ArticuloPedidoWhereUniqueInput[]
    disconnect?: ArticuloPedidoWhereUniqueInput | ArticuloPedidoWhereUniqueInput[]
    delete?: ArticuloPedidoWhereUniqueInput | ArticuloPedidoWhereUniqueInput[]
    connect?: ArticuloPedidoWhereUniqueInput | ArticuloPedidoWhereUniqueInput[]
    update?: ArticuloPedidoUpdateWithWhereUniqueWithoutArticuloInput | ArticuloPedidoUpdateWithWhereUniqueWithoutArticuloInput[]
    updateMany?: ArticuloPedidoUpdateManyWithWhereWithoutArticuloInput | ArticuloPedidoUpdateManyWithWhereWithoutArticuloInput[]
    deleteMany?: ArticuloPedidoScalarWhereInput | ArticuloPedidoScalarWhereInput[]
  }

  export type ListaFavoritoUncheckedUpdateManyWithoutArticuloNestedInput = {
    create?: XOR<ListaFavoritoCreateWithoutArticuloInput, ListaFavoritoUncheckedCreateWithoutArticuloInput> | ListaFavoritoCreateWithoutArticuloInput[] | ListaFavoritoUncheckedCreateWithoutArticuloInput[]
    connectOrCreate?: ListaFavoritoCreateOrConnectWithoutArticuloInput | ListaFavoritoCreateOrConnectWithoutArticuloInput[]
    upsert?: ListaFavoritoUpsertWithWhereUniqueWithoutArticuloInput | ListaFavoritoUpsertWithWhereUniqueWithoutArticuloInput[]
    set?: ListaFavoritoWhereUniqueInput | ListaFavoritoWhereUniqueInput[]
    disconnect?: ListaFavoritoWhereUniqueInput | ListaFavoritoWhereUniqueInput[]
    delete?: ListaFavoritoWhereUniqueInput | ListaFavoritoWhereUniqueInput[]
    connect?: ListaFavoritoWhereUniqueInput | ListaFavoritoWhereUniqueInput[]
    update?: ListaFavoritoUpdateWithWhereUniqueWithoutArticuloInput | ListaFavoritoUpdateWithWhereUniqueWithoutArticuloInput[]
    updateMany?: ListaFavoritoUpdateManyWithWhereWithoutArticuloInput | ListaFavoritoUpdateManyWithWhereWithoutArticuloInput[]
    deleteMany?: ListaFavoritoScalarWhereInput | ListaFavoritoScalarWhereInput[]
  }

  export type CategoriaUncheckedUpdateManyWithoutArticulosNestedInput = {
    create?: XOR<CategoriaCreateWithoutArticulosInput, CategoriaUncheckedCreateWithoutArticulosInput> | CategoriaCreateWithoutArticulosInput[] | CategoriaUncheckedCreateWithoutArticulosInput[]
    connectOrCreate?: CategoriaCreateOrConnectWithoutArticulosInput | CategoriaCreateOrConnectWithoutArticulosInput[]
    upsert?: CategoriaUpsertWithWhereUniqueWithoutArticulosInput | CategoriaUpsertWithWhereUniqueWithoutArticulosInput[]
    set?: CategoriaWhereUniqueInput | CategoriaWhereUniqueInput[]
    disconnect?: CategoriaWhereUniqueInput | CategoriaWhereUniqueInput[]
    delete?: CategoriaWhereUniqueInput | CategoriaWhereUniqueInput[]
    connect?: CategoriaWhereUniqueInput | CategoriaWhereUniqueInput[]
    update?: CategoriaUpdateWithWhereUniqueWithoutArticulosInput | CategoriaUpdateWithWhereUniqueWithoutArticulosInput[]
    updateMany?: CategoriaUpdateManyWithWhereWithoutArticulosInput | CategoriaUpdateManyWithWhereWithoutArticulosInput[]
    deleteMany?: CategoriaScalarWhereInput | CategoriaScalarWhereInput[]
  }

  export type ArticuloCreateNestedManyWithoutCategoriasInput = {
    create?: XOR<ArticuloCreateWithoutCategoriasInput, ArticuloUncheckedCreateWithoutCategoriasInput> | ArticuloCreateWithoutCategoriasInput[] | ArticuloUncheckedCreateWithoutCategoriasInput[]
    connectOrCreate?: ArticuloCreateOrConnectWithoutCategoriasInput | ArticuloCreateOrConnectWithoutCategoriasInput[]
    connect?: ArticuloWhereUniqueInput | ArticuloWhereUniqueInput[]
  }

  export type ArticuloUncheckedCreateNestedManyWithoutCategoriasInput = {
    create?: XOR<ArticuloCreateWithoutCategoriasInput, ArticuloUncheckedCreateWithoutCategoriasInput> | ArticuloCreateWithoutCategoriasInput[] | ArticuloUncheckedCreateWithoutCategoriasInput[]
    connectOrCreate?: ArticuloCreateOrConnectWithoutCategoriasInput | ArticuloCreateOrConnectWithoutCategoriasInput[]
    connect?: ArticuloWhereUniqueInput | ArticuloWhereUniqueInput[]
  }

  export type ArticuloUpdateManyWithoutCategoriasNestedInput = {
    create?: XOR<ArticuloCreateWithoutCategoriasInput, ArticuloUncheckedCreateWithoutCategoriasInput> | ArticuloCreateWithoutCategoriasInput[] | ArticuloUncheckedCreateWithoutCategoriasInput[]
    connectOrCreate?: ArticuloCreateOrConnectWithoutCategoriasInput | ArticuloCreateOrConnectWithoutCategoriasInput[]
    upsert?: ArticuloUpsertWithWhereUniqueWithoutCategoriasInput | ArticuloUpsertWithWhereUniqueWithoutCategoriasInput[]
    set?: ArticuloWhereUniqueInput | ArticuloWhereUniqueInput[]
    disconnect?: ArticuloWhereUniqueInput | ArticuloWhereUniqueInput[]
    delete?: ArticuloWhereUniqueInput | ArticuloWhereUniqueInput[]
    connect?: ArticuloWhereUniqueInput | ArticuloWhereUniqueInput[]
    update?: ArticuloUpdateWithWhereUniqueWithoutCategoriasInput | ArticuloUpdateWithWhereUniqueWithoutCategoriasInput[]
    updateMany?: ArticuloUpdateManyWithWhereWithoutCategoriasInput | ArticuloUpdateManyWithWhereWithoutCategoriasInput[]
    deleteMany?: ArticuloScalarWhereInput | ArticuloScalarWhereInput[]
  }

  export type ArticuloUncheckedUpdateManyWithoutCategoriasNestedInput = {
    create?: XOR<ArticuloCreateWithoutCategoriasInput, ArticuloUncheckedCreateWithoutCategoriasInput> | ArticuloCreateWithoutCategoriasInput[] | ArticuloUncheckedCreateWithoutCategoriasInput[]
    connectOrCreate?: ArticuloCreateOrConnectWithoutCategoriasInput | ArticuloCreateOrConnectWithoutCategoriasInput[]
    upsert?: ArticuloUpsertWithWhereUniqueWithoutCategoriasInput | ArticuloUpsertWithWhereUniqueWithoutCategoriasInput[]
    set?: ArticuloWhereUniqueInput | ArticuloWhereUniqueInput[]
    disconnect?: ArticuloWhereUniqueInput | ArticuloWhereUniqueInput[]
    delete?: ArticuloWhereUniqueInput | ArticuloWhereUniqueInput[]
    connect?: ArticuloWhereUniqueInput | ArticuloWhereUniqueInput[]
    update?: ArticuloUpdateWithWhereUniqueWithoutCategoriasInput | ArticuloUpdateWithWhereUniqueWithoutCategoriasInput[]
    updateMany?: ArticuloUpdateManyWithWhereWithoutCategoriasInput | ArticuloUpdateManyWithWhereWithoutCategoriasInput[]
    deleteMany?: ArticuloScalarWhereInput | ArticuloScalarWhereInput[]
  }

  export type PedidoCreateNestedOneWithoutArticuloPedidoInput = {
    create?: XOR<PedidoCreateWithoutArticuloPedidoInput, PedidoUncheckedCreateWithoutArticuloPedidoInput>
    connectOrCreate?: PedidoCreateOrConnectWithoutArticuloPedidoInput
    connect?: PedidoWhereUniqueInput
  }

  export type CarritoComprasCreateNestedOneWithoutArticuloPedidoInput = {
    create?: XOR<CarritoComprasCreateWithoutArticuloPedidoInput, CarritoComprasUncheckedCreateWithoutArticuloPedidoInput>
    connectOrCreate?: CarritoComprasCreateOrConnectWithoutArticuloPedidoInput
    connect?: CarritoComprasWhereUniqueInput
  }

  export type ArticuloCreateNestedOneWithoutArticuloPedidoInput = {
    create?: XOR<ArticuloCreateWithoutArticuloPedidoInput, ArticuloUncheckedCreateWithoutArticuloPedidoInput>
    connectOrCreate?: ArticuloCreateOrConnectWithoutArticuloPedidoInput
    connect?: ArticuloWhereUniqueInput
  }

  export type PedidoUpdateOneRequiredWithoutArticuloPedidoNestedInput = {
    create?: XOR<PedidoCreateWithoutArticuloPedidoInput, PedidoUncheckedCreateWithoutArticuloPedidoInput>
    connectOrCreate?: PedidoCreateOrConnectWithoutArticuloPedidoInput
    upsert?: PedidoUpsertWithoutArticuloPedidoInput
    connect?: PedidoWhereUniqueInput
    update?: XOR<XOR<PedidoUpdateToOneWithWhereWithoutArticuloPedidoInput, PedidoUpdateWithoutArticuloPedidoInput>, PedidoUncheckedUpdateWithoutArticuloPedidoInput>
  }

  export type CarritoComprasUpdateOneRequiredWithoutArticuloPedidoNestedInput = {
    create?: XOR<CarritoComprasCreateWithoutArticuloPedidoInput, CarritoComprasUncheckedCreateWithoutArticuloPedidoInput>
    connectOrCreate?: CarritoComprasCreateOrConnectWithoutArticuloPedidoInput
    upsert?: CarritoComprasUpsertWithoutArticuloPedidoInput
    connect?: CarritoComprasWhereUniqueInput
    update?: XOR<XOR<CarritoComprasUpdateToOneWithWhereWithoutArticuloPedidoInput, CarritoComprasUpdateWithoutArticuloPedidoInput>, CarritoComprasUncheckedUpdateWithoutArticuloPedidoInput>
  }

  export type ArticuloUpdateOneRequiredWithoutArticuloPedidoNestedInput = {
    create?: XOR<ArticuloCreateWithoutArticuloPedidoInput, ArticuloUncheckedCreateWithoutArticuloPedidoInput>
    connectOrCreate?: ArticuloCreateOrConnectWithoutArticuloPedidoInput
    upsert?: ArticuloUpsertWithoutArticuloPedidoInput
    connect?: ArticuloWhereUniqueInput
    update?: XOR<XOR<ArticuloUpdateToOneWithWhereWithoutArticuloPedidoInput, ArticuloUpdateWithoutArticuloPedidoInput>, ArticuloUncheckedUpdateWithoutArticuloPedidoInput>
  }

  export type EstadoEnvioCreateNestedOneWithoutEnvioPedidoInput = {
    create?: XOR<EstadoEnvioCreateWithoutEnvioPedidoInput, EstadoEnvioUncheckedCreateWithoutEnvioPedidoInput>
    connectOrCreate?: EstadoEnvioCreateOrConnectWithoutEnvioPedidoInput
    connect?: EstadoEnvioWhereUniqueInput
  }

  export type DireccionCreateNestedOneWithoutEnvioPedidoInput = {
    create?: XOR<DireccionCreateWithoutEnvioPedidoInput, DireccionUncheckedCreateWithoutEnvioPedidoInput>
    connectOrCreate?: DireccionCreateOrConnectWithoutEnvioPedidoInput
    connect?: DireccionWhereUniqueInput
  }

  export type EstadoEnvioUpdateOneRequiredWithoutEnvioPedidoNestedInput = {
    create?: XOR<EstadoEnvioCreateWithoutEnvioPedidoInput, EstadoEnvioUncheckedCreateWithoutEnvioPedidoInput>
    connectOrCreate?: EstadoEnvioCreateOrConnectWithoutEnvioPedidoInput
    upsert?: EstadoEnvioUpsertWithoutEnvioPedidoInput
    connect?: EstadoEnvioWhereUniqueInput
    update?: XOR<XOR<EstadoEnvioUpdateToOneWithWhereWithoutEnvioPedidoInput, EstadoEnvioUpdateWithoutEnvioPedidoInput>, EstadoEnvioUncheckedUpdateWithoutEnvioPedidoInput>
  }

  export type DireccionUpdateOneRequiredWithoutEnvioPedidoNestedInput = {
    create?: XOR<DireccionCreateWithoutEnvioPedidoInput, DireccionUncheckedCreateWithoutEnvioPedidoInput>
    connectOrCreate?: DireccionCreateOrConnectWithoutEnvioPedidoInput
    upsert?: DireccionUpsertWithoutEnvioPedidoInput
    connect?: DireccionWhereUniqueInput
    update?: XOR<XOR<DireccionUpdateToOneWithWhereWithoutEnvioPedidoInput, DireccionUpdateWithoutEnvioPedidoInput>, DireccionUncheckedUpdateWithoutEnvioPedidoInput>
  }

  export type EnvioPedidoCreateNestedManyWithoutEstadoEnvioInput = {
    create?: XOR<EnvioPedidoCreateWithoutEstadoEnvioInput, EnvioPedidoUncheckedCreateWithoutEstadoEnvioInput> | EnvioPedidoCreateWithoutEstadoEnvioInput[] | EnvioPedidoUncheckedCreateWithoutEstadoEnvioInput[]
    connectOrCreate?: EnvioPedidoCreateOrConnectWithoutEstadoEnvioInput | EnvioPedidoCreateOrConnectWithoutEstadoEnvioInput[]
    createMany?: EnvioPedidoCreateManyEstadoEnvioInputEnvelope
    connect?: EnvioPedidoWhereUniqueInput | EnvioPedidoWhereUniqueInput[]
  }

  export type EnvioPedidoUncheckedCreateNestedManyWithoutEstadoEnvioInput = {
    create?: XOR<EnvioPedidoCreateWithoutEstadoEnvioInput, EnvioPedidoUncheckedCreateWithoutEstadoEnvioInput> | EnvioPedidoCreateWithoutEstadoEnvioInput[] | EnvioPedidoUncheckedCreateWithoutEstadoEnvioInput[]
    connectOrCreate?: EnvioPedidoCreateOrConnectWithoutEstadoEnvioInput | EnvioPedidoCreateOrConnectWithoutEstadoEnvioInput[]
    createMany?: EnvioPedidoCreateManyEstadoEnvioInputEnvelope
    connect?: EnvioPedidoWhereUniqueInput | EnvioPedidoWhereUniqueInput[]
  }

  export type EnvioPedidoUpdateManyWithoutEstadoEnvioNestedInput = {
    create?: XOR<EnvioPedidoCreateWithoutEstadoEnvioInput, EnvioPedidoUncheckedCreateWithoutEstadoEnvioInput> | EnvioPedidoCreateWithoutEstadoEnvioInput[] | EnvioPedidoUncheckedCreateWithoutEstadoEnvioInput[]
    connectOrCreate?: EnvioPedidoCreateOrConnectWithoutEstadoEnvioInput | EnvioPedidoCreateOrConnectWithoutEstadoEnvioInput[]
    upsert?: EnvioPedidoUpsertWithWhereUniqueWithoutEstadoEnvioInput | EnvioPedidoUpsertWithWhereUniqueWithoutEstadoEnvioInput[]
    createMany?: EnvioPedidoCreateManyEstadoEnvioInputEnvelope
    set?: EnvioPedidoWhereUniqueInput | EnvioPedidoWhereUniqueInput[]
    disconnect?: EnvioPedidoWhereUniqueInput | EnvioPedidoWhereUniqueInput[]
    delete?: EnvioPedidoWhereUniqueInput | EnvioPedidoWhereUniqueInput[]
    connect?: EnvioPedidoWhereUniqueInput | EnvioPedidoWhereUniqueInput[]
    update?: EnvioPedidoUpdateWithWhereUniqueWithoutEstadoEnvioInput | EnvioPedidoUpdateWithWhereUniqueWithoutEstadoEnvioInput[]
    updateMany?: EnvioPedidoUpdateManyWithWhereWithoutEstadoEnvioInput | EnvioPedidoUpdateManyWithWhereWithoutEstadoEnvioInput[]
    deleteMany?: EnvioPedidoScalarWhereInput | EnvioPedidoScalarWhereInput[]
  }

  export type EnvioPedidoUncheckedUpdateManyWithoutEstadoEnvioNestedInput = {
    create?: XOR<EnvioPedidoCreateWithoutEstadoEnvioInput, EnvioPedidoUncheckedCreateWithoutEstadoEnvioInput> | EnvioPedidoCreateWithoutEstadoEnvioInput[] | EnvioPedidoUncheckedCreateWithoutEstadoEnvioInput[]
    connectOrCreate?: EnvioPedidoCreateOrConnectWithoutEstadoEnvioInput | EnvioPedidoCreateOrConnectWithoutEstadoEnvioInput[]
    upsert?: EnvioPedidoUpsertWithWhereUniqueWithoutEstadoEnvioInput | EnvioPedidoUpsertWithWhereUniqueWithoutEstadoEnvioInput[]
    createMany?: EnvioPedidoCreateManyEstadoEnvioInputEnvelope
    set?: EnvioPedidoWhereUniqueInput | EnvioPedidoWhereUniqueInput[]
    disconnect?: EnvioPedidoWhereUniqueInput | EnvioPedidoWhereUniqueInput[]
    delete?: EnvioPedidoWhereUniqueInput | EnvioPedidoWhereUniqueInput[]
    connect?: EnvioPedidoWhereUniqueInput | EnvioPedidoWhereUniqueInput[]
    update?: EnvioPedidoUpdateWithWhereUniqueWithoutEstadoEnvioInput | EnvioPedidoUpdateWithWhereUniqueWithoutEstadoEnvioInput[]
    updateMany?: EnvioPedidoUpdateManyWithWhereWithoutEstadoEnvioInput | EnvioPedidoUpdateManyWithWhereWithoutEstadoEnvioInput[]
    deleteMany?: EnvioPedidoScalarWhereInput | EnvioPedidoScalarWhereInput[]
  }

  export type ClienteCreateNestedManyWithoutMedioPagoInput = {
    create?: XOR<ClienteCreateWithoutMedioPagoInput, ClienteUncheckedCreateWithoutMedioPagoInput> | ClienteCreateWithoutMedioPagoInput[] | ClienteUncheckedCreateWithoutMedioPagoInput[]
    connectOrCreate?: ClienteCreateOrConnectWithoutMedioPagoInput | ClienteCreateOrConnectWithoutMedioPagoInput[]
    connect?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
  }

  export type PagoCreateNestedManyWithoutMedioPagoInput = {
    create?: XOR<PagoCreateWithoutMedioPagoInput, PagoUncheckedCreateWithoutMedioPagoInput> | PagoCreateWithoutMedioPagoInput[] | PagoUncheckedCreateWithoutMedioPagoInput[]
    connectOrCreate?: PagoCreateOrConnectWithoutMedioPagoInput | PagoCreateOrConnectWithoutMedioPagoInput[]
    createMany?: PagoCreateManyMedioPagoInputEnvelope
    connect?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
  }

  export type ClienteUncheckedCreateNestedManyWithoutMedioPagoInput = {
    create?: XOR<ClienteCreateWithoutMedioPagoInput, ClienteUncheckedCreateWithoutMedioPagoInput> | ClienteCreateWithoutMedioPagoInput[] | ClienteUncheckedCreateWithoutMedioPagoInput[]
    connectOrCreate?: ClienteCreateOrConnectWithoutMedioPagoInput | ClienteCreateOrConnectWithoutMedioPagoInput[]
    connect?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
  }

  export type PagoUncheckedCreateNestedManyWithoutMedioPagoInput = {
    create?: XOR<PagoCreateWithoutMedioPagoInput, PagoUncheckedCreateWithoutMedioPagoInput> | PagoCreateWithoutMedioPagoInput[] | PagoUncheckedCreateWithoutMedioPagoInput[]
    connectOrCreate?: PagoCreateOrConnectWithoutMedioPagoInput | PagoCreateOrConnectWithoutMedioPagoInput[]
    createMany?: PagoCreateManyMedioPagoInputEnvelope
    connect?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
  }

  export type ClienteUpdateManyWithoutMedioPagoNestedInput = {
    create?: XOR<ClienteCreateWithoutMedioPagoInput, ClienteUncheckedCreateWithoutMedioPagoInput> | ClienteCreateWithoutMedioPagoInput[] | ClienteUncheckedCreateWithoutMedioPagoInput[]
    connectOrCreate?: ClienteCreateOrConnectWithoutMedioPagoInput | ClienteCreateOrConnectWithoutMedioPagoInput[]
    upsert?: ClienteUpsertWithWhereUniqueWithoutMedioPagoInput | ClienteUpsertWithWhereUniqueWithoutMedioPagoInput[]
    set?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    disconnect?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    delete?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    connect?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    update?: ClienteUpdateWithWhereUniqueWithoutMedioPagoInput | ClienteUpdateWithWhereUniqueWithoutMedioPagoInput[]
    updateMany?: ClienteUpdateManyWithWhereWithoutMedioPagoInput | ClienteUpdateManyWithWhereWithoutMedioPagoInput[]
    deleteMany?: ClienteScalarWhereInput | ClienteScalarWhereInput[]
  }

  export type PagoUpdateManyWithoutMedioPagoNestedInput = {
    create?: XOR<PagoCreateWithoutMedioPagoInput, PagoUncheckedCreateWithoutMedioPagoInput> | PagoCreateWithoutMedioPagoInput[] | PagoUncheckedCreateWithoutMedioPagoInput[]
    connectOrCreate?: PagoCreateOrConnectWithoutMedioPagoInput | PagoCreateOrConnectWithoutMedioPagoInput[]
    upsert?: PagoUpsertWithWhereUniqueWithoutMedioPagoInput | PagoUpsertWithWhereUniqueWithoutMedioPagoInput[]
    createMany?: PagoCreateManyMedioPagoInputEnvelope
    set?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
    disconnect?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
    delete?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
    connect?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
    update?: PagoUpdateWithWhereUniqueWithoutMedioPagoInput | PagoUpdateWithWhereUniqueWithoutMedioPagoInput[]
    updateMany?: PagoUpdateManyWithWhereWithoutMedioPagoInput | PagoUpdateManyWithWhereWithoutMedioPagoInput[]
    deleteMany?: PagoScalarWhereInput | PagoScalarWhereInput[]
  }

  export type ClienteUncheckedUpdateManyWithoutMedioPagoNestedInput = {
    create?: XOR<ClienteCreateWithoutMedioPagoInput, ClienteUncheckedCreateWithoutMedioPagoInput> | ClienteCreateWithoutMedioPagoInput[] | ClienteUncheckedCreateWithoutMedioPagoInput[]
    connectOrCreate?: ClienteCreateOrConnectWithoutMedioPagoInput | ClienteCreateOrConnectWithoutMedioPagoInput[]
    upsert?: ClienteUpsertWithWhereUniqueWithoutMedioPagoInput | ClienteUpsertWithWhereUniqueWithoutMedioPagoInput[]
    set?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    disconnect?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    delete?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    connect?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    update?: ClienteUpdateWithWhereUniqueWithoutMedioPagoInput | ClienteUpdateWithWhereUniqueWithoutMedioPagoInput[]
    updateMany?: ClienteUpdateManyWithWhereWithoutMedioPagoInput | ClienteUpdateManyWithWhereWithoutMedioPagoInput[]
    deleteMany?: ClienteScalarWhereInput | ClienteScalarWhereInput[]
  }

  export type PagoUncheckedUpdateManyWithoutMedioPagoNestedInput = {
    create?: XOR<PagoCreateWithoutMedioPagoInput, PagoUncheckedCreateWithoutMedioPagoInput> | PagoCreateWithoutMedioPagoInput[] | PagoUncheckedCreateWithoutMedioPagoInput[]
    connectOrCreate?: PagoCreateOrConnectWithoutMedioPagoInput | PagoCreateOrConnectWithoutMedioPagoInput[]
    upsert?: PagoUpsertWithWhereUniqueWithoutMedioPagoInput | PagoUpsertWithWhereUniqueWithoutMedioPagoInput[]
    createMany?: PagoCreateManyMedioPagoInputEnvelope
    set?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
    disconnect?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
    delete?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
    connect?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
    update?: PagoUpdateWithWhereUniqueWithoutMedioPagoInput | PagoUpdateWithWhereUniqueWithoutMedioPagoInput[]
    updateMany?: PagoUpdateManyWithWhereWithoutMedioPagoInput | PagoUpdateManyWithWhereWithoutMedioPagoInput[]
    deleteMany?: PagoScalarWhereInput | PagoScalarWhereInput[]
  }

  export type MedioPagoCreateNestedOneWithoutPagoInput = {
    create?: XOR<MedioPagoCreateWithoutPagoInput, MedioPagoUncheckedCreateWithoutPagoInput>
    connectOrCreate?: MedioPagoCreateOrConnectWithoutPagoInput
    connect?: MedioPagoWhereUniqueInput
  }

  export type EstadoPagoCreateNestedOneWithoutPagosInput = {
    create?: XOR<EstadoPagoCreateWithoutPagosInput, EstadoPagoUncheckedCreateWithoutPagosInput>
    connectOrCreate?: EstadoPagoCreateOrConnectWithoutPagosInput
    connect?: EstadoPagoWhereUniqueInput
  }

  export type MedioPagoUpdateOneRequiredWithoutPagoNestedInput = {
    create?: XOR<MedioPagoCreateWithoutPagoInput, MedioPagoUncheckedCreateWithoutPagoInput>
    connectOrCreate?: MedioPagoCreateOrConnectWithoutPagoInput
    upsert?: MedioPagoUpsertWithoutPagoInput
    connect?: MedioPagoWhereUniqueInput
    update?: XOR<XOR<MedioPagoUpdateToOneWithWhereWithoutPagoInput, MedioPagoUpdateWithoutPagoInput>, MedioPagoUncheckedUpdateWithoutPagoInput>
  }

  export type EstadoPagoUpdateOneRequiredWithoutPagosNestedInput = {
    create?: XOR<EstadoPagoCreateWithoutPagosInput, EstadoPagoUncheckedCreateWithoutPagosInput>
    connectOrCreate?: EstadoPagoCreateOrConnectWithoutPagosInput
    upsert?: EstadoPagoUpsertWithoutPagosInput
    connect?: EstadoPagoWhereUniqueInput
    update?: XOR<XOR<EstadoPagoUpdateToOneWithWhereWithoutPagosInput, EstadoPagoUpdateWithoutPagosInput>, EstadoPagoUncheckedUpdateWithoutPagosInput>
  }

  export type PagoCreateNestedManyWithoutEstadoPagoInput = {
    create?: XOR<PagoCreateWithoutEstadoPagoInput, PagoUncheckedCreateWithoutEstadoPagoInput> | PagoCreateWithoutEstadoPagoInput[] | PagoUncheckedCreateWithoutEstadoPagoInput[]
    connectOrCreate?: PagoCreateOrConnectWithoutEstadoPagoInput | PagoCreateOrConnectWithoutEstadoPagoInput[]
    createMany?: PagoCreateManyEstadoPagoInputEnvelope
    connect?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
  }

  export type PagoUncheckedCreateNestedManyWithoutEstadoPagoInput = {
    create?: XOR<PagoCreateWithoutEstadoPagoInput, PagoUncheckedCreateWithoutEstadoPagoInput> | PagoCreateWithoutEstadoPagoInput[] | PagoUncheckedCreateWithoutEstadoPagoInput[]
    connectOrCreate?: PagoCreateOrConnectWithoutEstadoPagoInput | PagoCreateOrConnectWithoutEstadoPagoInput[]
    createMany?: PagoCreateManyEstadoPagoInputEnvelope
    connect?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
  }

  export type PagoUpdateManyWithoutEstadoPagoNestedInput = {
    create?: XOR<PagoCreateWithoutEstadoPagoInput, PagoUncheckedCreateWithoutEstadoPagoInput> | PagoCreateWithoutEstadoPagoInput[] | PagoUncheckedCreateWithoutEstadoPagoInput[]
    connectOrCreate?: PagoCreateOrConnectWithoutEstadoPagoInput | PagoCreateOrConnectWithoutEstadoPagoInput[]
    upsert?: PagoUpsertWithWhereUniqueWithoutEstadoPagoInput | PagoUpsertWithWhereUniqueWithoutEstadoPagoInput[]
    createMany?: PagoCreateManyEstadoPagoInputEnvelope
    set?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
    disconnect?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
    delete?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
    connect?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
    update?: PagoUpdateWithWhereUniqueWithoutEstadoPagoInput | PagoUpdateWithWhereUniqueWithoutEstadoPagoInput[]
    updateMany?: PagoUpdateManyWithWhereWithoutEstadoPagoInput | PagoUpdateManyWithWhereWithoutEstadoPagoInput[]
    deleteMany?: PagoScalarWhereInput | PagoScalarWhereInput[]
  }

  export type PagoUncheckedUpdateManyWithoutEstadoPagoNestedInput = {
    create?: XOR<PagoCreateWithoutEstadoPagoInput, PagoUncheckedCreateWithoutEstadoPagoInput> | PagoCreateWithoutEstadoPagoInput[] | PagoUncheckedCreateWithoutEstadoPagoInput[]
    connectOrCreate?: PagoCreateOrConnectWithoutEstadoPagoInput | PagoCreateOrConnectWithoutEstadoPagoInput[]
    upsert?: PagoUpsertWithWhereUniqueWithoutEstadoPagoInput | PagoUpsertWithWhereUniqueWithoutEstadoPagoInput[]
    createMany?: PagoCreateManyEstadoPagoInputEnvelope
    set?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
    disconnect?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
    delete?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
    connect?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
    update?: PagoUpdateWithWhereUniqueWithoutEstadoPagoInput | PagoUpdateWithWhereUniqueWithoutEstadoPagoInput[]
    updateMany?: PagoUpdateManyWithWhereWithoutEstadoPagoInput | PagoUpdateManyWithWhereWithoutEstadoPagoInput[]
    deleteMany?: PagoScalarWhereInput | PagoScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type DireccionCreateWithoutClienteDirInput = {
    calle: string
    ciudad: string
    localidad: string
    pais: string
    codigoPostal: number
    envioPedido?: EnvioPedidoCreateNestedManyWithoutDireccionInput
  }

  export type DireccionUncheckedCreateWithoutClienteDirInput = {
    codigoDireccion?: number
    calle: string
    ciudad: string
    localidad: string
    pais: string
    codigoPostal: number
    envioPedido?: EnvioPedidoUncheckedCreateNestedManyWithoutDireccionInput
  }

  export type DireccionCreateOrConnectWithoutClienteDirInput = {
    where: DireccionWhereUniqueInput
    create: XOR<DireccionCreateWithoutClienteDirInput, DireccionUncheckedCreateWithoutClienteDirInput>
  }

  export type DireccionCreateManyClienteDirInputEnvelope = {
    data: DireccionCreateManyClienteDirInput | DireccionCreateManyClienteDirInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioCreateWithoutClienteInput = {
    nombreUsuario: string
    contraseñaUsuario: string
    emailUsuario: string
    fechaRegistroUsuario?: Date | string
    rolUsuario: RolUsuarioCreateNestedOneWithoutUsuariosInput
  }

  export type UsuarioUncheckedCreateWithoutClienteInput = {
    codUsuario?: number
    nombreUsuario: string
    contraseñaUsuario: string
    emailUsuario: string
    fechaRegistroUsuario?: Date | string
    codRolUsuario: number
  }

  export type UsuarioCreateOrConnectWithoutClienteInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutClienteInput, UsuarioUncheckedCreateWithoutClienteInput>
  }

  export type MedioPagoCreateWithoutClientesInput = {
    nombreTipoMedioPago: string
    fechaHoraBajaMedioPago?: Date | string | null
    Pago?: PagoCreateNestedManyWithoutMedioPagoInput
  }

  export type MedioPagoUncheckedCreateWithoutClientesInput = {
    codMedioPago?: number
    nombreTipoMedioPago: string
    fechaHoraBajaMedioPago?: Date | string | null
    Pago?: PagoUncheckedCreateNestedManyWithoutMedioPagoInput
  }

  export type MedioPagoCreateOrConnectWithoutClientesInput = {
    where: MedioPagoWhereUniqueInput
    create: XOR<MedioPagoCreateWithoutClientesInput, MedioPagoUncheckedCreateWithoutClientesInput>
  }

  export type PedidoCreateWithoutClienteInput = {
    impuestoSobreVenta: number
    envioGratuito: boolean
    montoTotal: number
    fechaAltaPedido?: Date | string
    carritoCompra: CarritoComprasCreateNestedOneWithoutPedidoInput
    estadoPedido: EstadoPedidoCreateNestedOneWithoutPedidosInput
    articuloPedido?: ArticuloPedidoCreateNestedManyWithoutPedidoInput
  }

  export type PedidoUncheckedCreateWithoutClienteInput = {
    codPedido?: number
    impuestoSobreVenta: number
    envioGratuito: boolean
    montoTotal: number
    fechaAltaPedido?: Date | string
    codCarritoCompra: number
    codEstadoPedido: number
    articuloPedido?: ArticuloPedidoUncheckedCreateNestedManyWithoutPedidoInput
  }

  export type PedidoCreateOrConnectWithoutClienteInput = {
    where: PedidoWhereUniqueInput
    create: XOR<PedidoCreateWithoutClienteInput, PedidoUncheckedCreateWithoutClienteInput>
  }

  export type PedidoCreateManyClienteInputEnvelope = {
    data: PedidoCreateManyClienteInput | PedidoCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type ListaFavoritoCreateWithoutClienteInput = {
    nombreListaFavorito: string
    articulo?: ArticuloCreateNestedManyWithoutListaFavInput
  }

  export type ListaFavoritoUncheckedCreateWithoutClienteInput = {
    codListaFavorito?: number
    nombreListaFavorito: string
    articulo?: ArticuloUncheckedCreateNestedManyWithoutListaFavInput
  }

  export type ListaFavoritoCreateOrConnectWithoutClienteInput = {
    where: ListaFavoritoWhereUniqueInput
    create: XOR<ListaFavoritoCreateWithoutClienteInput, ListaFavoritoUncheckedCreateWithoutClienteInput>
  }

  export type DireccionUpsertWithWhereUniqueWithoutClienteDirInput = {
    where: DireccionWhereUniqueInput
    update: XOR<DireccionUpdateWithoutClienteDirInput, DireccionUncheckedUpdateWithoutClienteDirInput>
    create: XOR<DireccionCreateWithoutClienteDirInput, DireccionUncheckedCreateWithoutClienteDirInput>
  }

  export type DireccionUpdateWithWhereUniqueWithoutClienteDirInput = {
    where: DireccionWhereUniqueInput
    data: XOR<DireccionUpdateWithoutClienteDirInput, DireccionUncheckedUpdateWithoutClienteDirInput>
  }

  export type DireccionUpdateManyWithWhereWithoutClienteDirInput = {
    where: DireccionScalarWhereInput
    data: XOR<DireccionUpdateManyMutationInput, DireccionUncheckedUpdateManyWithoutClienteDirInput>
  }

  export type DireccionScalarWhereInput = {
    AND?: DireccionScalarWhereInput | DireccionScalarWhereInput[]
    OR?: DireccionScalarWhereInput[]
    NOT?: DireccionScalarWhereInput | DireccionScalarWhereInput[]
    codigoDireccion?: IntFilter<"Direccion"> | number
    calle?: StringFilter<"Direccion"> | string
    ciudad?: StringFilter<"Direccion"> | string
    localidad?: StringFilter<"Direccion"> | string
    pais?: StringFilter<"Direccion"> | string
    codigoPostal?: IntFilter<"Direccion"> | number
    codCliente?: IntFilter<"Direccion"> | number
  }

  export type UsuarioUpsertWithoutClienteInput = {
    update: XOR<UsuarioUpdateWithoutClienteInput, UsuarioUncheckedUpdateWithoutClienteInput>
    create: XOR<UsuarioCreateWithoutClienteInput, UsuarioUncheckedCreateWithoutClienteInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutClienteInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutClienteInput, UsuarioUncheckedUpdateWithoutClienteInput>
  }

  export type UsuarioUpdateWithoutClienteInput = {
    nombreUsuario?: StringFieldUpdateOperationsInput | string
    contraseñaUsuario?: StringFieldUpdateOperationsInput | string
    emailUsuario?: StringFieldUpdateOperationsInput | string
    fechaRegistroUsuario?: DateTimeFieldUpdateOperationsInput | Date | string
    rolUsuario?: RolUsuarioUpdateOneRequiredWithoutUsuariosNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutClienteInput = {
    codUsuario?: IntFieldUpdateOperationsInput | number
    nombreUsuario?: StringFieldUpdateOperationsInput | string
    contraseñaUsuario?: StringFieldUpdateOperationsInput | string
    emailUsuario?: StringFieldUpdateOperationsInput | string
    fechaRegistroUsuario?: DateTimeFieldUpdateOperationsInput | Date | string
    codRolUsuario?: IntFieldUpdateOperationsInput | number
  }

  export type MedioPagoUpsertWithWhereUniqueWithoutClientesInput = {
    where: MedioPagoWhereUniqueInput
    update: XOR<MedioPagoUpdateWithoutClientesInput, MedioPagoUncheckedUpdateWithoutClientesInput>
    create: XOR<MedioPagoCreateWithoutClientesInput, MedioPagoUncheckedCreateWithoutClientesInput>
  }

  export type MedioPagoUpdateWithWhereUniqueWithoutClientesInput = {
    where: MedioPagoWhereUniqueInput
    data: XOR<MedioPagoUpdateWithoutClientesInput, MedioPagoUncheckedUpdateWithoutClientesInput>
  }

  export type MedioPagoUpdateManyWithWhereWithoutClientesInput = {
    where: MedioPagoScalarWhereInput
    data: XOR<MedioPagoUpdateManyMutationInput, MedioPagoUncheckedUpdateManyWithoutClientesInput>
  }

  export type MedioPagoScalarWhereInput = {
    AND?: MedioPagoScalarWhereInput | MedioPagoScalarWhereInput[]
    OR?: MedioPagoScalarWhereInput[]
    NOT?: MedioPagoScalarWhereInput | MedioPagoScalarWhereInput[]
    codMedioPago?: IntFilter<"MedioPago"> | number
    nombreTipoMedioPago?: StringFilter<"MedioPago"> | string
    fechaHoraBajaMedioPago?: DateTimeNullableFilter<"MedioPago"> | Date | string | null
  }

  export type PedidoUpsertWithWhereUniqueWithoutClienteInput = {
    where: PedidoWhereUniqueInput
    update: XOR<PedidoUpdateWithoutClienteInput, PedidoUncheckedUpdateWithoutClienteInput>
    create: XOR<PedidoCreateWithoutClienteInput, PedidoUncheckedCreateWithoutClienteInput>
  }

  export type PedidoUpdateWithWhereUniqueWithoutClienteInput = {
    where: PedidoWhereUniqueInput
    data: XOR<PedidoUpdateWithoutClienteInput, PedidoUncheckedUpdateWithoutClienteInput>
  }

  export type PedidoUpdateManyWithWhereWithoutClienteInput = {
    where: PedidoScalarWhereInput
    data: XOR<PedidoUpdateManyMutationInput, PedidoUncheckedUpdateManyWithoutClienteInput>
  }

  export type PedidoScalarWhereInput = {
    AND?: PedidoScalarWhereInput | PedidoScalarWhereInput[]
    OR?: PedidoScalarWhereInput[]
    NOT?: PedidoScalarWhereInput | PedidoScalarWhereInput[]
    codPedido?: IntFilter<"Pedido"> | number
    impuestoSobreVenta?: FloatFilter<"Pedido"> | number
    envioGratuito?: BoolFilter<"Pedido"> | boolean
    montoTotal?: FloatFilter<"Pedido"> | number
    fechaAltaPedido?: DateTimeFilter<"Pedido"> | Date | string
    codCliente?: IntFilter<"Pedido"> | number
    codCarritoCompra?: IntFilter<"Pedido"> | number
    codEstadoPedido?: IntFilter<"Pedido"> | number
  }

  export type ListaFavoritoUpsertWithoutClienteInput = {
    update: XOR<ListaFavoritoUpdateWithoutClienteInput, ListaFavoritoUncheckedUpdateWithoutClienteInput>
    create: XOR<ListaFavoritoCreateWithoutClienteInput, ListaFavoritoUncheckedCreateWithoutClienteInput>
    where?: ListaFavoritoWhereInput
  }

  export type ListaFavoritoUpdateToOneWithWhereWithoutClienteInput = {
    where?: ListaFavoritoWhereInput
    data: XOR<ListaFavoritoUpdateWithoutClienteInput, ListaFavoritoUncheckedUpdateWithoutClienteInput>
  }

  export type ListaFavoritoUpdateWithoutClienteInput = {
    nombreListaFavorito?: StringFieldUpdateOperationsInput | string
    articulo?: ArticuloUpdateManyWithoutListaFavNestedInput
  }

  export type ListaFavoritoUncheckedUpdateWithoutClienteInput = {
    codListaFavorito?: IntFieldUpdateOperationsInput | number
    nombreListaFavorito?: StringFieldUpdateOperationsInput | string
    articulo?: ArticuloUncheckedUpdateManyWithoutListaFavNestedInput
  }

  export type RolUsuarioCreateWithoutUsuariosInput = {
    nombreRolUsuario: string
    fechaHoraBajaRol?: Date | string | null
    permisoUsuario?: RolUsuarioCreatepermisoUsuarioInput | string[]
    activo: boolean
    verificado: boolean
    tokenVerificacion: string
  }

  export type RolUsuarioUncheckedCreateWithoutUsuariosInput = {
    codRolUsuario?: number
    nombreRolUsuario: string
    fechaHoraBajaRol?: Date | string | null
    permisoUsuario?: RolUsuarioCreatepermisoUsuarioInput | string[]
    activo: boolean
    verificado: boolean
    tokenVerificacion: string
  }

  export type RolUsuarioCreateOrConnectWithoutUsuariosInput = {
    where: RolUsuarioWhereUniqueInput
    create: XOR<RolUsuarioCreateWithoutUsuariosInput, RolUsuarioUncheckedCreateWithoutUsuariosInput>
  }

  export type ClienteCreateWithoutUsuarioInput = {
    nombreCliente: string
    dni: number
    telefono: number
    fechaHoraBajaCliente?: Date | string | null
    codListaFavorito?: number | null
    direccion?: DireccionCreateNestedManyWithoutClienteDirInput
    medioPago?: MedioPagoCreateNestedManyWithoutClientesInput
    Pedido?: PedidoCreateNestedManyWithoutClienteInput
    listaFav?: ListaFavoritoCreateNestedOneWithoutClienteInput
  }

  export type ClienteUncheckedCreateWithoutUsuarioInput = {
    codCliente?: number
    nombreCliente: string
    dni: number
    telefono: number
    fechaHoraBajaCliente?: Date | string | null
    codListaFavorito?: number | null
    direccion?: DireccionUncheckedCreateNestedManyWithoutClienteDirInput
    medioPago?: MedioPagoUncheckedCreateNestedManyWithoutClientesInput
    Pedido?: PedidoUncheckedCreateNestedManyWithoutClienteInput
    listaFav?: ListaFavoritoUncheckedCreateNestedOneWithoutClienteInput
  }

  export type ClienteCreateOrConnectWithoutUsuarioInput = {
    where: ClienteWhereUniqueInput
    create: XOR<ClienteCreateWithoutUsuarioInput, ClienteUncheckedCreateWithoutUsuarioInput>
  }

  export type RolUsuarioUpsertWithoutUsuariosInput = {
    update: XOR<RolUsuarioUpdateWithoutUsuariosInput, RolUsuarioUncheckedUpdateWithoutUsuariosInput>
    create: XOR<RolUsuarioCreateWithoutUsuariosInput, RolUsuarioUncheckedCreateWithoutUsuariosInput>
    where?: RolUsuarioWhereInput
  }

  export type RolUsuarioUpdateToOneWithWhereWithoutUsuariosInput = {
    where?: RolUsuarioWhereInput
    data: XOR<RolUsuarioUpdateWithoutUsuariosInput, RolUsuarioUncheckedUpdateWithoutUsuariosInput>
  }

  export type RolUsuarioUpdateWithoutUsuariosInput = {
    nombreRolUsuario?: StringFieldUpdateOperationsInput | string
    fechaHoraBajaRol?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    permisoUsuario?: RolUsuarioUpdatepermisoUsuarioInput | string[]
    activo?: BoolFieldUpdateOperationsInput | boolean
    verificado?: BoolFieldUpdateOperationsInput | boolean
    tokenVerificacion?: StringFieldUpdateOperationsInput | string
  }

  export type RolUsuarioUncheckedUpdateWithoutUsuariosInput = {
    codRolUsuario?: IntFieldUpdateOperationsInput | number
    nombreRolUsuario?: StringFieldUpdateOperationsInput | string
    fechaHoraBajaRol?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    permisoUsuario?: RolUsuarioUpdatepermisoUsuarioInput | string[]
    activo?: BoolFieldUpdateOperationsInput | boolean
    verificado?: BoolFieldUpdateOperationsInput | boolean
    tokenVerificacion?: StringFieldUpdateOperationsInput | string
  }

  export type ClienteUpsertWithoutUsuarioInput = {
    update: XOR<ClienteUpdateWithoutUsuarioInput, ClienteUncheckedUpdateWithoutUsuarioInput>
    create: XOR<ClienteCreateWithoutUsuarioInput, ClienteUncheckedCreateWithoutUsuarioInput>
    where?: ClienteWhereInput
  }

  export type ClienteUpdateToOneWithWhereWithoutUsuarioInput = {
    where?: ClienteWhereInput
    data: XOR<ClienteUpdateWithoutUsuarioInput, ClienteUncheckedUpdateWithoutUsuarioInput>
  }

  export type ClienteUpdateWithoutUsuarioInput = {
    nombreCliente?: StringFieldUpdateOperationsInput | string
    dni?: IntFieldUpdateOperationsInput | number
    telefono?: IntFieldUpdateOperationsInput | number
    fechaHoraBajaCliente?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    codListaFavorito?: NullableIntFieldUpdateOperationsInput | number | null
    direccion?: DireccionUpdateManyWithoutClienteDirNestedInput
    medioPago?: MedioPagoUpdateManyWithoutClientesNestedInput
    Pedido?: PedidoUpdateManyWithoutClienteNestedInput
    listaFav?: ListaFavoritoUpdateOneWithoutClienteNestedInput
  }

  export type ClienteUncheckedUpdateWithoutUsuarioInput = {
    codCliente?: IntFieldUpdateOperationsInput | number
    nombreCliente?: StringFieldUpdateOperationsInput | string
    dni?: IntFieldUpdateOperationsInput | number
    telefono?: IntFieldUpdateOperationsInput | number
    fechaHoraBajaCliente?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    codListaFavorito?: NullableIntFieldUpdateOperationsInput | number | null
    direccion?: DireccionUncheckedUpdateManyWithoutClienteDirNestedInput
    medioPago?: MedioPagoUncheckedUpdateManyWithoutClientesNestedInput
    Pedido?: PedidoUncheckedUpdateManyWithoutClienteNestedInput
    listaFav?: ListaFavoritoUncheckedUpdateOneWithoutClienteNestedInput
  }

  export type UsuarioCreateWithoutRolUsuarioInput = {
    nombreUsuario: string
    contraseñaUsuario: string
    emailUsuario: string
    fechaRegistroUsuario?: Date | string
    cliente?: ClienteCreateNestedOneWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutRolUsuarioInput = {
    codUsuario?: number
    nombreUsuario: string
    contraseñaUsuario: string
    emailUsuario: string
    fechaRegistroUsuario?: Date | string
    cliente?: ClienteUncheckedCreateNestedOneWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutRolUsuarioInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutRolUsuarioInput, UsuarioUncheckedCreateWithoutRolUsuarioInput>
  }

  export type UsuarioCreateManyRolUsuarioInputEnvelope = {
    data: UsuarioCreateManyRolUsuarioInput | UsuarioCreateManyRolUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioUpsertWithWhereUniqueWithoutRolUsuarioInput = {
    where: UsuarioWhereUniqueInput
    update: XOR<UsuarioUpdateWithoutRolUsuarioInput, UsuarioUncheckedUpdateWithoutRolUsuarioInput>
    create: XOR<UsuarioCreateWithoutRolUsuarioInput, UsuarioUncheckedCreateWithoutRolUsuarioInput>
  }

  export type UsuarioUpdateWithWhereUniqueWithoutRolUsuarioInput = {
    where: UsuarioWhereUniqueInput
    data: XOR<UsuarioUpdateWithoutRolUsuarioInput, UsuarioUncheckedUpdateWithoutRolUsuarioInput>
  }

  export type UsuarioUpdateManyWithWhereWithoutRolUsuarioInput = {
    where: UsuarioScalarWhereInput
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyWithoutRolUsuarioInput>
  }

  export type UsuarioScalarWhereInput = {
    AND?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
    OR?: UsuarioScalarWhereInput[]
    NOT?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
    codUsuario?: IntFilter<"Usuario"> | number
    nombreUsuario?: StringFilter<"Usuario"> | string
    contraseñaUsuario?: StringFilter<"Usuario"> | string
    emailUsuario?: StringFilter<"Usuario"> | string
    fechaRegistroUsuario?: DateTimeFilter<"Usuario"> | Date | string
    codRolUsuario?: IntFilter<"Usuario"> | number
  }

  export type ClienteCreateWithoutDireccionInput = {
    nombreCliente: string
    dni: number
    telefono: number
    fechaHoraBajaCliente?: Date | string | null
    codListaFavorito?: number | null
    usuario: UsuarioCreateNestedOneWithoutClienteInput
    medioPago?: MedioPagoCreateNestedManyWithoutClientesInput
    Pedido?: PedidoCreateNestedManyWithoutClienteInput
    listaFav?: ListaFavoritoCreateNestedOneWithoutClienteInput
  }

  export type ClienteUncheckedCreateWithoutDireccionInput = {
    codCliente?: number
    nombreCliente: string
    dni: number
    telefono: number
    fechaHoraBajaCliente?: Date | string | null
    codUsuario: number
    codListaFavorito?: number | null
    medioPago?: MedioPagoUncheckedCreateNestedManyWithoutClientesInput
    Pedido?: PedidoUncheckedCreateNestedManyWithoutClienteInput
    listaFav?: ListaFavoritoUncheckedCreateNestedOneWithoutClienteInput
  }

  export type ClienteCreateOrConnectWithoutDireccionInput = {
    where: ClienteWhereUniqueInput
    create: XOR<ClienteCreateWithoutDireccionInput, ClienteUncheckedCreateWithoutDireccionInput>
  }

  export type EnvioPedidoCreateWithoutDireccionInput = {
    empresaEnvio: string
    costoEnvio: number
    fechaSalida?: Date | string | null
    fechaEntregaEstimada: Date | string
    fechaEntregaBaja?: Date | string | null
    estadoEnvio: EstadoEnvioCreateNestedOneWithoutEnvioPedidoInput
  }

  export type EnvioPedidoUncheckedCreateWithoutDireccionInput = {
    codEnvio?: number
    empresaEnvio: string
    costoEnvio: number
    fechaSalida?: Date | string | null
    fechaEntregaEstimada: Date | string
    fechaEntregaBaja?: Date | string | null
    codEstadoEnvio: number
  }

  export type EnvioPedidoCreateOrConnectWithoutDireccionInput = {
    where: EnvioPedidoWhereUniqueInput
    create: XOR<EnvioPedidoCreateWithoutDireccionInput, EnvioPedidoUncheckedCreateWithoutDireccionInput>
  }

  export type EnvioPedidoCreateManyDireccionInputEnvelope = {
    data: EnvioPedidoCreateManyDireccionInput | EnvioPedidoCreateManyDireccionInput[]
    skipDuplicates?: boolean
  }

  export type ClienteUpsertWithoutDireccionInput = {
    update: XOR<ClienteUpdateWithoutDireccionInput, ClienteUncheckedUpdateWithoutDireccionInput>
    create: XOR<ClienteCreateWithoutDireccionInput, ClienteUncheckedCreateWithoutDireccionInput>
    where?: ClienteWhereInput
  }

  export type ClienteUpdateToOneWithWhereWithoutDireccionInput = {
    where?: ClienteWhereInput
    data: XOR<ClienteUpdateWithoutDireccionInput, ClienteUncheckedUpdateWithoutDireccionInput>
  }

  export type ClienteUpdateWithoutDireccionInput = {
    nombreCliente?: StringFieldUpdateOperationsInput | string
    dni?: IntFieldUpdateOperationsInput | number
    telefono?: IntFieldUpdateOperationsInput | number
    fechaHoraBajaCliente?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    codListaFavorito?: NullableIntFieldUpdateOperationsInput | number | null
    usuario?: UsuarioUpdateOneRequiredWithoutClienteNestedInput
    medioPago?: MedioPagoUpdateManyWithoutClientesNestedInput
    Pedido?: PedidoUpdateManyWithoutClienteNestedInput
    listaFav?: ListaFavoritoUpdateOneWithoutClienteNestedInput
  }

  export type ClienteUncheckedUpdateWithoutDireccionInput = {
    codCliente?: IntFieldUpdateOperationsInput | number
    nombreCliente?: StringFieldUpdateOperationsInput | string
    dni?: IntFieldUpdateOperationsInput | number
    telefono?: IntFieldUpdateOperationsInput | number
    fechaHoraBajaCliente?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    codUsuario?: IntFieldUpdateOperationsInput | number
    codListaFavorito?: NullableIntFieldUpdateOperationsInput | number | null
    medioPago?: MedioPagoUncheckedUpdateManyWithoutClientesNestedInput
    Pedido?: PedidoUncheckedUpdateManyWithoutClienteNestedInput
    listaFav?: ListaFavoritoUncheckedUpdateOneWithoutClienteNestedInput
  }

  export type EnvioPedidoUpsertWithWhereUniqueWithoutDireccionInput = {
    where: EnvioPedidoWhereUniqueInput
    update: XOR<EnvioPedidoUpdateWithoutDireccionInput, EnvioPedidoUncheckedUpdateWithoutDireccionInput>
    create: XOR<EnvioPedidoCreateWithoutDireccionInput, EnvioPedidoUncheckedCreateWithoutDireccionInput>
  }

  export type EnvioPedidoUpdateWithWhereUniqueWithoutDireccionInput = {
    where: EnvioPedidoWhereUniqueInput
    data: XOR<EnvioPedidoUpdateWithoutDireccionInput, EnvioPedidoUncheckedUpdateWithoutDireccionInput>
  }

  export type EnvioPedidoUpdateManyWithWhereWithoutDireccionInput = {
    where: EnvioPedidoScalarWhereInput
    data: XOR<EnvioPedidoUpdateManyMutationInput, EnvioPedidoUncheckedUpdateManyWithoutDireccionInput>
  }

  export type EnvioPedidoScalarWhereInput = {
    AND?: EnvioPedidoScalarWhereInput | EnvioPedidoScalarWhereInput[]
    OR?: EnvioPedidoScalarWhereInput[]
    NOT?: EnvioPedidoScalarWhereInput | EnvioPedidoScalarWhereInput[]
    codEnvio?: IntFilter<"EnvioPedido"> | number
    empresaEnvio?: StringFilter<"EnvioPedido"> | string
    costoEnvio?: FloatFilter<"EnvioPedido"> | number
    fechaSalida?: DateTimeNullableFilter<"EnvioPedido"> | Date | string | null
    fechaEntregaEstimada?: DateTimeFilter<"EnvioPedido"> | Date | string
    fechaEntregaBaja?: DateTimeNullableFilter<"EnvioPedido"> | Date | string | null
    codEstadoEnvio?: IntFilter<"EnvioPedido"> | number
    codigoDireccion?: IntFilter<"EnvioPedido"> | number
  }

  export type ClienteCreateWithoutPedidoInput = {
    nombreCliente: string
    dni: number
    telefono: number
    fechaHoraBajaCliente?: Date | string | null
    codListaFavorito?: number | null
    direccion?: DireccionCreateNestedManyWithoutClienteDirInput
    usuario: UsuarioCreateNestedOneWithoutClienteInput
    medioPago?: MedioPagoCreateNestedManyWithoutClientesInput
    listaFav?: ListaFavoritoCreateNestedOneWithoutClienteInput
  }

  export type ClienteUncheckedCreateWithoutPedidoInput = {
    codCliente?: number
    nombreCliente: string
    dni: number
    telefono: number
    fechaHoraBajaCliente?: Date | string | null
    codUsuario: number
    codListaFavorito?: number | null
    direccion?: DireccionUncheckedCreateNestedManyWithoutClienteDirInput
    medioPago?: MedioPagoUncheckedCreateNestedManyWithoutClientesInput
    listaFav?: ListaFavoritoUncheckedCreateNestedOneWithoutClienteInput
  }

  export type ClienteCreateOrConnectWithoutPedidoInput = {
    where: ClienteWhereUniqueInput
    create: XOR<ClienteCreateWithoutPedidoInput, ClienteUncheckedCreateWithoutPedidoInput>
  }

  export type CarritoComprasCreateWithoutPedidoInput = {
    montoCarritoCompra: number
    codPedido: number
    articuloPedido?: ArticuloPedidoCreateNestedManyWithoutCarritoCompraInput
  }

  export type CarritoComprasUncheckedCreateWithoutPedidoInput = {
    codCarritoCompra?: number
    montoCarritoCompra: number
    codPedido: number
    articuloPedido?: ArticuloPedidoUncheckedCreateNestedManyWithoutCarritoCompraInput
  }

  export type CarritoComprasCreateOrConnectWithoutPedidoInput = {
    where: CarritoComprasWhereUniqueInput
    create: XOR<CarritoComprasCreateWithoutPedidoInput, CarritoComprasUncheckedCreateWithoutPedidoInput>
  }

  export type EstadoPedidoCreateWithoutPedidosInput = {
    nombreEstadoPedido: string
    fechaHoraBajaEP?: Date | string | null
  }

  export type EstadoPedidoUncheckedCreateWithoutPedidosInput = {
    codEstadoPedido?: number
    nombreEstadoPedido: string
    fechaHoraBajaEP?: Date | string | null
  }

  export type EstadoPedidoCreateOrConnectWithoutPedidosInput = {
    where: EstadoPedidoWhereUniqueInput
    create: XOR<EstadoPedidoCreateWithoutPedidosInput, EstadoPedidoUncheckedCreateWithoutPedidosInput>
  }

  export type ArticuloPedidoCreateWithoutPedidoInput = {
    cantidadArtPed: number
    montoArticuloPe: number
    PrecioUnitario: number
    carritoCompra: CarritoComprasCreateNestedOneWithoutArticuloPedidoInput
    articulo: ArticuloCreateNestedOneWithoutArticuloPedidoInput
  }

  export type ArticuloPedidoUncheckedCreateWithoutPedidoInput = {
    cantidadArtPed: number
    nroRenglon?: number
    montoArticuloPe: number
    PrecioUnitario: number
    codCarritoCompra: number
    codArticulo: number
  }

  export type ArticuloPedidoCreateOrConnectWithoutPedidoInput = {
    where: ArticuloPedidoWhereUniqueInput
    create: XOR<ArticuloPedidoCreateWithoutPedidoInput, ArticuloPedidoUncheckedCreateWithoutPedidoInput>
  }

  export type ArticuloPedidoCreateManyPedidoInputEnvelope = {
    data: ArticuloPedidoCreateManyPedidoInput | ArticuloPedidoCreateManyPedidoInput[]
    skipDuplicates?: boolean
  }

  export type ClienteUpsertWithoutPedidoInput = {
    update: XOR<ClienteUpdateWithoutPedidoInput, ClienteUncheckedUpdateWithoutPedidoInput>
    create: XOR<ClienteCreateWithoutPedidoInput, ClienteUncheckedCreateWithoutPedidoInput>
    where?: ClienteWhereInput
  }

  export type ClienteUpdateToOneWithWhereWithoutPedidoInput = {
    where?: ClienteWhereInput
    data: XOR<ClienteUpdateWithoutPedidoInput, ClienteUncheckedUpdateWithoutPedidoInput>
  }

  export type ClienteUpdateWithoutPedidoInput = {
    nombreCliente?: StringFieldUpdateOperationsInput | string
    dni?: IntFieldUpdateOperationsInput | number
    telefono?: IntFieldUpdateOperationsInput | number
    fechaHoraBajaCliente?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    codListaFavorito?: NullableIntFieldUpdateOperationsInput | number | null
    direccion?: DireccionUpdateManyWithoutClienteDirNestedInput
    usuario?: UsuarioUpdateOneRequiredWithoutClienteNestedInput
    medioPago?: MedioPagoUpdateManyWithoutClientesNestedInput
    listaFav?: ListaFavoritoUpdateOneWithoutClienteNestedInput
  }

  export type ClienteUncheckedUpdateWithoutPedidoInput = {
    codCliente?: IntFieldUpdateOperationsInput | number
    nombreCliente?: StringFieldUpdateOperationsInput | string
    dni?: IntFieldUpdateOperationsInput | number
    telefono?: IntFieldUpdateOperationsInput | number
    fechaHoraBajaCliente?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    codUsuario?: IntFieldUpdateOperationsInput | number
    codListaFavorito?: NullableIntFieldUpdateOperationsInput | number | null
    direccion?: DireccionUncheckedUpdateManyWithoutClienteDirNestedInput
    medioPago?: MedioPagoUncheckedUpdateManyWithoutClientesNestedInput
    listaFav?: ListaFavoritoUncheckedUpdateOneWithoutClienteNestedInput
  }

  export type CarritoComprasUpsertWithoutPedidoInput = {
    update: XOR<CarritoComprasUpdateWithoutPedidoInput, CarritoComprasUncheckedUpdateWithoutPedidoInput>
    create: XOR<CarritoComprasCreateWithoutPedidoInput, CarritoComprasUncheckedCreateWithoutPedidoInput>
    where?: CarritoComprasWhereInput
  }

  export type CarritoComprasUpdateToOneWithWhereWithoutPedidoInput = {
    where?: CarritoComprasWhereInput
    data: XOR<CarritoComprasUpdateWithoutPedidoInput, CarritoComprasUncheckedUpdateWithoutPedidoInput>
  }

  export type CarritoComprasUpdateWithoutPedidoInput = {
    montoCarritoCompra?: FloatFieldUpdateOperationsInput | number
    codPedido?: IntFieldUpdateOperationsInput | number
    articuloPedido?: ArticuloPedidoUpdateManyWithoutCarritoCompraNestedInput
  }

  export type CarritoComprasUncheckedUpdateWithoutPedidoInput = {
    codCarritoCompra?: IntFieldUpdateOperationsInput | number
    montoCarritoCompra?: FloatFieldUpdateOperationsInput | number
    codPedido?: IntFieldUpdateOperationsInput | number
    articuloPedido?: ArticuloPedidoUncheckedUpdateManyWithoutCarritoCompraNestedInput
  }

  export type EstadoPedidoUpsertWithoutPedidosInput = {
    update: XOR<EstadoPedidoUpdateWithoutPedidosInput, EstadoPedidoUncheckedUpdateWithoutPedidosInput>
    create: XOR<EstadoPedidoCreateWithoutPedidosInput, EstadoPedidoUncheckedCreateWithoutPedidosInput>
    where?: EstadoPedidoWhereInput
  }

  export type EstadoPedidoUpdateToOneWithWhereWithoutPedidosInput = {
    where?: EstadoPedidoWhereInput
    data: XOR<EstadoPedidoUpdateWithoutPedidosInput, EstadoPedidoUncheckedUpdateWithoutPedidosInput>
  }

  export type EstadoPedidoUpdateWithoutPedidosInput = {
    nombreEstadoPedido?: StringFieldUpdateOperationsInput | string
    fechaHoraBajaEP?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type EstadoPedidoUncheckedUpdateWithoutPedidosInput = {
    codEstadoPedido?: IntFieldUpdateOperationsInput | number
    nombreEstadoPedido?: StringFieldUpdateOperationsInput | string
    fechaHoraBajaEP?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ArticuloPedidoUpsertWithWhereUniqueWithoutPedidoInput = {
    where: ArticuloPedidoWhereUniqueInput
    update: XOR<ArticuloPedidoUpdateWithoutPedidoInput, ArticuloPedidoUncheckedUpdateWithoutPedidoInput>
    create: XOR<ArticuloPedidoCreateWithoutPedidoInput, ArticuloPedidoUncheckedCreateWithoutPedidoInput>
  }

  export type ArticuloPedidoUpdateWithWhereUniqueWithoutPedidoInput = {
    where: ArticuloPedidoWhereUniqueInput
    data: XOR<ArticuloPedidoUpdateWithoutPedidoInput, ArticuloPedidoUncheckedUpdateWithoutPedidoInput>
  }

  export type ArticuloPedidoUpdateManyWithWhereWithoutPedidoInput = {
    where: ArticuloPedidoScalarWhereInput
    data: XOR<ArticuloPedidoUpdateManyMutationInput, ArticuloPedidoUncheckedUpdateManyWithoutPedidoInput>
  }

  export type ArticuloPedidoScalarWhereInput = {
    AND?: ArticuloPedidoScalarWhereInput | ArticuloPedidoScalarWhereInput[]
    OR?: ArticuloPedidoScalarWhereInput[]
    NOT?: ArticuloPedidoScalarWhereInput | ArticuloPedidoScalarWhereInput[]
    cantidadArtPed?: IntFilter<"ArticuloPedido"> | number
    nroRenglon?: IntFilter<"ArticuloPedido"> | number
    montoArticuloPe?: FloatFilter<"ArticuloPedido"> | number
    PrecioUnitario?: FloatFilter<"ArticuloPedido"> | number
    codPedido?: IntFilter<"ArticuloPedido"> | number
    codCarritoCompra?: IntFilter<"ArticuloPedido"> | number
    codArticulo?: IntFilter<"ArticuloPedido"> | number
  }

  export type PedidoCreateWithoutEstadoPedidoInput = {
    impuestoSobreVenta: number
    envioGratuito: boolean
    montoTotal: number
    fechaAltaPedido?: Date | string
    cliente: ClienteCreateNestedOneWithoutPedidoInput
    carritoCompra: CarritoComprasCreateNestedOneWithoutPedidoInput
    articuloPedido?: ArticuloPedidoCreateNestedManyWithoutPedidoInput
  }

  export type PedidoUncheckedCreateWithoutEstadoPedidoInput = {
    codPedido?: number
    impuestoSobreVenta: number
    envioGratuito: boolean
    montoTotal: number
    fechaAltaPedido?: Date | string
    codCliente: number
    codCarritoCompra: number
    articuloPedido?: ArticuloPedidoUncheckedCreateNestedManyWithoutPedidoInput
  }

  export type PedidoCreateOrConnectWithoutEstadoPedidoInput = {
    where: PedidoWhereUniqueInput
    create: XOR<PedidoCreateWithoutEstadoPedidoInput, PedidoUncheckedCreateWithoutEstadoPedidoInput>
  }

  export type PedidoCreateManyEstadoPedidoInputEnvelope = {
    data: PedidoCreateManyEstadoPedidoInput | PedidoCreateManyEstadoPedidoInput[]
    skipDuplicates?: boolean
  }

  export type PedidoUpsertWithWhereUniqueWithoutEstadoPedidoInput = {
    where: PedidoWhereUniqueInput
    update: XOR<PedidoUpdateWithoutEstadoPedidoInput, PedidoUncheckedUpdateWithoutEstadoPedidoInput>
    create: XOR<PedidoCreateWithoutEstadoPedidoInput, PedidoUncheckedCreateWithoutEstadoPedidoInput>
  }

  export type PedidoUpdateWithWhereUniqueWithoutEstadoPedidoInput = {
    where: PedidoWhereUniqueInput
    data: XOR<PedidoUpdateWithoutEstadoPedidoInput, PedidoUncheckedUpdateWithoutEstadoPedidoInput>
  }

  export type PedidoUpdateManyWithWhereWithoutEstadoPedidoInput = {
    where: PedidoScalarWhereInput
    data: XOR<PedidoUpdateManyMutationInput, PedidoUncheckedUpdateManyWithoutEstadoPedidoInput>
  }

  export type PedidoCreateWithoutCarritoCompraInput = {
    impuestoSobreVenta: number
    envioGratuito: boolean
    montoTotal: number
    fechaAltaPedido?: Date | string
    cliente: ClienteCreateNestedOneWithoutPedidoInput
    estadoPedido: EstadoPedidoCreateNestedOneWithoutPedidosInput
    articuloPedido?: ArticuloPedidoCreateNestedManyWithoutPedidoInput
  }

  export type PedidoUncheckedCreateWithoutCarritoCompraInput = {
    codPedido?: number
    impuestoSobreVenta: number
    envioGratuito: boolean
    montoTotal: number
    fechaAltaPedido?: Date | string
    codCliente: number
    codEstadoPedido: number
    articuloPedido?: ArticuloPedidoUncheckedCreateNestedManyWithoutPedidoInput
  }

  export type PedidoCreateOrConnectWithoutCarritoCompraInput = {
    where: PedidoWhereUniqueInput
    create: XOR<PedidoCreateWithoutCarritoCompraInput, PedidoUncheckedCreateWithoutCarritoCompraInput>
  }

  export type ArticuloPedidoCreateWithoutCarritoCompraInput = {
    cantidadArtPed: number
    montoArticuloPe: number
    PrecioUnitario: number
    pedido: PedidoCreateNestedOneWithoutArticuloPedidoInput
    articulo: ArticuloCreateNestedOneWithoutArticuloPedidoInput
  }

  export type ArticuloPedidoUncheckedCreateWithoutCarritoCompraInput = {
    cantidadArtPed: number
    nroRenglon?: number
    montoArticuloPe: number
    PrecioUnitario: number
    codPedido: number
    codArticulo: number
  }

  export type ArticuloPedidoCreateOrConnectWithoutCarritoCompraInput = {
    where: ArticuloPedidoWhereUniqueInput
    create: XOR<ArticuloPedidoCreateWithoutCarritoCompraInput, ArticuloPedidoUncheckedCreateWithoutCarritoCompraInput>
  }

  export type ArticuloPedidoCreateManyCarritoCompraInputEnvelope = {
    data: ArticuloPedidoCreateManyCarritoCompraInput | ArticuloPedidoCreateManyCarritoCompraInput[]
    skipDuplicates?: boolean
  }

  export type PedidoUpsertWithoutCarritoCompraInput = {
    update: XOR<PedidoUpdateWithoutCarritoCompraInput, PedidoUncheckedUpdateWithoutCarritoCompraInput>
    create: XOR<PedidoCreateWithoutCarritoCompraInput, PedidoUncheckedCreateWithoutCarritoCompraInput>
    where?: PedidoWhereInput
  }

  export type PedidoUpdateToOneWithWhereWithoutCarritoCompraInput = {
    where?: PedidoWhereInput
    data: XOR<PedidoUpdateWithoutCarritoCompraInput, PedidoUncheckedUpdateWithoutCarritoCompraInput>
  }

  export type PedidoUpdateWithoutCarritoCompraInput = {
    impuestoSobreVenta?: FloatFieldUpdateOperationsInput | number
    envioGratuito?: BoolFieldUpdateOperationsInput | boolean
    montoTotal?: FloatFieldUpdateOperationsInput | number
    fechaAltaPedido?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: ClienteUpdateOneRequiredWithoutPedidoNestedInput
    estadoPedido?: EstadoPedidoUpdateOneRequiredWithoutPedidosNestedInput
    articuloPedido?: ArticuloPedidoUpdateManyWithoutPedidoNestedInput
  }

  export type PedidoUncheckedUpdateWithoutCarritoCompraInput = {
    codPedido?: IntFieldUpdateOperationsInput | number
    impuestoSobreVenta?: FloatFieldUpdateOperationsInput | number
    envioGratuito?: BoolFieldUpdateOperationsInput | boolean
    montoTotal?: FloatFieldUpdateOperationsInput | number
    fechaAltaPedido?: DateTimeFieldUpdateOperationsInput | Date | string
    codCliente?: IntFieldUpdateOperationsInput | number
    codEstadoPedido?: IntFieldUpdateOperationsInput | number
    articuloPedido?: ArticuloPedidoUncheckedUpdateManyWithoutPedidoNestedInput
  }

  export type ArticuloPedidoUpsertWithWhereUniqueWithoutCarritoCompraInput = {
    where: ArticuloPedidoWhereUniqueInput
    update: XOR<ArticuloPedidoUpdateWithoutCarritoCompraInput, ArticuloPedidoUncheckedUpdateWithoutCarritoCompraInput>
    create: XOR<ArticuloPedidoCreateWithoutCarritoCompraInput, ArticuloPedidoUncheckedCreateWithoutCarritoCompraInput>
  }

  export type ArticuloPedidoUpdateWithWhereUniqueWithoutCarritoCompraInput = {
    where: ArticuloPedidoWhereUniqueInput
    data: XOR<ArticuloPedidoUpdateWithoutCarritoCompraInput, ArticuloPedidoUncheckedUpdateWithoutCarritoCompraInput>
  }

  export type ArticuloPedidoUpdateManyWithWhereWithoutCarritoCompraInput = {
    where: ArticuloPedidoScalarWhereInput
    data: XOR<ArticuloPedidoUpdateManyMutationInput, ArticuloPedidoUncheckedUpdateManyWithoutCarritoCompraInput>
  }

  export type ClienteCreateWithoutListaFavInput = {
    nombreCliente: string
    dni: number
    telefono: number
    fechaHoraBajaCliente?: Date | string | null
    codListaFavorito?: number | null
    direccion?: DireccionCreateNestedManyWithoutClienteDirInput
    usuario: UsuarioCreateNestedOneWithoutClienteInput
    medioPago?: MedioPagoCreateNestedManyWithoutClientesInput
    Pedido?: PedidoCreateNestedManyWithoutClienteInput
  }

  export type ClienteUncheckedCreateWithoutListaFavInput = {
    codCliente?: number
    nombreCliente: string
    dni: number
    telefono: number
    fechaHoraBajaCliente?: Date | string | null
    codUsuario: number
    codListaFavorito?: number | null
    direccion?: DireccionUncheckedCreateNestedManyWithoutClienteDirInput
    medioPago?: MedioPagoUncheckedCreateNestedManyWithoutClientesInput
    Pedido?: PedidoUncheckedCreateNestedManyWithoutClienteInput
  }

  export type ClienteCreateOrConnectWithoutListaFavInput = {
    where: ClienteWhereUniqueInput
    create: XOR<ClienteCreateWithoutListaFavInput, ClienteUncheckedCreateWithoutListaFavInput>
  }

  export type ArticuloCreateWithoutListaFavInput = {
    nombreArticulo: string
    descripcion: string
    stock: number
    precio: number
    codCategoria: number
    articuloPedido?: ArticuloPedidoCreateNestedManyWithoutArticuloInput
    categorias?: CategoriaCreateNestedManyWithoutArticulosInput
  }

  export type ArticuloUncheckedCreateWithoutListaFavInput = {
    codArticulo?: number
    nombreArticulo: string
    descripcion: string
    stock: number
    precio: number
    codCategoria: number
    articuloPedido?: ArticuloPedidoUncheckedCreateNestedManyWithoutArticuloInput
    categorias?: CategoriaUncheckedCreateNestedManyWithoutArticulosInput
  }

  export type ArticuloCreateOrConnectWithoutListaFavInput = {
    where: ArticuloWhereUniqueInput
    create: XOR<ArticuloCreateWithoutListaFavInput, ArticuloUncheckedCreateWithoutListaFavInput>
  }

  export type ClienteUpsertWithoutListaFavInput = {
    update: XOR<ClienteUpdateWithoutListaFavInput, ClienteUncheckedUpdateWithoutListaFavInput>
    create: XOR<ClienteCreateWithoutListaFavInput, ClienteUncheckedCreateWithoutListaFavInput>
    where?: ClienteWhereInput
  }

  export type ClienteUpdateToOneWithWhereWithoutListaFavInput = {
    where?: ClienteWhereInput
    data: XOR<ClienteUpdateWithoutListaFavInput, ClienteUncheckedUpdateWithoutListaFavInput>
  }

  export type ClienteUpdateWithoutListaFavInput = {
    nombreCliente?: StringFieldUpdateOperationsInput | string
    dni?: IntFieldUpdateOperationsInput | number
    telefono?: IntFieldUpdateOperationsInput | number
    fechaHoraBajaCliente?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    codListaFavorito?: NullableIntFieldUpdateOperationsInput | number | null
    direccion?: DireccionUpdateManyWithoutClienteDirNestedInput
    usuario?: UsuarioUpdateOneRequiredWithoutClienteNestedInput
    medioPago?: MedioPagoUpdateManyWithoutClientesNestedInput
    Pedido?: PedidoUpdateManyWithoutClienteNestedInput
  }

  export type ClienteUncheckedUpdateWithoutListaFavInput = {
    codCliente?: IntFieldUpdateOperationsInput | number
    nombreCliente?: StringFieldUpdateOperationsInput | string
    dni?: IntFieldUpdateOperationsInput | number
    telefono?: IntFieldUpdateOperationsInput | number
    fechaHoraBajaCliente?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    codUsuario?: IntFieldUpdateOperationsInput | number
    codListaFavorito?: NullableIntFieldUpdateOperationsInput | number | null
    direccion?: DireccionUncheckedUpdateManyWithoutClienteDirNestedInput
    medioPago?: MedioPagoUncheckedUpdateManyWithoutClientesNestedInput
    Pedido?: PedidoUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type ArticuloUpsertWithWhereUniqueWithoutListaFavInput = {
    where: ArticuloWhereUniqueInput
    update: XOR<ArticuloUpdateWithoutListaFavInput, ArticuloUncheckedUpdateWithoutListaFavInput>
    create: XOR<ArticuloCreateWithoutListaFavInput, ArticuloUncheckedCreateWithoutListaFavInput>
  }

  export type ArticuloUpdateWithWhereUniqueWithoutListaFavInput = {
    where: ArticuloWhereUniqueInput
    data: XOR<ArticuloUpdateWithoutListaFavInput, ArticuloUncheckedUpdateWithoutListaFavInput>
  }

  export type ArticuloUpdateManyWithWhereWithoutListaFavInput = {
    where: ArticuloScalarWhereInput
    data: XOR<ArticuloUpdateManyMutationInput, ArticuloUncheckedUpdateManyWithoutListaFavInput>
  }

  export type ArticuloScalarWhereInput = {
    AND?: ArticuloScalarWhereInput | ArticuloScalarWhereInput[]
    OR?: ArticuloScalarWhereInput[]
    NOT?: ArticuloScalarWhereInput | ArticuloScalarWhereInput[]
    codArticulo?: IntFilter<"Articulo"> | number
    nombreArticulo?: StringFilter<"Articulo"> | string
    descripcion?: StringFilter<"Articulo"> | string
    stock?: IntFilter<"Articulo"> | number
    precio?: FloatFilter<"Articulo"> | number
    codCategoria?: IntFilter<"Articulo"> | number
  }

  export type ArticuloPedidoCreateWithoutArticuloInput = {
    cantidadArtPed: number
    montoArticuloPe: number
    PrecioUnitario: number
    pedido: PedidoCreateNestedOneWithoutArticuloPedidoInput
    carritoCompra: CarritoComprasCreateNestedOneWithoutArticuloPedidoInput
  }

  export type ArticuloPedidoUncheckedCreateWithoutArticuloInput = {
    cantidadArtPed: number
    nroRenglon?: number
    montoArticuloPe: number
    PrecioUnitario: number
    codPedido: number
    codCarritoCompra: number
  }

  export type ArticuloPedidoCreateOrConnectWithoutArticuloInput = {
    where: ArticuloPedidoWhereUniqueInput
    create: XOR<ArticuloPedidoCreateWithoutArticuloInput, ArticuloPedidoUncheckedCreateWithoutArticuloInput>
  }

  export type ArticuloPedidoCreateManyArticuloInputEnvelope = {
    data: ArticuloPedidoCreateManyArticuloInput | ArticuloPedidoCreateManyArticuloInput[]
    skipDuplicates?: boolean
  }

  export type ListaFavoritoCreateWithoutArticuloInput = {
    nombreListaFavorito: string
    cliente: ClienteCreateNestedOneWithoutListaFavInput
  }

  export type ListaFavoritoUncheckedCreateWithoutArticuloInput = {
    codListaFavorito?: number
    nombreListaFavorito: string
    codCliente: number
  }

  export type ListaFavoritoCreateOrConnectWithoutArticuloInput = {
    where: ListaFavoritoWhereUniqueInput
    create: XOR<ListaFavoritoCreateWithoutArticuloInput, ListaFavoritoUncheckedCreateWithoutArticuloInput>
  }

  export type CategoriaCreateWithoutArticulosInput = {
    nombreCategoria: string
    descripcion: string
    fechaBajaCategoria?: Date | string | null
  }

  export type CategoriaUncheckedCreateWithoutArticulosInput = {
    codCategoria?: number
    nombreCategoria: string
    descripcion: string
    fechaBajaCategoria?: Date | string | null
  }

  export type CategoriaCreateOrConnectWithoutArticulosInput = {
    where: CategoriaWhereUniqueInput
    create: XOR<CategoriaCreateWithoutArticulosInput, CategoriaUncheckedCreateWithoutArticulosInput>
  }

  export type ArticuloPedidoUpsertWithWhereUniqueWithoutArticuloInput = {
    where: ArticuloPedidoWhereUniqueInput
    update: XOR<ArticuloPedidoUpdateWithoutArticuloInput, ArticuloPedidoUncheckedUpdateWithoutArticuloInput>
    create: XOR<ArticuloPedidoCreateWithoutArticuloInput, ArticuloPedidoUncheckedCreateWithoutArticuloInput>
  }

  export type ArticuloPedidoUpdateWithWhereUniqueWithoutArticuloInput = {
    where: ArticuloPedidoWhereUniqueInput
    data: XOR<ArticuloPedidoUpdateWithoutArticuloInput, ArticuloPedidoUncheckedUpdateWithoutArticuloInput>
  }

  export type ArticuloPedidoUpdateManyWithWhereWithoutArticuloInput = {
    where: ArticuloPedidoScalarWhereInput
    data: XOR<ArticuloPedidoUpdateManyMutationInput, ArticuloPedidoUncheckedUpdateManyWithoutArticuloInput>
  }

  export type ListaFavoritoUpsertWithWhereUniqueWithoutArticuloInput = {
    where: ListaFavoritoWhereUniqueInput
    update: XOR<ListaFavoritoUpdateWithoutArticuloInput, ListaFavoritoUncheckedUpdateWithoutArticuloInput>
    create: XOR<ListaFavoritoCreateWithoutArticuloInput, ListaFavoritoUncheckedCreateWithoutArticuloInput>
  }

  export type ListaFavoritoUpdateWithWhereUniqueWithoutArticuloInput = {
    where: ListaFavoritoWhereUniqueInput
    data: XOR<ListaFavoritoUpdateWithoutArticuloInput, ListaFavoritoUncheckedUpdateWithoutArticuloInput>
  }

  export type ListaFavoritoUpdateManyWithWhereWithoutArticuloInput = {
    where: ListaFavoritoScalarWhereInput
    data: XOR<ListaFavoritoUpdateManyMutationInput, ListaFavoritoUncheckedUpdateManyWithoutArticuloInput>
  }

  export type ListaFavoritoScalarWhereInput = {
    AND?: ListaFavoritoScalarWhereInput | ListaFavoritoScalarWhereInput[]
    OR?: ListaFavoritoScalarWhereInput[]
    NOT?: ListaFavoritoScalarWhereInput | ListaFavoritoScalarWhereInput[]
    codListaFavorito?: IntFilter<"ListaFavorito"> | number
    nombreListaFavorito?: StringFilter<"ListaFavorito"> | string
    codCliente?: IntFilter<"ListaFavorito"> | number
  }

  export type CategoriaUpsertWithWhereUniqueWithoutArticulosInput = {
    where: CategoriaWhereUniqueInput
    update: XOR<CategoriaUpdateWithoutArticulosInput, CategoriaUncheckedUpdateWithoutArticulosInput>
    create: XOR<CategoriaCreateWithoutArticulosInput, CategoriaUncheckedCreateWithoutArticulosInput>
  }

  export type CategoriaUpdateWithWhereUniqueWithoutArticulosInput = {
    where: CategoriaWhereUniqueInput
    data: XOR<CategoriaUpdateWithoutArticulosInput, CategoriaUncheckedUpdateWithoutArticulosInput>
  }

  export type CategoriaUpdateManyWithWhereWithoutArticulosInput = {
    where: CategoriaScalarWhereInput
    data: XOR<CategoriaUpdateManyMutationInput, CategoriaUncheckedUpdateManyWithoutArticulosInput>
  }

  export type CategoriaScalarWhereInput = {
    AND?: CategoriaScalarWhereInput | CategoriaScalarWhereInput[]
    OR?: CategoriaScalarWhereInput[]
    NOT?: CategoriaScalarWhereInput | CategoriaScalarWhereInput[]
    codCategoria?: IntFilter<"Categoria"> | number
    nombreCategoria?: StringFilter<"Categoria"> | string
    descripcion?: StringFilter<"Categoria"> | string
    fechaBajaCategoria?: DateTimeNullableFilter<"Categoria"> | Date | string | null
  }

  export type ArticuloCreateWithoutCategoriasInput = {
    nombreArticulo: string
    descripcion: string
    stock: number
    precio: number
    codCategoria: number
    articuloPedido?: ArticuloPedidoCreateNestedManyWithoutArticuloInput
    listaFav?: ListaFavoritoCreateNestedManyWithoutArticuloInput
  }

  export type ArticuloUncheckedCreateWithoutCategoriasInput = {
    codArticulo?: number
    nombreArticulo: string
    descripcion: string
    stock: number
    precio: number
    codCategoria: number
    articuloPedido?: ArticuloPedidoUncheckedCreateNestedManyWithoutArticuloInput
    listaFav?: ListaFavoritoUncheckedCreateNestedManyWithoutArticuloInput
  }

  export type ArticuloCreateOrConnectWithoutCategoriasInput = {
    where: ArticuloWhereUniqueInput
    create: XOR<ArticuloCreateWithoutCategoriasInput, ArticuloUncheckedCreateWithoutCategoriasInput>
  }

  export type ArticuloUpsertWithWhereUniqueWithoutCategoriasInput = {
    where: ArticuloWhereUniqueInput
    update: XOR<ArticuloUpdateWithoutCategoriasInput, ArticuloUncheckedUpdateWithoutCategoriasInput>
    create: XOR<ArticuloCreateWithoutCategoriasInput, ArticuloUncheckedCreateWithoutCategoriasInput>
  }

  export type ArticuloUpdateWithWhereUniqueWithoutCategoriasInput = {
    where: ArticuloWhereUniqueInput
    data: XOR<ArticuloUpdateWithoutCategoriasInput, ArticuloUncheckedUpdateWithoutCategoriasInput>
  }

  export type ArticuloUpdateManyWithWhereWithoutCategoriasInput = {
    where: ArticuloScalarWhereInput
    data: XOR<ArticuloUpdateManyMutationInput, ArticuloUncheckedUpdateManyWithoutCategoriasInput>
  }

  export type PedidoCreateWithoutArticuloPedidoInput = {
    impuestoSobreVenta: number
    envioGratuito: boolean
    montoTotal: number
    fechaAltaPedido?: Date | string
    cliente: ClienteCreateNestedOneWithoutPedidoInput
    carritoCompra: CarritoComprasCreateNestedOneWithoutPedidoInput
    estadoPedido: EstadoPedidoCreateNestedOneWithoutPedidosInput
  }

  export type PedidoUncheckedCreateWithoutArticuloPedidoInput = {
    codPedido?: number
    impuestoSobreVenta: number
    envioGratuito: boolean
    montoTotal: number
    fechaAltaPedido?: Date | string
    codCliente: number
    codCarritoCompra: number
    codEstadoPedido: number
  }

  export type PedidoCreateOrConnectWithoutArticuloPedidoInput = {
    where: PedidoWhereUniqueInput
    create: XOR<PedidoCreateWithoutArticuloPedidoInput, PedidoUncheckedCreateWithoutArticuloPedidoInput>
  }

  export type CarritoComprasCreateWithoutArticuloPedidoInput = {
    montoCarritoCompra: number
    codPedido: number
    pedido?: PedidoCreateNestedOneWithoutCarritoCompraInput
  }

  export type CarritoComprasUncheckedCreateWithoutArticuloPedidoInput = {
    codCarritoCompra?: number
    montoCarritoCompra: number
    codPedido: number
    pedido?: PedidoUncheckedCreateNestedOneWithoutCarritoCompraInput
  }

  export type CarritoComprasCreateOrConnectWithoutArticuloPedidoInput = {
    where: CarritoComprasWhereUniqueInput
    create: XOR<CarritoComprasCreateWithoutArticuloPedidoInput, CarritoComprasUncheckedCreateWithoutArticuloPedidoInput>
  }

  export type ArticuloCreateWithoutArticuloPedidoInput = {
    nombreArticulo: string
    descripcion: string
    stock: number
    precio: number
    codCategoria: number
    listaFav?: ListaFavoritoCreateNestedManyWithoutArticuloInput
    categorias?: CategoriaCreateNestedManyWithoutArticulosInput
  }

  export type ArticuloUncheckedCreateWithoutArticuloPedidoInput = {
    codArticulo?: number
    nombreArticulo: string
    descripcion: string
    stock: number
    precio: number
    codCategoria: number
    listaFav?: ListaFavoritoUncheckedCreateNestedManyWithoutArticuloInput
    categorias?: CategoriaUncheckedCreateNestedManyWithoutArticulosInput
  }

  export type ArticuloCreateOrConnectWithoutArticuloPedidoInput = {
    where: ArticuloWhereUniqueInput
    create: XOR<ArticuloCreateWithoutArticuloPedidoInput, ArticuloUncheckedCreateWithoutArticuloPedidoInput>
  }

  export type PedidoUpsertWithoutArticuloPedidoInput = {
    update: XOR<PedidoUpdateWithoutArticuloPedidoInput, PedidoUncheckedUpdateWithoutArticuloPedidoInput>
    create: XOR<PedidoCreateWithoutArticuloPedidoInput, PedidoUncheckedCreateWithoutArticuloPedidoInput>
    where?: PedidoWhereInput
  }

  export type PedidoUpdateToOneWithWhereWithoutArticuloPedidoInput = {
    where?: PedidoWhereInput
    data: XOR<PedidoUpdateWithoutArticuloPedidoInput, PedidoUncheckedUpdateWithoutArticuloPedidoInput>
  }

  export type PedidoUpdateWithoutArticuloPedidoInput = {
    impuestoSobreVenta?: FloatFieldUpdateOperationsInput | number
    envioGratuito?: BoolFieldUpdateOperationsInput | boolean
    montoTotal?: FloatFieldUpdateOperationsInput | number
    fechaAltaPedido?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: ClienteUpdateOneRequiredWithoutPedidoNestedInput
    carritoCompra?: CarritoComprasUpdateOneRequiredWithoutPedidoNestedInput
    estadoPedido?: EstadoPedidoUpdateOneRequiredWithoutPedidosNestedInput
  }

  export type PedidoUncheckedUpdateWithoutArticuloPedidoInput = {
    codPedido?: IntFieldUpdateOperationsInput | number
    impuestoSobreVenta?: FloatFieldUpdateOperationsInput | number
    envioGratuito?: BoolFieldUpdateOperationsInput | boolean
    montoTotal?: FloatFieldUpdateOperationsInput | number
    fechaAltaPedido?: DateTimeFieldUpdateOperationsInput | Date | string
    codCliente?: IntFieldUpdateOperationsInput | number
    codCarritoCompra?: IntFieldUpdateOperationsInput | number
    codEstadoPedido?: IntFieldUpdateOperationsInput | number
  }

  export type CarritoComprasUpsertWithoutArticuloPedidoInput = {
    update: XOR<CarritoComprasUpdateWithoutArticuloPedidoInput, CarritoComprasUncheckedUpdateWithoutArticuloPedidoInput>
    create: XOR<CarritoComprasCreateWithoutArticuloPedidoInput, CarritoComprasUncheckedCreateWithoutArticuloPedidoInput>
    where?: CarritoComprasWhereInput
  }

  export type CarritoComprasUpdateToOneWithWhereWithoutArticuloPedidoInput = {
    where?: CarritoComprasWhereInput
    data: XOR<CarritoComprasUpdateWithoutArticuloPedidoInput, CarritoComprasUncheckedUpdateWithoutArticuloPedidoInput>
  }

  export type CarritoComprasUpdateWithoutArticuloPedidoInput = {
    montoCarritoCompra?: FloatFieldUpdateOperationsInput | number
    codPedido?: IntFieldUpdateOperationsInput | number
    pedido?: PedidoUpdateOneWithoutCarritoCompraNestedInput
  }

  export type CarritoComprasUncheckedUpdateWithoutArticuloPedidoInput = {
    codCarritoCompra?: IntFieldUpdateOperationsInput | number
    montoCarritoCompra?: FloatFieldUpdateOperationsInput | number
    codPedido?: IntFieldUpdateOperationsInput | number
    pedido?: PedidoUncheckedUpdateOneWithoutCarritoCompraNestedInput
  }

  export type ArticuloUpsertWithoutArticuloPedidoInput = {
    update: XOR<ArticuloUpdateWithoutArticuloPedidoInput, ArticuloUncheckedUpdateWithoutArticuloPedidoInput>
    create: XOR<ArticuloCreateWithoutArticuloPedidoInput, ArticuloUncheckedCreateWithoutArticuloPedidoInput>
    where?: ArticuloWhereInput
  }

  export type ArticuloUpdateToOneWithWhereWithoutArticuloPedidoInput = {
    where?: ArticuloWhereInput
    data: XOR<ArticuloUpdateWithoutArticuloPedidoInput, ArticuloUncheckedUpdateWithoutArticuloPedidoInput>
  }

  export type ArticuloUpdateWithoutArticuloPedidoInput = {
    nombreArticulo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    stock?: IntFieldUpdateOperationsInput | number
    precio?: FloatFieldUpdateOperationsInput | number
    codCategoria?: IntFieldUpdateOperationsInput | number
    listaFav?: ListaFavoritoUpdateManyWithoutArticuloNestedInput
    categorias?: CategoriaUpdateManyWithoutArticulosNestedInput
  }

  export type ArticuloUncheckedUpdateWithoutArticuloPedidoInput = {
    codArticulo?: IntFieldUpdateOperationsInput | number
    nombreArticulo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    stock?: IntFieldUpdateOperationsInput | number
    precio?: FloatFieldUpdateOperationsInput | number
    codCategoria?: IntFieldUpdateOperationsInput | number
    listaFav?: ListaFavoritoUncheckedUpdateManyWithoutArticuloNestedInput
    categorias?: CategoriaUncheckedUpdateManyWithoutArticulosNestedInput
  }

  export type EstadoEnvioCreateWithoutEnvioPedidoInput = {
    nombreEstadoEnvio: string
    fechaHoraBajaEE?: Date | string | null
  }

  export type EstadoEnvioUncheckedCreateWithoutEnvioPedidoInput = {
    codEstadoEnvio?: number
    nombreEstadoEnvio: string
    fechaHoraBajaEE?: Date | string | null
  }

  export type EstadoEnvioCreateOrConnectWithoutEnvioPedidoInput = {
    where: EstadoEnvioWhereUniqueInput
    create: XOR<EstadoEnvioCreateWithoutEnvioPedidoInput, EstadoEnvioUncheckedCreateWithoutEnvioPedidoInput>
  }

  export type DireccionCreateWithoutEnvioPedidoInput = {
    calle: string
    ciudad: string
    localidad: string
    pais: string
    codigoPostal: number
    clienteDir: ClienteCreateNestedOneWithoutDireccionInput
  }

  export type DireccionUncheckedCreateWithoutEnvioPedidoInput = {
    codigoDireccion?: number
    calle: string
    ciudad: string
    localidad: string
    pais: string
    codigoPostal: number
    codCliente: number
  }

  export type DireccionCreateOrConnectWithoutEnvioPedidoInput = {
    where: DireccionWhereUniqueInput
    create: XOR<DireccionCreateWithoutEnvioPedidoInput, DireccionUncheckedCreateWithoutEnvioPedidoInput>
  }

  export type EstadoEnvioUpsertWithoutEnvioPedidoInput = {
    update: XOR<EstadoEnvioUpdateWithoutEnvioPedidoInput, EstadoEnvioUncheckedUpdateWithoutEnvioPedidoInput>
    create: XOR<EstadoEnvioCreateWithoutEnvioPedidoInput, EstadoEnvioUncheckedCreateWithoutEnvioPedidoInput>
    where?: EstadoEnvioWhereInput
  }

  export type EstadoEnvioUpdateToOneWithWhereWithoutEnvioPedidoInput = {
    where?: EstadoEnvioWhereInput
    data: XOR<EstadoEnvioUpdateWithoutEnvioPedidoInput, EstadoEnvioUncheckedUpdateWithoutEnvioPedidoInput>
  }

  export type EstadoEnvioUpdateWithoutEnvioPedidoInput = {
    nombreEstadoEnvio?: StringFieldUpdateOperationsInput | string
    fechaHoraBajaEE?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type EstadoEnvioUncheckedUpdateWithoutEnvioPedidoInput = {
    codEstadoEnvio?: IntFieldUpdateOperationsInput | number
    nombreEstadoEnvio?: StringFieldUpdateOperationsInput | string
    fechaHoraBajaEE?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type DireccionUpsertWithoutEnvioPedidoInput = {
    update: XOR<DireccionUpdateWithoutEnvioPedidoInput, DireccionUncheckedUpdateWithoutEnvioPedidoInput>
    create: XOR<DireccionCreateWithoutEnvioPedidoInput, DireccionUncheckedCreateWithoutEnvioPedidoInput>
    where?: DireccionWhereInput
  }

  export type DireccionUpdateToOneWithWhereWithoutEnvioPedidoInput = {
    where?: DireccionWhereInput
    data: XOR<DireccionUpdateWithoutEnvioPedidoInput, DireccionUncheckedUpdateWithoutEnvioPedidoInput>
  }

  export type DireccionUpdateWithoutEnvioPedidoInput = {
    calle?: StringFieldUpdateOperationsInput | string
    ciudad?: StringFieldUpdateOperationsInput | string
    localidad?: StringFieldUpdateOperationsInput | string
    pais?: StringFieldUpdateOperationsInput | string
    codigoPostal?: IntFieldUpdateOperationsInput | number
    clienteDir?: ClienteUpdateOneRequiredWithoutDireccionNestedInput
  }

  export type DireccionUncheckedUpdateWithoutEnvioPedidoInput = {
    codigoDireccion?: IntFieldUpdateOperationsInput | number
    calle?: StringFieldUpdateOperationsInput | string
    ciudad?: StringFieldUpdateOperationsInput | string
    localidad?: StringFieldUpdateOperationsInput | string
    pais?: StringFieldUpdateOperationsInput | string
    codigoPostal?: IntFieldUpdateOperationsInput | number
    codCliente?: IntFieldUpdateOperationsInput | number
  }

  export type EnvioPedidoCreateWithoutEstadoEnvioInput = {
    empresaEnvio: string
    costoEnvio: number
    fechaSalida?: Date | string | null
    fechaEntregaEstimada: Date | string
    fechaEntregaBaja?: Date | string | null
    direccion: DireccionCreateNestedOneWithoutEnvioPedidoInput
  }

  export type EnvioPedidoUncheckedCreateWithoutEstadoEnvioInput = {
    codEnvio?: number
    empresaEnvio: string
    costoEnvio: number
    fechaSalida?: Date | string | null
    fechaEntregaEstimada: Date | string
    fechaEntregaBaja?: Date | string | null
    codigoDireccion: number
  }

  export type EnvioPedidoCreateOrConnectWithoutEstadoEnvioInput = {
    where: EnvioPedidoWhereUniqueInput
    create: XOR<EnvioPedidoCreateWithoutEstadoEnvioInput, EnvioPedidoUncheckedCreateWithoutEstadoEnvioInput>
  }

  export type EnvioPedidoCreateManyEstadoEnvioInputEnvelope = {
    data: EnvioPedidoCreateManyEstadoEnvioInput | EnvioPedidoCreateManyEstadoEnvioInput[]
    skipDuplicates?: boolean
  }

  export type EnvioPedidoUpsertWithWhereUniqueWithoutEstadoEnvioInput = {
    where: EnvioPedidoWhereUniqueInput
    update: XOR<EnvioPedidoUpdateWithoutEstadoEnvioInput, EnvioPedidoUncheckedUpdateWithoutEstadoEnvioInput>
    create: XOR<EnvioPedidoCreateWithoutEstadoEnvioInput, EnvioPedidoUncheckedCreateWithoutEstadoEnvioInput>
  }

  export type EnvioPedidoUpdateWithWhereUniqueWithoutEstadoEnvioInput = {
    where: EnvioPedidoWhereUniqueInput
    data: XOR<EnvioPedidoUpdateWithoutEstadoEnvioInput, EnvioPedidoUncheckedUpdateWithoutEstadoEnvioInput>
  }

  export type EnvioPedidoUpdateManyWithWhereWithoutEstadoEnvioInput = {
    where: EnvioPedidoScalarWhereInput
    data: XOR<EnvioPedidoUpdateManyMutationInput, EnvioPedidoUncheckedUpdateManyWithoutEstadoEnvioInput>
  }

  export type ClienteCreateWithoutMedioPagoInput = {
    nombreCliente: string
    dni: number
    telefono: number
    fechaHoraBajaCliente?: Date | string | null
    codListaFavorito?: number | null
    direccion?: DireccionCreateNestedManyWithoutClienteDirInput
    usuario: UsuarioCreateNestedOneWithoutClienteInput
    Pedido?: PedidoCreateNestedManyWithoutClienteInput
    listaFav?: ListaFavoritoCreateNestedOneWithoutClienteInput
  }

  export type ClienteUncheckedCreateWithoutMedioPagoInput = {
    codCliente?: number
    nombreCliente: string
    dni: number
    telefono: number
    fechaHoraBajaCliente?: Date | string | null
    codUsuario: number
    codListaFavorito?: number | null
    direccion?: DireccionUncheckedCreateNestedManyWithoutClienteDirInput
    Pedido?: PedidoUncheckedCreateNestedManyWithoutClienteInput
    listaFav?: ListaFavoritoUncheckedCreateNestedOneWithoutClienteInput
  }

  export type ClienteCreateOrConnectWithoutMedioPagoInput = {
    where: ClienteWhereUniqueInput
    create: XOR<ClienteCreateWithoutMedioPagoInput, ClienteUncheckedCreateWithoutMedioPagoInput>
  }

  export type PagoCreateWithoutMedioPagoInput = {
    nombreTipoMedioPago: string
    montoPagado: number
    transaccionId: number
    fechaHoraPago?: Date | string | null
    estadoPago: EstadoPagoCreateNestedOneWithoutPagosInput
  }

  export type PagoUncheckedCreateWithoutMedioPagoInput = {
    codPago?: number
    nombreTipoMedioPago: string
    montoPagado: number
    transaccionId: number
    fechaHoraPago?: Date | string | null
    codEstadoPago: number
  }

  export type PagoCreateOrConnectWithoutMedioPagoInput = {
    where: PagoWhereUniqueInput
    create: XOR<PagoCreateWithoutMedioPagoInput, PagoUncheckedCreateWithoutMedioPagoInput>
  }

  export type PagoCreateManyMedioPagoInputEnvelope = {
    data: PagoCreateManyMedioPagoInput | PagoCreateManyMedioPagoInput[]
    skipDuplicates?: boolean
  }

  export type ClienteUpsertWithWhereUniqueWithoutMedioPagoInput = {
    where: ClienteWhereUniqueInput
    update: XOR<ClienteUpdateWithoutMedioPagoInput, ClienteUncheckedUpdateWithoutMedioPagoInput>
    create: XOR<ClienteCreateWithoutMedioPagoInput, ClienteUncheckedCreateWithoutMedioPagoInput>
  }

  export type ClienteUpdateWithWhereUniqueWithoutMedioPagoInput = {
    where: ClienteWhereUniqueInput
    data: XOR<ClienteUpdateWithoutMedioPagoInput, ClienteUncheckedUpdateWithoutMedioPagoInput>
  }

  export type ClienteUpdateManyWithWhereWithoutMedioPagoInput = {
    where: ClienteScalarWhereInput
    data: XOR<ClienteUpdateManyMutationInput, ClienteUncheckedUpdateManyWithoutMedioPagoInput>
  }

  export type ClienteScalarWhereInput = {
    AND?: ClienteScalarWhereInput | ClienteScalarWhereInput[]
    OR?: ClienteScalarWhereInput[]
    NOT?: ClienteScalarWhereInput | ClienteScalarWhereInput[]
    codCliente?: IntFilter<"Cliente"> | number
    nombreCliente?: StringFilter<"Cliente"> | string
    dni?: IntFilter<"Cliente"> | number
    telefono?: IntFilter<"Cliente"> | number
    fechaHoraBajaCliente?: DateTimeNullableFilter<"Cliente"> | Date | string | null
    codUsuario?: IntFilter<"Cliente"> | number
    codListaFavorito?: IntNullableFilter<"Cliente"> | number | null
  }

  export type PagoUpsertWithWhereUniqueWithoutMedioPagoInput = {
    where: PagoWhereUniqueInput
    update: XOR<PagoUpdateWithoutMedioPagoInput, PagoUncheckedUpdateWithoutMedioPagoInput>
    create: XOR<PagoCreateWithoutMedioPagoInput, PagoUncheckedCreateWithoutMedioPagoInput>
  }

  export type PagoUpdateWithWhereUniqueWithoutMedioPagoInput = {
    where: PagoWhereUniqueInput
    data: XOR<PagoUpdateWithoutMedioPagoInput, PagoUncheckedUpdateWithoutMedioPagoInput>
  }

  export type PagoUpdateManyWithWhereWithoutMedioPagoInput = {
    where: PagoScalarWhereInput
    data: XOR<PagoUpdateManyMutationInput, PagoUncheckedUpdateManyWithoutMedioPagoInput>
  }

  export type PagoScalarWhereInput = {
    AND?: PagoScalarWhereInput | PagoScalarWhereInput[]
    OR?: PagoScalarWhereInput[]
    NOT?: PagoScalarWhereInput | PagoScalarWhereInput[]
    codPago?: IntFilter<"Pago"> | number
    nombreTipoMedioPago?: StringFilter<"Pago"> | string
    montoPagado?: FloatFilter<"Pago"> | number
    transaccionId?: IntFilter<"Pago"> | number
    fechaHoraPago?: DateTimeNullableFilter<"Pago"> | Date | string | null
    codMedioPago?: IntFilter<"Pago"> | number
    codEstadoPago?: IntFilter<"Pago"> | number
  }

  export type MedioPagoCreateWithoutPagoInput = {
    nombreTipoMedioPago: string
    fechaHoraBajaMedioPago?: Date | string | null
    clientes?: ClienteCreateNestedManyWithoutMedioPagoInput
  }

  export type MedioPagoUncheckedCreateWithoutPagoInput = {
    codMedioPago?: number
    nombreTipoMedioPago: string
    fechaHoraBajaMedioPago?: Date | string | null
    clientes?: ClienteUncheckedCreateNestedManyWithoutMedioPagoInput
  }

  export type MedioPagoCreateOrConnectWithoutPagoInput = {
    where: MedioPagoWhereUniqueInput
    create: XOR<MedioPagoCreateWithoutPagoInput, MedioPagoUncheckedCreateWithoutPagoInput>
  }

  export type EstadoPagoCreateWithoutPagosInput = {
    nombreEstadoPago: string
    fechaHoraBajaEP?: Date | string | null
  }

  export type EstadoPagoUncheckedCreateWithoutPagosInput = {
    codEstadoPago?: number
    nombreEstadoPago: string
    fechaHoraBajaEP?: Date | string | null
  }

  export type EstadoPagoCreateOrConnectWithoutPagosInput = {
    where: EstadoPagoWhereUniqueInput
    create: XOR<EstadoPagoCreateWithoutPagosInput, EstadoPagoUncheckedCreateWithoutPagosInput>
  }

  export type MedioPagoUpsertWithoutPagoInput = {
    update: XOR<MedioPagoUpdateWithoutPagoInput, MedioPagoUncheckedUpdateWithoutPagoInput>
    create: XOR<MedioPagoCreateWithoutPagoInput, MedioPagoUncheckedCreateWithoutPagoInput>
    where?: MedioPagoWhereInput
  }

  export type MedioPagoUpdateToOneWithWhereWithoutPagoInput = {
    where?: MedioPagoWhereInput
    data: XOR<MedioPagoUpdateWithoutPagoInput, MedioPagoUncheckedUpdateWithoutPagoInput>
  }

  export type MedioPagoUpdateWithoutPagoInput = {
    nombreTipoMedioPago?: StringFieldUpdateOperationsInput | string
    fechaHoraBajaMedioPago?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientes?: ClienteUpdateManyWithoutMedioPagoNestedInput
  }

  export type MedioPagoUncheckedUpdateWithoutPagoInput = {
    codMedioPago?: IntFieldUpdateOperationsInput | number
    nombreTipoMedioPago?: StringFieldUpdateOperationsInput | string
    fechaHoraBajaMedioPago?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientes?: ClienteUncheckedUpdateManyWithoutMedioPagoNestedInput
  }

  export type EstadoPagoUpsertWithoutPagosInput = {
    update: XOR<EstadoPagoUpdateWithoutPagosInput, EstadoPagoUncheckedUpdateWithoutPagosInput>
    create: XOR<EstadoPagoCreateWithoutPagosInput, EstadoPagoUncheckedCreateWithoutPagosInput>
    where?: EstadoPagoWhereInput
  }

  export type EstadoPagoUpdateToOneWithWhereWithoutPagosInput = {
    where?: EstadoPagoWhereInput
    data: XOR<EstadoPagoUpdateWithoutPagosInput, EstadoPagoUncheckedUpdateWithoutPagosInput>
  }

  export type EstadoPagoUpdateWithoutPagosInput = {
    nombreEstadoPago?: StringFieldUpdateOperationsInput | string
    fechaHoraBajaEP?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type EstadoPagoUncheckedUpdateWithoutPagosInput = {
    codEstadoPago?: IntFieldUpdateOperationsInput | number
    nombreEstadoPago?: StringFieldUpdateOperationsInput | string
    fechaHoraBajaEP?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PagoCreateWithoutEstadoPagoInput = {
    nombreTipoMedioPago: string
    montoPagado: number
    transaccionId: number
    fechaHoraPago?: Date | string | null
    medioPago: MedioPagoCreateNestedOneWithoutPagoInput
  }

  export type PagoUncheckedCreateWithoutEstadoPagoInput = {
    codPago?: number
    nombreTipoMedioPago: string
    montoPagado: number
    transaccionId: number
    fechaHoraPago?: Date | string | null
    codMedioPago: number
  }

  export type PagoCreateOrConnectWithoutEstadoPagoInput = {
    where: PagoWhereUniqueInput
    create: XOR<PagoCreateWithoutEstadoPagoInput, PagoUncheckedCreateWithoutEstadoPagoInput>
  }

  export type PagoCreateManyEstadoPagoInputEnvelope = {
    data: PagoCreateManyEstadoPagoInput | PagoCreateManyEstadoPagoInput[]
    skipDuplicates?: boolean
  }

  export type PagoUpsertWithWhereUniqueWithoutEstadoPagoInput = {
    where: PagoWhereUniqueInput
    update: XOR<PagoUpdateWithoutEstadoPagoInput, PagoUncheckedUpdateWithoutEstadoPagoInput>
    create: XOR<PagoCreateWithoutEstadoPagoInput, PagoUncheckedCreateWithoutEstadoPagoInput>
  }

  export type PagoUpdateWithWhereUniqueWithoutEstadoPagoInput = {
    where: PagoWhereUniqueInput
    data: XOR<PagoUpdateWithoutEstadoPagoInput, PagoUncheckedUpdateWithoutEstadoPagoInput>
  }

  export type PagoUpdateManyWithWhereWithoutEstadoPagoInput = {
    where: PagoScalarWhereInput
    data: XOR<PagoUpdateManyMutationInput, PagoUncheckedUpdateManyWithoutEstadoPagoInput>
  }

  export type DireccionCreateManyClienteDirInput = {
    codigoDireccion?: number
    calle: string
    ciudad: string
    localidad: string
    pais: string
    codigoPostal: number
  }

  export type PedidoCreateManyClienteInput = {
    codPedido?: number
    impuestoSobreVenta: number
    envioGratuito: boolean
    montoTotal: number
    fechaAltaPedido?: Date | string
    codCarritoCompra: number
    codEstadoPedido: number
  }

  export type DireccionUpdateWithoutClienteDirInput = {
    calle?: StringFieldUpdateOperationsInput | string
    ciudad?: StringFieldUpdateOperationsInput | string
    localidad?: StringFieldUpdateOperationsInput | string
    pais?: StringFieldUpdateOperationsInput | string
    codigoPostal?: IntFieldUpdateOperationsInput | number
    envioPedido?: EnvioPedidoUpdateManyWithoutDireccionNestedInput
  }

  export type DireccionUncheckedUpdateWithoutClienteDirInput = {
    codigoDireccion?: IntFieldUpdateOperationsInput | number
    calle?: StringFieldUpdateOperationsInput | string
    ciudad?: StringFieldUpdateOperationsInput | string
    localidad?: StringFieldUpdateOperationsInput | string
    pais?: StringFieldUpdateOperationsInput | string
    codigoPostal?: IntFieldUpdateOperationsInput | number
    envioPedido?: EnvioPedidoUncheckedUpdateManyWithoutDireccionNestedInput
  }

  export type DireccionUncheckedUpdateManyWithoutClienteDirInput = {
    codigoDireccion?: IntFieldUpdateOperationsInput | number
    calle?: StringFieldUpdateOperationsInput | string
    ciudad?: StringFieldUpdateOperationsInput | string
    localidad?: StringFieldUpdateOperationsInput | string
    pais?: StringFieldUpdateOperationsInput | string
    codigoPostal?: IntFieldUpdateOperationsInput | number
  }

  export type MedioPagoUpdateWithoutClientesInput = {
    nombreTipoMedioPago?: StringFieldUpdateOperationsInput | string
    fechaHoraBajaMedioPago?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Pago?: PagoUpdateManyWithoutMedioPagoNestedInput
  }

  export type MedioPagoUncheckedUpdateWithoutClientesInput = {
    codMedioPago?: IntFieldUpdateOperationsInput | number
    nombreTipoMedioPago?: StringFieldUpdateOperationsInput | string
    fechaHoraBajaMedioPago?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Pago?: PagoUncheckedUpdateManyWithoutMedioPagoNestedInput
  }

  export type MedioPagoUncheckedUpdateManyWithoutClientesInput = {
    codMedioPago?: IntFieldUpdateOperationsInput | number
    nombreTipoMedioPago?: StringFieldUpdateOperationsInput | string
    fechaHoraBajaMedioPago?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PedidoUpdateWithoutClienteInput = {
    impuestoSobreVenta?: FloatFieldUpdateOperationsInput | number
    envioGratuito?: BoolFieldUpdateOperationsInput | boolean
    montoTotal?: FloatFieldUpdateOperationsInput | number
    fechaAltaPedido?: DateTimeFieldUpdateOperationsInput | Date | string
    carritoCompra?: CarritoComprasUpdateOneRequiredWithoutPedidoNestedInput
    estadoPedido?: EstadoPedidoUpdateOneRequiredWithoutPedidosNestedInput
    articuloPedido?: ArticuloPedidoUpdateManyWithoutPedidoNestedInput
  }

  export type PedidoUncheckedUpdateWithoutClienteInput = {
    codPedido?: IntFieldUpdateOperationsInput | number
    impuestoSobreVenta?: FloatFieldUpdateOperationsInput | number
    envioGratuito?: BoolFieldUpdateOperationsInput | boolean
    montoTotal?: FloatFieldUpdateOperationsInput | number
    fechaAltaPedido?: DateTimeFieldUpdateOperationsInput | Date | string
    codCarritoCompra?: IntFieldUpdateOperationsInput | number
    codEstadoPedido?: IntFieldUpdateOperationsInput | number
    articuloPedido?: ArticuloPedidoUncheckedUpdateManyWithoutPedidoNestedInput
  }

  export type PedidoUncheckedUpdateManyWithoutClienteInput = {
    codPedido?: IntFieldUpdateOperationsInput | number
    impuestoSobreVenta?: FloatFieldUpdateOperationsInput | number
    envioGratuito?: BoolFieldUpdateOperationsInput | boolean
    montoTotal?: FloatFieldUpdateOperationsInput | number
    fechaAltaPedido?: DateTimeFieldUpdateOperationsInput | Date | string
    codCarritoCompra?: IntFieldUpdateOperationsInput | number
    codEstadoPedido?: IntFieldUpdateOperationsInput | number
  }

  export type UsuarioCreateManyRolUsuarioInput = {
    codUsuario?: number
    nombreUsuario: string
    contraseñaUsuario: string
    emailUsuario: string
    fechaRegistroUsuario?: Date | string
  }

  export type UsuarioUpdateWithoutRolUsuarioInput = {
    nombreUsuario?: StringFieldUpdateOperationsInput | string
    contraseñaUsuario?: StringFieldUpdateOperationsInput | string
    emailUsuario?: StringFieldUpdateOperationsInput | string
    fechaRegistroUsuario?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: ClienteUpdateOneWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutRolUsuarioInput = {
    codUsuario?: IntFieldUpdateOperationsInput | number
    nombreUsuario?: StringFieldUpdateOperationsInput | string
    contraseñaUsuario?: StringFieldUpdateOperationsInput | string
    emailUsuario?: StringFieldUpdateOperationsInput | string
    fechaRegistroUsuario?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: ClienteUncheckedUpdateOneWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateManyWithoutRolUsuarioInput = {
    codUsuario?: IntFieldUpdateOperationsInput | number
    nombreUsuario?: StringFieldUpdateOperationsInput | string
    contraseñaUsuario?: StringFieldUpdateOperationsInput | string
    emailUsuario?: StringFieldUpdateOperationsInput | string
    fechaRegistroUsuario?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EnvioPedidoCreateManyDireccionInput = {
    codEnvio?: number
    empresaEnvio: string
    costoEnvio: number
    fechaSalida?: Date | string | null
    fechaEntregaEstimada: Date | string
    fechaEntregaBaja?: Date | string | null
    codEstadoEnvio: number
  }

  export type EnvioPedidoUpdateWithoutDireccionInput = {
    empresaEnvio?: StringFieldUpdateOperationsInput | string
    costoEnvio?: FloatFieldUpdateOperationsInput | number
    fechaSalida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaEntregaEstimada?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaEntregaBaja?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estadoEnvio?: EstadoEnvioUpdateOneRequiredWithoutEnvioPedidoNestedInput
  }

  export type EnvioPedidoUncheckedUpdateWithoutDireccionInput = {
    codEnvio?: IntFieldUpdateOperationsInput | number
    empresaEnvio?: StringFieldUpdateOperationsInput | string
    costoEnvio?: FloatFieldUpdateOperationsInput | number
    fechaSalida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaEntregaEstimada?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaEntregaBaja?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    codEstadoEnvio?: IntFieldUpdateOperationsInput | number
  }

  export type EnvioPedidoUncheckedUpdateManyWithoutDireccionInput = {
    codEnvio?: IntFieldUpdateOperationsInput | number
    empresaEnvio?: StringFieldUpdateOperationsInput | string
    costoEnvio?: FloatFieldUpdateOperationsInput | number
    fechaSalida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaEntregaEstimada?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaEntregaBaja?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    codEstadoEnvio?: IntFieldUpdateOperationsInput | number
  }

  export type ArticuloPedidoCreateManyPedidoInput = {
    cantidadArtPed: number
    nroRenglon?: number
    montoArticuloPe: number
    PrecioUnitario: number
    codCarritoCompra: number
    codArticulo: number
  }

  export type ArticuloPedidoUpdateWithoutPedidoInput = {
    cantidadArtPed?: IntFieldUpdateOperationsInput | number
    montoArticuloPe?: FloatFieldUpdateOperationsInput | number
    PrecioUnitario?: FloatFieldUpdateOperationsInput | number
    carritoCompra?: CarritoComprasUpdateOneRequiredWithoutArticuloPedidoNestedInput
    articulo?: ArticuloUpdateOneRequiredWithoutArticuloPedidoNestedInput
  }

  export type ArticuloPedidoUncheckedUpdateWithoutPedidoInput = {
    cantidadArtPed?: IntFieldUpdateOperationsInput | number
    nroRenglon?: IntFieldUpdateOperationsInput | number
    montoArticuloPe?: FloatFieldUpdateOperationsInput | number
    PrecioUnitario?: FloatFieldUpdateOperationsInput | number
    codCarritoCompra?: IntFieldUpdateOperationsInput | number
    codArticulo?: IntFieldUpdateOperationsInput | number
  }

  export type ArticuloPedidoUncheckedUpdateManyWithoutPedidoInput = {
    cantidadArtPed?: IntFieldUpdateOperationsInput | number
    nroRenglon?: IntFieldUpdateOperationsInput | number
    montoArticuloPe?: FloatFieldUpdateOperationsInput | number
    PrecioUnitario?: FloatFieldUpdateOperationsInput | number
    codCarritoCompra?: IntFieldUpdateOperationsInput | number
    codArticulo?: IntFieldUpdateOperationsInput | number
  }

  export type PedidoCreateManyEstadoPedidoInput = {
    codPedido?: number
    impuestoSobreVenta: number
    envioGratuito: boolean
    montoTotal: number
    fechaAltaPedido?: Date | string
    codCliente: number
    codCarritoCompra: number
  }

  export type PedidoUpdateWithoutEstadoPedidoInput = {
    impuestoSobreVenta?: FloatFieldUpdateOperationsInput | number
    envioGratuito?: BoolFieldUpdateOperationsInput | boolean
    montoTotal?: FloatFieldUpdateOperationsInput | number
    fechaAltaPedido?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: ClienteUpdateOneRequiredWithoutPedidoNestedInput
    carritoCompra?: CarritoComprasUpdateOneRequiredWithoutPedidoNestedInput
    articuloPedido?: ArticuloPedidoUpdateManyWithoutPedidoNestedInput
  }

  export type PedidoUncheckedUpdateWithoutEstadoPedidoInput = {
    codPedido?: IntFieldUpdateOperationsInput | number
    impuestoSobreVenta?: FloatFieldUpdateOperationsInput | number
    envioGratuito?: BoolFieldUpdateOperationsInput | boolean
    montoTotal?: FloatFieldUpdateOperationsInput | number
    fechaAltaPedido?: DateTimeFieldUpdateOperationsInput | Date | string
    codCliente?: IntFieldUpdateOperationsInput | number
    codCarritoCompra?: IntFieldUpdateOperationsInput | number
    articuloPedido?: ArticuloPedidoUncheckedUpdateManyWithoutPedidoNestedInput
  }

  export type PedidoUncheckedUpdateManyWithoutEstadoPedidoInput = {
    codPedido?: IntFieldUpdateOperationsInput | number
    impuestoSobreVenta?: FloatFieldUpdateOperationsInput | number
    envioGratuito?: BoolFieldUpdateOperationsInput | boolean
    montoTotal?: FloatFieldUpdateOperationsInput | number
    fechaAltaPedido?: DateTimeFieldUpdateOperationsInput | Date | string
    codCliente?: IntFieldUpdateOperationsInput | number
    codCarritoCompra?: IntFieldUpdateOperationsInput | number
  }

  export type ArticuloPedidoCreateManyCarritoCompraInput = {
    cantidadArtPed: number
    nroRenglon?: number
    montoArticuloPe: number
    PrecioUnitario: number
    codPedido: number
    codArticulo: number
  }

  export type ArticuloPedidoUpdateWithoutCarritoCompraInput = {
    cantidadArtPed?: IntFieldUpdateOperationsInput | number
    montoArticuloPe?: FloatFieldUpdateOperationsInput | number
    PrecioUnitario?: FloatFieldUpdateOperationsInput | number
    pedido?: PedidoUpdateOneRequiredWithoutArticuloPedidoNestedInput
    articulo?: ArticuloUpdateOneRequiredWithoutArticuloPedidoNestedInput
  }

  export type ArticuloPedidoUncheckedUpdateWithoutCarritoCompraInput = {
    cantidadArtPed?: IntFieldUpdateOperationsInput | number
    nroRenglon?: IntFieldUpdateOperationsInput | number
    montoArticuloPe?: FloatFieldUpdateOperationsInput | number
    PrecioUnitario?: FloatFieldUpdateOperationsInput | number
    codPedido?: IntFieldUpdateOperationsInput | number
    codArticulo?: IntFieldUpdateOperationsInput | number
  }

  export type ArticuloPedidoUncheckedUpdateManyWithoutCarritoCompraInput = {
    cantidadArtPed?: IntFieldUpdateOperationsInput | number
    nroRenglon?: IntFieldUpdateOperationsInput | number
    montoArticuloPe?: FloatFieldUpdateOperationsInput | number
    PrecioUnitario?: FloatFieldUpdateOperationsInput | number
    codPedido?: IntFieldUpdateOperationsInput | number
    codArticulo?: IntFieldUpdateOperationsInput | number
  }

  export type ArticuloUpdateWithoutListaFavInput = {
    nombreArticulo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    stock?: IntFieldUpdateOperationsInput | number
    precio?: FloatFieldUpdateOperationsInput | number
    codCategoria?: IntFieldUpdateOperationsInput | number
    articuloPedido?: ArticuloPedidoUpdateManyWithoutArticuloNestedInput
    categorias?: CategoriaUpdateManyWithoutArticulosNestedInput
  }

  export type ArticuloUncheckedUpdateWithoutListaFavInput = {
    codArticulo?: IntFieldUpdateOperationsInput | number
    nombreArticulo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    stock?: IntFieldUpdateOperationsInput | number
    precio?: FloatFieldUpdateOperationsInput | number
    codCategoria?: IntFieldUpdateOperationsInput | number
    articuloPedido?: ArticuloPedidoUncheckedUpdateManyWithoutArticuloNestedInput
    categorias?: CategoriaUncheckedUpdateManyWithoutArticulosNestedInput
  }

  export type ArticuloUncheckedUpdateManyWithoutListaFavInput = {
    codArticulo?: IntFieldUpdateOperationsInput | number
    nombreArticulo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    stock?: IntFieldUpdateOperationsInput | number
    precio?: FloatFieldUpdateOperationsInput | number
    codCategoria?: IntFieldUpdateOperationsInput | number
  }

  export type ArticuloPedidoCreateManyArticuloInput = {
    cantidadArtPed: number
    nroRenglon?: number
    montoArticuloPe: number
    PrecioUnitario: number
    codPedido: number
    codCarritoCompra: number
  }

  export type ArticuloPedidoUpdateWithoutArticuloInput = {
    cantidadArtPed?: IntFieldUpdateOperationsInput | number
    montoArticuloPe?: FloatFieldUpdateOperationsInput | number
    PrecioUnitario?: FloatFieldUpdateOperationsInput | number
    pedido?: PedidoUpdateOneRequiredWithoutArticuloPedidoNestedInput
    carritoCompra?: CarritoComprasUpdateOneRequiredWithoutArticuloPedidoNestedInput
  }

  export type ArticuloPedidoUncheckedUpdateWithoutArticuloInput = {
    cantidadArtPed?: IntFieldUpdateOperationsInput | number
    nroRenglon?: IntFieldUpdateOperationsInput | number
    montoArticuloPe?: FloatFieldUpdateOperationsInput | number
    PrecioUnitario?: FloatFieldUpdateOperationsInput | number
    codPedido?: IntFieldUpdateOperationsInput | number
    codCarritoCompra?: IntFieldUpdateOperationsInput | number
  }

  export type ArticuloPedidoUncheckedUpdateManyWithoutArticuloInput = {
    cantidadArtPed?: IntFieldUpdateOperationsInput | number
    nroRenglon?: IntFieldUpdateOperationsInput | number
    montoArticuloPe?: FloatFieldUpdateOperationsInput | number
    PrecioUnitario?: FloatFieldUpdateOperationsInput | number
    codPedido?: IntFieldUpdateOperationsInput | number
    codCarritoCompra?: IntFieldUpdateOperationsInput | number
  }

  export type ListaFavoritoUpdateWithoutArticuloInput = {
    nombreListaFavorito?: StringFieldUpdateOperationsInput | string
    cliente?: ClienteUpdateOneRequiredWithoutListaFavNestedInput
  }

  export type ListaFavoritoUncheckedUpdateWithoutArticuloInput = {
    codListaFavorito?: IntFieldUpdateOperationsInput | number
    nombreListaFavorito?: StringFieldUpdateOperationsInput | string
    codCliente?: IntFieldUpdateOperationsInput | number
  }

  export type ListaFavoritoUncheckedUpdateManyWithoutArticuloInput = {
    codListaFavorito?: IntFieldUpdateOperationsInput | number
    nombreListaFavorito?: StringFieldUpdateOperationsInput | string
    codCliente?: IntFieldUpdateOperationsInput | number
  }

  export type CategoriaUpdateWithoutArticulosInput = {
    nombreCategoria?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fechaBajaCategoria?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CategoriaUncheckedUpdateWithoutArticulosInput = {
    codCategoria?: IntFieldUpdateOperationsInput | number
    nombreCategoria?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fechaBajaCategoria?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CategoriaUncheckedUpdateManyWithoutArticulosInput = {
    codCategoria?: IntFieldUpdateOperationsInput | number
    nombreCategoria?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fechaBajaCategoria?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ArticuloUpdateWithoutCategoriasInput = {
    nombreArticulo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    stock?: IntFieldUpdateOperationsInput | number
    precio?: FloatFieldUpdateOperationsInput | number
    codCategoria?: IntFieldUpdateOperationsInput | number
    articuloPedido?: ArticuloPedidoUpdateManyWithoutArticuloNestedInput
    listaFav?: ListaFavoritoUpdateManyWithoutArticuloNestedInput
  }

  export type ArticuloUncheckedUpdateWithoutCategoriasInput = {
    codArticulo?: IntFieldUpdateOperationsInput | number
    nombreArticulo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    stock?: IntFieldUpdateOperationsInput | number
    precio?: FloatFieldUpdateOperationsInput | number
    codCategoria?: IntFieldUpdateOperationsInput | number
    articuloPedido?: ArticuloPedidoUncheckedUpdateManyWithoutArticuloNestedInput
    listaFav?: ListaFavoritoUncheckedUpdateManyWithoutArticuloNestedInput
  }

  export type ArticuloUncheckedUpdateManyWithoutCategoriasInput = {
    codArticulo?: IntFieldUpdateOperationsInput | number
    nombreArticulo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    stock?: IntFieldUpdateOperationsInput | number
    precio?: FloatFieldUpdateOperationsInput | number
    codCategoria?: IntFieldUpdateOperationsInput | number
  }

  export type EnvioPedidoCreateManyEstadoEnvioInput = {
    codEnvio?: number
    empresaEnvio: string
    costoEnvio: number
    fechaSalida?: Date | string | null
    fechaEntregaEstimada: Date | string
    fechaEntregaBaja?: Date | string | null
    codigoDireccion: number
  }

  export type EnvioPedidoUpdateWithoutEstadoEnvioInput = {
    empresaEnvio?: StringFieldUpdateOperationsInput | string
    costoEnvio?: FloatFieldUpdateOperationsInput | number
    fechaSalida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaEntregaEstimada?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaEntregaBaja?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: DireccionUpdateOneRequiredWithoutEnvioPedidoNestedInput
  }

  export type EnvioPedidoUncheckedUpdateWithoutEstadoEnvioInput = {
    codEnvio?: IntFieldUpdateOperationsInput | number
    empresaEnvio?: StringFieldUpdateOperationsInput | string
    costoEnvio?: FloatFieldUpdateOperationsInput | number
    fechaSalida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaEntregaEstimada?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaEntregaBaja?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    codigoDireccion?: IntFieldUpdateOperationsInput | number
  }

  export type EnvioPedidoUncheckedUpdateManyWithoutEstadoEnvioInput = {
    codEnvio?: IntFieldUpdateOperationsInput | number
    empresaEnvio?: StringFieldUpdateOperationsInput | string
    costoEnvio?: FloatFieldUpdateOperationsInput | number
    fechaSalida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaEntregaEstimada?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaEntregaBaja?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    codigoDireccion?: IntFieldUpdateOperationsInput | number
  }

  export type PagoCreateManyMedioPagoInput = {
    codPago?: number
    nombreTipoMedioPago: string
    montoPagado: number
    transaccionId: number
    fechaHoraPago?: Date | string | null
    codEstadoPago: number
  }

  export type ClienteUpdateWithoutMedioPagoInput = {
    nombreCliente?: StringFieldUpdateOperationsInput | string
    dni?: IntFieldUpdateOperationsInput | number
    telefono?: IntFieldUpdateOperationsInput | number
    fechaHoraBajaCliente?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    codListaFavorito?: NullableIntFieldUpdateOperationsInput | number | null
    direccion?: DireccionUpdateManyWithoutClienteDirNestedInput
    usuario?: UsuarioUpdateOneRequiredWithoutClienteNestedInput
    Pedido?: PedidoUpdateManyWithoutClienteNestedInput
    listaFav?: ListaFavoritoUpdateOneWithoutClienteNestedInput
  }

  export type ClienteUncheckedUpdateWithoutMedioPagoInput = {
    codCliente?: IntFieldUpdateOperationsInput | number
    nombreCliente?: StringFieldUpdateOperationsInput | string
    dni?: IntFieldUpdateOperationsInput | number
    telefono?: IntFieldUpdateOperationsInput | number
    fechaHoraBajaCliente?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    codUsuario?: IntFieldUpdateOperationsInput | number
    codListaFavorito?: NullableIntFieldUpdateOperationsInput | number | null
    direccion?: DireccionUncheckedUpdateManyWithoutClienteDirNestedInput
    Pedido?: PedidoUncheckedUpdateManyWithoutClienteNestedInput
    listaFav?: ListaFavoritoUncheckedUpdateOneWithoutClienteNestedInput
  }

  export type ClienteUncheckedUpdateManyWithoutMedioPagoInput = {
    codCliente?: IntFieldUpdateOperationsInput | number
    nombreCliente?: StringFieldUpdateOperationsInput | string
    dni?: IntFieldUpdateOperationsInput | number
    telefono?: IntFieldUpdateOperationsInput | number
    fechaHoraBajaCliente?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    codUsuario?: IntFieldUpdateOperationsInput | number
    codListaFavorito?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PagoUpdateWithoutMedioPagoInput = {
    nombreTipoMedioPago?: StringFieldUpdateOperationsInput | string
    montoPagado?: FloatFieldUpdateOperationsInput | number
    transaccionId?: IntFieldUpdateOperationsInput | number
    fechaHoraPago?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estadoPago?: EstadoPagoUpdateOneRequiredWithoutPagosNestedInput
  }

  export type PagoUncheckedUpdateWithoutMedioPagoInput = {
    codPago?: IntFieldUpdateOperationsInput | number
    nombreTipoMedioPago?: StringFieldUpdateOperationsInput | string
    montoPagado?: FloatFieldUpdateOperationsInput | number
    transaccionId?: IntFieldUpdateOperationsInput | number
    fechaHoraPago?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    codEstadoPago?: IntFieldUpdateOperationsInput | number
  }

  export type PagoUncheckedUpdateManyWithoutMedioPagoInput = {
    codPago?: IntFieldUpdateOperationsInput | number
    nombreTipoMedioPago?: StringFieldUpdateOperationsInput | string
    montoPagado?: FloatFieldUpdateOperationsInput | number
    transaccionId?: IntFieldUpdateOperationsInput | number
    fechaHoraPago?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    codEstadoPago?: IntFieldUpdateOperationsInput | number
  }

  export type PagoCreateManyEstadoPagoInput = {
    codPago?: number
    nombreTipoMedioPago: string
    montoPagado: number
    transaccionId: number
    fechaHoraPago?: Date | string | null
    codMedioPago: number
  }

  export type PagoUpdateWithoutEstadoPagoInput = {
    nombreTipoMedioPago?: StringFieldUpdateOperationsInput | string
    montoPagado?: FloatFieldUpdateOperationsInput | number
    transaccionId?: IntFieldUpdateOperationsInput | number
    fechaHoraPago?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    medioPago?: MedioPagoUpdateOneRequiredWithoutPagoNestedInput
  }

  export type PagoUncheckedUpdateWithoutEstadoPagoInput = {
    codPago?: IntFieldUpdateOperationsInput | number
    nombreTipoMedioPago?: StringFieldUpdateOperationsInput | string
    montoPagado?: FloatFieldUpdateOperationsInput | number
    transaccionId?: IntFieldUpdateOperationsInput | number
    fechaHoraPago?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    codMedioPago?: IntFieldUpdateOperationsInput | number
  }

  export type PagoUncheckedUpdateManyWithoutEstadoPagoInput = {
    codPago?: IntFieldUpdateOperationsInput | number
    nombreTipoMedioPago?: StringFieldUpdateOperationsInput | string
    montoPagado?: FloatFieldUpdateOperationsInput | number
    transaccionId?: IntFieldUpdateOperationsInput | number
    fechaHoraPago?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    codMedioPago?: IntFieldUpdateOperationsInput | number
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}