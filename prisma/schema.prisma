// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cliente {
  codCliente           Int              @id @default(autoincrement())
  nombreCliente        String
  dni                  Int
  telefono             String
  fechaHoraBajaCliente DateTime?
  direccion            Direccion[]   
  usuario              Usuario          @relation(fields: [codUsuario], references: [codUsuario])
  codUsuario           Int              @unique
  codTipoMedioPago     Int
  tipoMedioPago        TipoMedioPago @relation(fields:[codTipoMedioPago], references:[codTipoMedioPago])
  Pedido               Pedido[]
  listaFav             ListaFavorito[] 
  carritos             CarritoCompras[] // 1:N
}

model Usuario{
  codUsuario              Int @id @default(autoincrement())
  nombreUsuario           String
  contrase√±aUsuario       String
  emailUsuario            String  @unique
  fechaRegistroUsuario    DateTime @default(now())
  ultimoRegistroUsuario   DateTime?
  activo                  Boolean @default(true)
  verificado              Boolean @default(false)
  tokenVerificacion       String?
  fechaHoraBajaUsuario    DateTime?
  codRolUsuario           Int
  rolUsuario              RolUsuario @relation(fields: [codRolUsuario], references: [codRolUsuario])
  cliente                 Cliente?
   
}

model RolUsuario {
  codRolUsuario           Int @id @default(autoincrement())
  nombreRolUsuario        String @unique
  fechaHoraBajaRol        DateTime?
  permisoUsuario          String[]
  Usuarios                Usuario[]
}

model Direccion {
  codigoDireccion         Int @id @default(autoincrement())  
  calle                   String
  ciudad                  String
  localidad               String
  pais                    String
  codigoPostal            Int
  fechaHoraBajaDireccion  DateTime?
  codCliente              Int
  clienteDir              Cliente @relation(fields:[codCliente], references: [codCliente])
  envioPedido             EnvioPedido[]
}

model Pedido {
  codPedido               Int @id @default(autoincrement())
  impuestoSobreVenta      Float
  envioGratuito           Boolean
  montoTotal              Float
  fechaAltaPedido         DateTime @default(now())
  codCliente              Int
  codCarritoCompra        Int @unique
  codEstadoPedido         Int
  cliente                 Cliente @relation(fields: [codCliente], references: [codCliente])
  carritoCompra           CarritoCompras @relation(fields: [codCarritoCompra], references: [codCarritoCompra])
  estadoPedido            EstadoPedido @relation(fields:[codEstadoPedido], references: [codEstadoPedido])   
  articuloPedido          ArticuloPedido[]
}


model EstadoPedido {
  codEstadoPedido         Int @id @default(autoincrement())
  nombreEstadoPedido      String @unique
  fechaHoraBajaEP         DateTime?
  pedidos                 Pedido[]
}




model CarritoCompras {
  codCarritoCompra     Int              @id @default(autoincrement())
  montoCarritoCompra   Float
  codPedido            Int?             @unique
  pedido               Pedido?
  articuloPedido       ArticuloPedido[]
  codCliente           Int
  cliente              Cliente          @relation(fields: [codCliente], references: [codCliente])
  activo               Boolean          @default(true)
}


model ListaFavorito{
  codListaFavorito        Int @id @default(autoincrement())
  nombreListaFavorito     String
  codCliente              Int 
  cliente                 Cliente @relation(fields:[codCliente], references:[codCliente])
  listaFavoritoArticulo   ListaFavoritoArticulo[] 

}

model Articulo {
  codArticulo             Int @id @default(autoincrement())
  nombreArticulo          String
  descripcion             String
  stock                   Int
  precio                  Float
  fechaBajaArticulo       DateTime?
  articuloPedido          ArticuloPedido[]
  listaFavoritoArticulo   ListaFavoritoArticulo[] 
  categorias              Categoria[] @relation("ArticuloCategoria")

}

model ListaFavoritoArticulo {
  listaFavoritosId Int
  articuloId       Int
  listaFavorito    ListaFavorito  @relation(fields: [listaFavoritosId], references: [codListaFavorito])
  articulo         Articulo       @relation(fields: [articuloId], references: [codArticulo])

  @@id([listaFavoritosId, articuloId])
}

model Categoria{
  codCategoria            Int @id @default(autoincrement())
  nombreCategoria         String
  descripcion             String
  fechaBajaCategoria      DateTime?
  articulos               Articulo[]  @relation("ArticuloCategoria")
  
}

model ArticuloPedido {
  cantidadArtPed          Int
  nroRenglon              Int @id @default(autoincrement())
  montoArticuloPe         Float
  PrecioUnitario          Float
  codPedido               Int?
  pedido                  Pedido? @relation(fields: [codPedido], references: [codPedido])
  codCarritoCompra        Int
  codArticulo             Int
  carritoCompra           CarritoCompras @relation(fields:[codCarritoCompra], references:[codCarritoCompra])
  articulo                Articulo @relation(fields:[codArticulo], references:[codArticulo])        

}


model EnvioPedido {
  codEnvio                Int @id @default(autoincrement())
  codigoSeguimiento        Int
  empresaEnvio            String
  costoEnvio              Float
  fechaSalida             DateTime? 
  fechaEntregaEstimada    DateTime
  fechaEntregaReal        DateTime?
  fechaHoraBjEnvioPedido  DateTime?
  codEstadoEnvio          Int
  codigoDireccion         Int
  estadoEnvio             EstadoEnvio @relation(fields:[codEstadoEnvio],references:[codEstadoEnvio])     
  direccion               Direccion @relation(fields:[codigoDireccion], references:[codigoDireccion])
}

model EstadoEnvio {
  codEstadoEnvio          Int @id @default(autoincrement())
  nombreEstadoEnvio       String
  fechaHoraBajaEE         DateTime?
  envioPedido             EnvioPedido[]
}

model TipoMedioPago{
  codTipoMedioPago            Int @id @default(autoincrement())
  nombreTipoMedioPago         String
  fechaHoraBajaTipoMedioPago  DateTime?
  clientes                    Cliente[]
  Pago                        Pago[]
}

model Pago{
  codPago                 Int @id @default(autoincrement())
  montoPagado             Float
  transaccionId           Int
  fechaHoraPago           DateTime?
  codTipoMedioPago        Int
  codEstadoPago           Int
  tipoMedioPago           TipoMedioPago @relation(fields:[codTipoMedioPago], references:[codTipoMedioPago])
  estadoPago              EstadoPago @relation(fields:[codEstadoPago], references:[codEstadoPago])
}

model EstadoPago{
  codEstadoPago           Int @id @default(autoincrement())
  nombreEstadoPago        String
  fechaHoraBajaEP         DateTime?
  pagos                   Pago[]
}